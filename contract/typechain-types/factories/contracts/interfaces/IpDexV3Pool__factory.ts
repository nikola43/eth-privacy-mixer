/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IpDexV3Pool,
  IpDexV3PoolInterface,
} from "../../../contracts/interfaces/IpDexV3Pool";

const _abi = [
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IpDexV3Pool__factory {
  static readonly abi = _abi;
  static createInterface(): IpDexV3PoolInterface {
    return new Interface(_abi) as IpDexV3PoolInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IpDexV3Pool {
    return new Contract(address, _abi, runner) as unknown as IpDexV3Pool;
  }
}
