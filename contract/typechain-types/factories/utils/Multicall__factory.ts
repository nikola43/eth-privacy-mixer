/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Multicall, MulticallInterface } from "../../utils/Multicall";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061048c806100206000396000f3fe60806040526004361061001e5760003560e01c8063ac9650d814610023575b600080fd5b6100366100313660046101ac565b61004c565b604051610043919061027c565b60405180910390f35b6060816001600160401b03811115610066576100666102de565b60405190808252806020026020018201604052801561009957816020015b60608152602001906001900390816100845790505b50905060005b828110156101a557600080308686858181106100bd576100bd6102f4565b90506020028101906100cf919061030a565b6040516100dd929190610357565b600060405180830381855af49150503d8060008114610118576040519150601f19603f3d011682016040523d82523d6000602084013e61011d565b606091505b5091509150816101725760448151101561013657600080fd5b600481019050808060200190518101906101509190610367565b60405162461bcd60e51b81526004016101699190610413565b60405180910390fd5b80848481518110610185576101856102f4565b60200260200101819052505050808061019d9061042d565b91505061009f565b5092915050565b600080602083850312156101bf57600080fd5b82356001600160401b03808211156101d657600080fd5b818501915085601f8301126101ea57600080fd5b8135818111156101f957600080fd5b8660208260051b850101111561020e57600080fd5b60209290920196919550909350505050565b60005b8381101561023b578181015183820152602001610223565b8381111561024a576000848401525b50505050565b60008151808452610268816020860160208601610220565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156102d157603f198886030184526102bf858351610250565b945092850192908501906001016102a3565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261032157600080fd5b8301803591506001600160401b0382111561033b57600080fd5b60200191503681900382131561035057600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561037957600080fd5b81516001600160401b038082111561039057600080fd5b818401915084601f8301126103a457600080fd5b8151818111156103b6576103b66102de565b604051601f8201601f19908116603f011681019083821181831017156103de576103de6102de565b816040528281528760208487010111156103f757600080fd5b610408836020830160208801610220565b979650505050505050565b6020815260006104266020830184610250565b9392505050565b600060001982141561044f57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212204b26b60a53f40c08c1acf9b466827193f03fefa30b5cf0d1a49c7aaa563552a264736f6c634300080a0033";

type MulticallConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MulticallConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Multicall__factory extends ContractFactory {
  constructor(...args: MulticallConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Multicall & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Multicall__factory {
    return super.connect(runner) as Multicall__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MulticallInterface {
    return new Interface(_abi) as MulticallInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Multicall {
    return new Contract(address, _abi, runner) as unknown as Multicall;
  }
}
