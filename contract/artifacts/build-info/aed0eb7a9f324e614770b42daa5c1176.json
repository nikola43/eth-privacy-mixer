{"id":"aed0eb7a9f324e614770b42daa5c1176","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.2) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates merkle trees that are safe\n * against this attack out of the box.\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     *\n     * _Available since v4.7._\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     *\n     * _Available since v4.4._\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     *\n     * _Available since v4.7._\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proofLen - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            require(proofPos == proofLen, \"MerkleProof: invalid multiproof\");\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proofLen - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            require(proofPos == proofLen, \"MerkleProof: invalid multiproof\");\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\n    }\n\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/MixerMerkleRoot.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\nimport {EnumerableSet} from \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport {MerkleProof} from \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title MixerMerkleRoot\n * @dev A contract that allows users to deposit ETH and uses per-deposit Merkle proofs to verify withdrawals\n * Uses role-based access control for different permission levels\n */\ncontract MixerMerkleRoot is AccessControl, ReentrancyGuard {\n    using EnumerableSet for EnumerableSet.Bytes32Set;\n\n    // Define role identifiers\n    bytes32 public constant OWNER_ROLE = keccak256(\"OWNER_ROLE\");\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n\n    // Maximum fee is 10% (1000 basis points)\n    uint256 public constant MAX_FEE = 1000;\n\n    address public feeRecipient;\n\n    struct Deposit {\n        bytes32 depositId; // merkle root\n        address user;\n        uint256 amount;\n    }\n\n    // Withdrawal tracking - depositId => user => releaseTime => withdrawn\n    mapping(bytes32 => mapping(address => mapping(uint256 => bool)))\n        private hasWithdrawn;\n\n    mapping(bytes32 => Deposit) private deposits;\n    EnumerableSet.Bytes32Set private depositIndex;\n    uint256 public fee = 100; // 1% fee (in basis points, 10000 = 100%)\n    bool public paused = false;\n\n    // Events\n    event DepositCreated(\n        bytes32 indexed depositId,\n        address indexed user,\n        uint256 amount\n    );\n    event FeeUpdated(uint256 oldFee, uint256 newFee);\n    event FeeRecipientUpdated(\n        address indexed oldRecipient,\n        address indexed newRecipient\n    );\n    event MerkleRootUpdated(\n        bytes32 indexed depositId,\n        bytes32 oldRoot,\n        bytes32 newRoot\n    );\n    event EtherTransferred(\n        bytes32 indexed depositId,\n        address indexed user,\n        uint256 amount,\n        uint256 releaseTime\n    );\n    event EmergencyPause(bool isPaused);\n    event WithdrawalExecuted(\n        bytes32 indexed depositId,\n        address indexed user,\n        uint256 amount,\n        uint256 releaseTime\n    );\n    event DepositDeleted(bytes32 indexed depositId);\n\n    /**\n     * @dev Modifier to check if the contract is not paused\n     */\n    modifier whenNotPaused() {\n        require(!paused, \"Contract is paused\");\n        _;\n    }\n\n    /**\n     * @dev Constructor that sets up initial roles\n     * @param admin Address to be granted ADMIN_ROLE\n     */\n    constructor(address admin) {\n        require(admin != address(0), \"Admin cannot be zero address\");\n\n        // Set up the deployer as the owner and default admin\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(OWNER_ROLE, msg.sender);\n        _grantRole(ADMIN_ROLE, admin);\n\n        feeRecipient = msg.sender; // Set the fee recipient to the contract deployer\n    }\n\n    /**\n     * @dev Returns the current fee in basis points\n     */\n    function getFee() external view returns (uint256) {\n        return fee;\n    }\n\n    /**\n     * @dev Returns the total number of deposits\n     */\n    function totalDeposits() external view returns (uint256) {\n        return depositIndex.length();\n    }\n\n    /**\n     * @dev Returns the deposit ID at the specified index\n     * @param index The index to query\n     */\n    function getDepositIdAt(uint256 index) external view returns (bytes32) {\n        require(index < depositIndex.length(), \"Index out of bounds\");\n        return depositIndex.at(index);\n    }\n\n    /**\n     * @dev Gets deposit details by deposit ID\n     * @param depositId The deposit ID to query\n     */\n    function getDeposit(\n        bytes32 depositId\n    ) external view returns (Deposit memory) {\n        require(\n            depositIndex.contains(depositId),\n            \"Query for nonexistent deposit\"\n        );\n        return deposits[depositId];\n    }\n\n    /**\n     * @dev Allows a user to deposit ETH with a Merkle root\n     * @param depositId The Merkle root containing user/amount/releaseTime data\n     */\n    function deposit(\n        bytes32 depositId\n    ) external payable nonReentrant whenNotPaused {\n        require(msg.value > 0, \"Deposit amount must be greater than zero\");\n        require(depositId != bytes32(0), \"Invalid Merkle root\");\n\n        // Check if depositId already exists\n        require(!depositIndex.contains(depositId), \"Deposit ID already exists\");\n\n        // Calculate fee\n        uint256 feeAmount = (msg.value * fee) / 10000;\n        uint256 netAmount = msg.value - feeAmount;\n\n        // Store the net deposit amount after fee and the Merkle root\n        deposits[depositId] = Deposit(depositId, msg.sender, netAmount);\n        depositIndex.add(depositId);\n\n        // Emit event before external calls (Checks-Effects-Interactions pattern)\n        emit DepositCreated(depositId, msg.sender, netAmount);\n\n        // Transfer the fee to the fee recipient\n        (bool feeTransferSuccess, ) = address(feeRecipient).call{\n            value: feeAmount\n        }(\"\");\n        require(feeTransferSuccess, \"Fee transfer failed\");\n    }\n\n    /**\n     * @dev Checks if a withdrawal has already been made\n     * @param depositId The deposit to check\n     * @param user The user address to check\n     * @param releaseTime The release time that identifies this withdrawal opportunity\n     */\n    function hasUserWithdrawn(\n        bytes32 depositId,\n        address user,\n        uint256 releaseTime\n    ) external view returns (bool) {\n        return hasWithdrawn[depositId][user][releaseTime];\n    }\n\n    /**\n     * @dev Checks if a withdrawal can be made\n     * @param depositId The deposit ID to check\n     * @param recipient The recipient address\n     * @param amount The amount to withdraw\n     * @param releaseTime The release time for the withdrawal\n     * @param merkleProof The Merkle proof to verify the withdrawal\n     */\n    function shouldTransferEther(\n        bytes32 depositId,\n        address recipient,\n        uint256 amount,\n        uint256 releaseTime,\n        bytes32[] calldata merkleProof\n    ) external view returns (bool) {\n        require(depositIndex.contains(depositId), \"Deposit ID does not exist\");\n        Deposit storage userDeposit = deposits[depositId];\n\n        // Verify the merkle proof\n        bytes32 leaf = keccak256(\n            abi.encodePacked(recipient, amount, releaseTime)\n        );\n        require(\n            MerkleProof.verify(merkleProof, userDeposit.depositId, leaf),\n            \"Invalid merkle proof\"\n        );\n\n        // Check if already withdrawn\n        require(\n            !hasWithdrawn[depositId][recipient][releaseTime],\n            \"Already withdrawn\"\n        );\n        // Check the release time has been reached\n        require(\n            releaseTime <= block.timestamp,\n            \"Release time not reached\"\n        );\n        // Check sufficient funds in the deposit\n        require(\n            userDeposit.amount >= amount,\n            \"Insufficient deposit amount\"\n        );\n        \n        return true;\n    }\n\n    /**\n     * @dev Allows an admin to transfer ETH from the contract\n     * @param depositId The ID of the deposit to transfer from\n     * @param recipient The address to send ETH to\n     * @param amount The amount of ETH to send\n     * @param releaseTime The release time for the withdrawal\n     * @param merkleProof The Merkle proof to verify the withdrawal\n     */\n    function transferEther(\n        bytes32 depositId,\n        address payable recipient,\n        uint256 amount,\n        uint256 releaseTime,\n        bytes32[] calldata merkleProof\n    ) external onlyRole(ADMIN_ROLE) nonReentrant whenNotPaused {\n        require(depositIndex.contains(depositId), \"Deposit ID does not exist\");\n        Deposit storage userDeposit = deposits[depositId];\n\n        bool shouldTransfer = this.shouldTransferEther(\n            depositId,\n            recipient,\n            amount,\n            releaseTime,\n            merkleProof\n        );\n        require(shouldTransfer, \"Invalid withdrawal conditions\");\n\n        // Mark as withdrawn before external call (Checks-Effects-Interactions pattern)\n        hasWithdrawn[depositId][recipient][releaseTime] = true;\n\n        // Update deposit amount\n        uint256 newAmount = userDeposit.amount - amount;\n        if (newAmount == 0) {\n            delete deposits[depositId];\n            depositIndex.remove(depositId);\n            emit DepositDeleted(depositId);\n        } else {\n            userDeposit.amount = newAmount;\n        }\n\n        // Emit event after state changes but before external call\n        emit EtherTransferred(depositId, recipient, amount, releaseTime);\n\n        // Transfer funds\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Transfer failed\");\n    }\n\n    /**\n     * @dev Allows the owner to withdraw a deposit in emergency situations\n     * @param depositId The ID of the deposit to withdraw\n     */\n    function emergencyWithdrawToUser(\n        bytes32 depositId\n    ) external onlyRole(OWNER_ROLE) nonReentrant {\n        require(depositIndex.contains(depositId), \"Deposit ID does not exist\");\n\n        Deposit memory userDeposit = deposits[depositId];\n        require(userDeposit.user != address(0), \"Deposit not found\");\n\n        uint256 amount = userDeposit.amount;\n        address user = userDeposit.user;\n\n        // Strictly follow Checks-Effects-Interactions pattern\n        delete deposits[depositId];\n        depositIndex.remove(depositId);\n\n        emit WithdrawalExecuted(depositId, user, amount, 0);\n        emit DepositDeleted(depositId);\n\n        (bool success, ) = user.call{value: amount}(\"\");\n        require(success, \"Transfer failed\");\n    }\n\n    /**\n     * @dev Allows the owner to withdraw a deposit in emergency situations\n     * @param depositId The ID of the deposit to withdraw\n     */\n    function deleteDeposit(\n        bytes32 depositId\n    ) external onlyRole(OWNER_ROLE) nonReentrant {\n        require(depositIndex.contains(depositId), \"Deposit ID does not exist\");\n\n        // Strictly follow Checks-Effects-Interactions pattern\n        delete deposits[depositId];\n        depositIndex.remove(depositId);\n        emit DepositDeleted(depositId);\n    }\n\n    /**\n     * @dev Allows the owner to set the fee recipient\n     * @param token The ERC20 token to recover\n     * @param to The address to send the recovered tokens to\n     */\n    function recoverERC20(\n        IERC20 token,\n        address to\n    ) external onlyRole(OWNER_ROLE) {\n        uint256 balance = token.balanceOf(address(this));\n        require(balance > 0, \"No tokens\");\n        token.transfer(to, balance);\n    }\n\n    /**\n     * @dev Allows the owner to set the fee recipient\n     * @param to The address to send the recovered eth to\n     * @param amount The amount of ETH to recover\n     */\n    function recoverEth(\n        address to,\n        uint256 amount\n    ) external onlyRole(OWNER_ROLE) {\n        uint256 balance = address(this).balance;\n        require(balance > 0, \"No ETH\");\n        require(amount <= balance, \"Amount exceeds balance\");\n        (bool success, ) = to.call{value: balance}(\"\");\n        require(success, \"Transfer failed\");\n    }\n\n    /**\n     * @dev Allows the owner to set the fee percentage\n     * @param newFee The new fee in basis points (100 = 1%)\n     */\n    function setFee(uint256 newFee) external onlyRole(OWNER_ROLE) {\n        require(newFee > 0, \"Fee must be greater than zero\");\n        require(newFee <= MAX_FEE, \"Fee cannot exceed maximum (10%)\");\n\n        // Save the old fee before updating\n        uint256 oldFee = fee;\n        fee = newFee;\n\n        // Use old and new fee in the event\n        emit FeeUpdated(oldFee, newFee);\n    }\n\n    /**\n     * @dev Allows the owner to set the fee recipient\n     * @param newFeeRecipient The new fee recipient address\n     */\n    function setFeeRecipient(\n        address newFeeRecipient\n    ) external onlyRole(OWNER_ROLE) {\n        require(newFeeRecipient != address(0), \"Invalid fee recipient\");\n\n        // Save the old fee recipient before updating\n        address oldFeeRecipient = feeRecipient;\n        feeRecipient = newFeeRecipient;\n\n        // Use old and new fee recipients in the event\n        emit FeeRecipientUpdated(oldFeeRecipient, newFeeRecipient);\n    }\n\n    /**\n     * @dev Toggles the paused state of the contract\n     * @param _paused The new paused state\n     */\n    function setPaused(bool _paused) external onlyRole(OWNER_ROLE) {\n        paused = _paused;\n        emit EmergencyPause(_paused);\n    }\n\n    /**\n     * @dev Allows the contract to receive ETH\n     */\n    receive() external payable {}\n\n    /**\n     * @dev Fallback function\n     */\n    fallback() external payable {}\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":10},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[315],"Context":[561],"ERC165":[1342],"IAccessControl":[388],"IERC165":[1354],"Math":[2220],"SignedMath":[2325],"Strings":[790]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":389,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":562,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":791,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":1343,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nameLocations":["1967:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":561,"src":"1967:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1967:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nameLocations":["1976:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"1976:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1976:14:0"},{"baseName":{"id":11,"name":"ERC165","nameLocations":["1992:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":1342,"src":"1992:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1992:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":315,"linearizedBaseContracts":[315,1342,1354,388,561],"name":"AccessControl","nameLocation":"1950:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nameLocation":"2056:7:0","nodeType":"VariableDeclaration","scope":19,"src":"2031:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2031:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"2050:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nameLocation":"2081:9:0","nodeType":"VariableDeclaration","scope":19,"src":"2073:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2073:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2012:8:0","nodeType":"StructDefinition","scope":315,"src":"2005:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nameLocation":"2140:6:0","nodeType":"VariableDeclaration","scope":315,"src":"2103:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2103:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nameLocations":["2122:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":19,"src":"2122:8:0"},"referencedDeclaration":19,"src":"2122:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2177:18:0","nodeType":"VariableDeclaration","scope":315,"src":"2153:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2198:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2621:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2642:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":92,"src":"2631:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2631:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2631:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2657:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2209:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nameLocation":"2598:8:0","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nameLocation":"2615:4:0","nodeType":"VariableDeclaration","scope":38,"src":"2607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2606:14:0"},"src":"2589:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[1341],"body":{"id":59,"nodeType":"Block","src":"2823:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2840:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2860:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2855:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$388","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2876:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2855:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2840:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2915:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2891:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$315_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2897:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1341,"src":"2891:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2891:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2840:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2833:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2671:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2741:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2799:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"2766:11:0","nodeType":"VariableDeclaration","scope":60,"src":"2759:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2759:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2758:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"2817:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2817:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2816:6:0"},"scope":315,"src":"2732:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[355],"body":{"id":78,"nodeType":"Block","src":"3113:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3130:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3137:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3143:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3130:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3151:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"3123:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2940:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3030:7:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3089:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nameLocation":"3046:4:0","nodeType":"VariableDeclaration","scope":79,"src":"3038:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3038:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nameLocation":"3060:7:0","nodeType":"VariableDeclaration","scope":79,"src":"3052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"3052:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3037:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"3107:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"3107:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3106:6:0"},"scope":315,"src":"3021:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3516:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3537:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"3543:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3543:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":131,"src":"3526:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3526:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3526:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3172:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3469:10:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nameLocation":"3488:4:0","nodeType":"VariableDeclaration","scope":92,"src":"3480:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3480:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3479:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3516:0:0"},"scope":315,"src":"3460:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3917:406:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3931:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3940:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3946:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3932:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3932:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3927:390:0","trueBody":{"id":128,"nodeType":"Block","src":"3956:361:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4064:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4135:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"4115:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$790_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4123:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":764,"src":"4115:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4115:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4169:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":120,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4242:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4234:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4234:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4234:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4249:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":116,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"4214:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$790_$","typeString":"type(library Strings)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4222:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":744,"src":"4214:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4022:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4026:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"4022:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4022:252:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3994:6:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3994:298:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3970:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3970:336:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"3970:336:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3569:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3853:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nameLocation":"3872:4:0","nodeType":"VariableDeclaration","scope":131,"src":"3864:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3864:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nameLocation":"3886:7:0","nodeType":"VariableDeclaration","scope":131,"src":"3878:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3863:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3917:0:0"},"scope":315,"src":"3844:479:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[363],"body":{"id":145,"nodeType":"Block","src":"4587:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":140,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4604:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":142,"indexExpression":{"id":141,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4611:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4604:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4617:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4604:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":139,"id":144,"nodeType":"Return","src":"4597:29:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4329:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4513:12:0","nodeType":"FunctionDefinition","overrides":{"id":136,"nodeType":"OverrideSpecifier","overrides":[],"src":"4560:8:0"},"parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4534:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4526:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4526:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4525:14:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":146,"src":"4578:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4578:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4577:9:0"},"scope":315,"src":"4504:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[371],"body":{"id":165,"nodeType":"Block","src":"5032:42:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5053:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"5059:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5042:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5042:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"5042:25:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4639:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5025:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5012:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5012:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["5003:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5003:8:0"},"nodeType":"ModifierInvocation","src":"5003:28:0"}],"name":"grantRole","nameLocation":"4938:9:0","nodeType":"FunctionDefinition","overrides":{"id":153,"nodeType":"OverrideSpecifier","overrides":[],"src":"4994:8:0"},"parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4956:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4948:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4948:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nameLocation":"4970:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4962:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"4962:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4947:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"5032:0:0"},"scope":315,"src":"4929:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[379],"body":{"id":185,"nodeType":"Block","src":"5458:43:0","statements":[{"expression":{"arguments":[{"id":181,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5480:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":182,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5486:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5468:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5468:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"5468:26:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"5080:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":186,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5451:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":175,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5438:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5438:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":178,"kind":"modifierInvocation","modifierName":{"id":174,"name":"onlyRole","nameLocations":["5429:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5429:8:0"},"nodeType":"ModifierInvocation","src":"5429:28:0"}],"name":"revokeRole","nameLocation":"5363:10:0","nodeType":"FunctionDefinition","overrides":{"id":173,"nodeType":"OverrideSpecifier","overrides":[],"src":"5420:8:0"},"parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5382:4:0","nodeType":"VariableDeclaration","scope":186,"src":"5374:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5374:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"account","nameLocation":"5396:7:0","nodeType":"VariableDeclaration","scope":186,"src":"5388:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5373:31:0"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"5458:0:0"},"scope":315,"src":"5354:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[387],"body":{"id":208,"nodeType":"Block","src":"6115:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"6144:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6144:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6133:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6158:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6125:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6125:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"6125:83:0"},{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6231:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6237:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"6219:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6219:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"6219:26:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5507:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6047:12:0","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"6106:8:0"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"role","nameLocation":"6068:4:0","nodeType":"VariableDeclaration","scope":209,"src":"6060:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6060:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"account","nameLocation":"6082:7:0","nodeType":"VariableDeclaration","scope":209,"src":"6074:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"6074:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6059:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"6115:0:0"},"scope":315,"src":"6038:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"7005:42:0","statements":[{"expression":{"arguments":[{"id":218,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"7026:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":219,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7032:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"7015:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7015:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"7015:25:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"6258:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6946:10:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6965:4:0","nodeType":"VariableDeclaration","scope":223,"src":"6957:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6957:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"account","nameLocation":"6979:7:0","nodeType":"VariableDeclaration","scope":223,"src":"6971:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6971:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6956:31:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"7005:0:0"},"scope":315,"src":"6937:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"7245:174:0","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7263:17:0","nodeType":"VariableDeclaration","scope":250,"src":"7255:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7255:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7296:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":233,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"7283:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7283:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7255:46:0"},{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":237,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7311:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":239,"indexExpression":{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7318:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7311:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7324:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7311:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":241,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7336:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7311:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":243,"nodeType":"ExpressionStatement","src":"7311:34:0"},{"eventCall":{"arguments":[{"id":245,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7377:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":246,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7383:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":247,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7402:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":244,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7360:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7360:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"EmitStatement","src":"7355:57:0"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"7053:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7181:13:0","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"role","nameLocation":"7203:4:0","nodeType":"VariableDeclaration","scope":251,"src":"7195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"adminRole","nameLocation":"7217:9:0","nodeType":"VariableDeclaration","scope":251,"src":"7209:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7209:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7194:33:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"7245:0:0"},"scope":315,"src":"7172:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"7655:165:0","statements":[{"condition":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7669:23:0","subExpression":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7678:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7670:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7670:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"7665:149:0","trueBody":{"id":280,"nodeType":"Block","src":"7694:120:0","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":264,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7708:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":266,"indexExpression":{"id":265,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7715:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7708:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7721:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7708:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":269,"indexExpression":{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7729:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7708:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7740:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7708:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"ExpressionStatement","src":"7708:36:0"},{"eventCall":{"arguments":[{"id":274,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7775:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7781:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"7790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"7763:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"EmitStatement","src":"7758:45:0"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"7425:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7596:10:0","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"role","nameLocation":"7615:4:0","nodeType":"VariableDeclaration","scope":283,"src":"7607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"account","nameLocation":"7629:7:0","nodeType":"VariableDeclaration","scope":283,"src":"7621:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"7621:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7606:31:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"7655:0:0"},"scope":315,"src":"7587:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"8060:165:0","statements":[{"condition":{"arguments":[{"id":292,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8082:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8088:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"8074:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8074:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"IfStatement","src":"8070:149:0","trueBody":{"id":311,"nodeType":"Block","src":"8098:121:0","statements":[{"expression":{"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":295,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"8112:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":297,"indexExpression":{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8119:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8112:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8125:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"8112:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":300,"indexExpression":{"id":299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8112:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8144:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8112:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":303,"nodeType":"ExpressionStatement","src":"8112:37:0"},{"eventCall":{"arguments":[{"id":305,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8180:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8186:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"8195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"8168:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8168:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"EmitStatement","src":"8163:45:0"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"7826:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8000:11:0","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"role","nameLocation":"8020:4:0","nodeType":"VariableDeclaration","scope":314,"src":"8012:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8012:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"account","nameLocation":"8034:7:0","nodeType":"VariableDeclaration","scope":314,"src":"8026:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"8026:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8011:31:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"8060:0:0"},"scope":315,"src":"7991:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":316,"src":"1932:6295:0","usedErrors":[],"usedEvents":[327,336,345]}],"src":"108:8120:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[388]},"id":389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"119:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":388,"linearizedBaseContracts":[388],"name":"IAccessControl","nameLocation":"219:14:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"240:292:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":327,"name":"RoleAdminChanged","nameLocation":"543:16:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:1","nodeType":"VariableDeclaration","scope":327,"src":"560:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:1","nodeType":"VariableDeclaration","scope":327,"src":"582:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:1","nodeType":"VariableDeclaration","scope":327,"src":"617:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:1"},"src":"537:110:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"653:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":336,"name":"RoleGranted","nameLocation":"876:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:1","nodeType":"VariableDeclaration","scope":336,"src":"888:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:1","nodeType":"VariableDeclaration","scope":336,"src":"910:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:1","nodeType":"VariableDeclaration","scope":336,"src":"935:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:1"},"src":"870:89:1"},{"anonymous":false,"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"965:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":345,"name":"RoleRevoked","nameLocation":"1251:11:1","nodeType":"EventDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1263:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1285:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:1","nodeType":"VariableDeclaration","scope":345,"src":"1310:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:1"},"src":"1245:89:1"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1340:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":355,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:1","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"1446:4:1","nodeType":"VariableDeclaration","scope":355,"src":"1438:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"account","nameLocation":"1460:7:1","nodeType":"VariableDeclaration","scope":355,"src":"1452:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:1"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"1492:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":352,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:1"},"scope":388,"src":"1421:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"1504:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":363,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"role","nameLocation":"1723:4:1","nodeType":"VariableDeclaration","scope":363,"src":"1715:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:1"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"1752:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:1"},"scope":388,"src":"1693:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"1767:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":371,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:1","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"role","nameLocation":"2038:4:1","nodeType":"VariableDeclaration","scope":371,"src":"2030:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"account","nameLocation":"2052:7:1","nodeType":"VariableDeclaration","scope":371,"src":"2044:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:1"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"2069:0:1"},"scope":388,"src":"2011:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"2076:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":379,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:1","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"role","nameLocation":"2332:4:1","nodeType":"VariableDeclaration","scope":379,"src":"2324:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"account","nameLocation":"2346:7:1","nodeType":"VariableDeclaration","scope":379,"src":"2338:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:1"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"2363:0:1"},"scope":388,"src":"2304:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2370:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":387,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:1","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"role","nameLocation":"2885:4:1","nodeType":"VariableDeclaration","scope":387,"src":"2877:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"account","nameLocation":"2899:7:1","nodeType":"VariableDeclaration","scope":387,"src":"2891:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:1"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"2916:0:1"},"scope":388,"src":"2855:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":389,"src":"209:2710:1","usedErrors":[],"usedEvents":[327,336,345]}],"src":"94:2826:1"},"id":1},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[453]},"id":454,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":390,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:2"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"137:750:2","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":453,"linearizedBaseContracts":[453],"name":"ReentrancyGuard","nameLocation":"906:15:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":394,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:2","nodeType":"VariableDeclaration","scope":453,"src":"1676:41:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":397,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:2","nodeType":"VariableDeclaration","scope":453,"src":"1723:37:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":395,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":399,"mutability":"mutable","name":"_status","nameLocation":"1783:7:2","nodeType":"VariableDeclaration","scope":453,"src":"1767:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":406,"nodeType":"Block","src":"1811:39:2","statements":[{"expression":{"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":402,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"1821:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":403,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"1831:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":405,"nodeType":"ExpressionStatement","src":"1821:22:2"}]},"id":407,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[],"src":"1808:2:2"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[],"src":"1811:0:2"},"scope":453,"src":"1797:53:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":417,"nodeType":"Block","src":"2251:79:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":410,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"2261:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"ExpressionStatement","src":"2261:21:2"},{"id":413,"nodeType":"PlaceholderStatement","src":"2292:1:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":414,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"2303:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":416,"nodeType":"ExpressionStatement","src":"2303:20:2"}]},"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"1856:366:2","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":418,"name":"nonReentrant","nameLocation":"2236:12:2","nodeType":"ModifierDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[],"src":"2248:2:2"},"src":"2227:103:2","virtual":false,"visibility":"internal"},{"body":{"id":432,"nodeType":"Block","src":"2375:248:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2468:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":423,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2479:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":421,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"2460:63:2"},{"expression":{"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":428,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2598:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":429,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2608:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":431,"nodeType":"ExpressionStatement","src":"2598:18:2"}]},"id":433,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:2","nodeType":"FunctionDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[],"src":"2364:2:2"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[],"src":"2375:0:2"},"scope":453,"src":"2336:287:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":440,"nodeType":"Block","src":"2667:171:2","statements":[{"expression":{"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":436,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2809:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":437,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2819:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":439,"nodeType":"ExpressionStatement","src":"2809:22:2"}]},"id":441,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:2","nodeType":"FunctionDefinition","parameters":{"id":434,"nodeType":"ParameterList","parameters":[],"src":"2656:2:2"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[],"src":"2667:0:2"},"scope":453,"src":"2629:209:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":451,"nodeType":"Block","src":"3081:43:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":447,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"3098:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":448,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"3109:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":446,"id":450,"nodeType":"Return","src":"3091:26:2"}]},"documentation":{"id":442,"nodeType":"StructuredDocumentation","src":"2844:168:2","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":452,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:2","nodeType":"FunctionDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[],"src":"3049:2:2"},"returnParameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":452,"src":"3075:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":444,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:2"},"scope":453,"src":"3017:107:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":454,"src":"888:2238:2","usedErrors":[],"usedEvents":[]}],"src":"112:3015:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[531]},"id":532,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":455,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":456,"nodeType":"StructuredDocumentation","src":"131:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":531,"linearizedBaseContracts":[531],"name":"IERC20","nameLocation":"212:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"225:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":465,"name":"Transfer","nameLocation":"394:8:3","nodeType":"EventDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:3","nodeType":"VariableDeclaration","scope":465,"src":"403:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":461,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:3","nodeType":"VariableDeclaration","scope":465,"src":"425:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:3","nodeType":"VariableDeclaration","scope":465,"src":"445:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:3"},"src":"388:72:3"},{"anonymous":false,"documentation":{"id":466,"nodeType":"StructuredDocumentation","src":"466:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":474,"name":"Approval","nameLocation":"625:8:3","nodeType":"EventDefinition","parameters":{"id":473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:3","nodeType":"VariableDeclaration","scope":474,"src":"634:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":470,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:3","nodeType":"VariableDeclaration","scope":474,"src":"657:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":472,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:3","nodeType":"VariableDeclaration","scope":474,"src":"682:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":471,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:3"},"src":"619:78:3"},{"documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"703:66:3","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":480,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":480,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":531,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"835:72:3","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":488,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":488,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":488,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":485,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":531,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"986:202:3","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":498,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:3","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"to","nameLocation":"1219:2:3","nodeType":"VariableDeclaration","scope":498,"src":"1211:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":490,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"amount","nameLocation":"1231:6:3","nodeType":"VariableDeclaration","scope":498,"src":"1223:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:3"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":498,"src":"1257:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":495,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:3"},"scope":531,"src":"1193:70:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"1269:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":508,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:3","nodeType":"FunctionDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"owner","nameLocation":"1565:5:3","nodeType":"VariableDeclaration","scope":508,"src":"1557:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":503,"mutability":"mutable","name":"spender","nameLocation":"1580:7:3","nodeType":"VariableDeclaration","scope":508,"src":"1572:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:3"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":508,"src":"1612:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":505,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:3"},"scope":531,"src":"1538:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"1627:642:3","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":518,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:3","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"spender","nameLocation":"2299:7:3","nodeType":"VariableDeclaration","scope":518,"src":"2291:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"amount","nameLocation":"2316:6:3","nodeType":"VariableDeclaration","scope":518,"src":"2308:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":512,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:3"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":518,"src":"2342:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":515,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:3"},"scope":531,"src":"2274:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":519,"nodeType":"StructuredDocumentation","src":"2354:287:3","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":530,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:3","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"mutability":"mutable","name":"from","nameLocation":"2676:4:3","nodeType":"VariableDeclaration","scope":530,"src":"2668:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":520,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":523,"mutability":"mutable","name":"to","nameLocation":"2690:2:3","nodeType":"VariableDeclaration","scope":530,"src":"2682:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"amount","nameLocation":"2702:6:3","nodeType":"VariableDeclaration","scope":530,"src":"2694:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":524,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:3"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":530,"src":"2728:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":527,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:3"},"scope":531,"src":"2646:88:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":532,"src":"202:2534:3","usedErrors":[],"usedEvents":[465,474]}],"src":"106:2631:3"},"id":3},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[561]},"id":562,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":533,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":534,"nodeType":"StructuredDocumentation","src":"126:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":561,"linearizedBaseContracts":[561],"name":"Context","nameLocation":"641:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":542,"nodeType":"Block","src":"717:34:4","statements":[{"expression":{"expression":{"id":539,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:4","memberName":"sender","nodeType":"MemberAccess","src":"734:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":538,"id":541,"nodeType":"Return","src":"727:17:4"}]},"id":543,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:4","nodeType":"FunctionDefinition","parameters":{"id":535,"nodeType":"ParameterList","parameters":[],"src":"674:2:4"},"returnParameters":{"id":538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":543,"src":"708:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:4"},"scope":561,"src":"655:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":551,"nodeType":"Block","src":"824:32:4","statements":[{"expression":{"expression":{"id":548,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:4","memberName":"data","nodeType":"MemberAccess","src":"841:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":547,"id":550,"nodeType":"Return","src":"834:15:4"}]},"id":552,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:4","nodeType":"FunctionDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[],"src":"774:2:4"},"returnParameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":552,"src":"808:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":545,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:4"},"scope":561,"src":"757:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":559,"nodeType":"Block","src":"934:25:4","statements":[{"expression":{"hexValue":"30","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":556,"id":558,"nodeType":"Return","src":"944:8:4"}]},"id":560,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:4","nodeType":"FunctionDefinition","parameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"891:2:4"},"returnParameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":560,"src":"925:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":554,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:4"},"scope":561,"src":"862:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":562,"src":"623:338:4","usedErrors":[],"usedEvents":[]}],"src":"101:861:4"},"id":4},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2220],"SignedMath":[2325],"Strings":[790]},"id":791,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":563,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":564,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":791,"sourceUnit":2221,"src":"126:25:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":565,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":791,"sourceUnit":2326,"src":"152:31:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"185:34:5","text":" @dev String operations."},"fullyImplemented":true,"id":790,"linearizedBaseContracts":[790],"name":"Strings","nameLocation":"228:7:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":569,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:5","nodeType":"VariableDeclaration","scope":790,"src":"242:54:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":567,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:5","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":572,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:5","nodeType":"VariableDeclaration","scope":790,"src":"302:43:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":570,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:5","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":619,"nodeType":"Block","src":"518:625:5","statements":[{"id":618,"nodeType":"UncheckedBlock","src":"528:609:5","statements":[{"assignments":[581],"declarations":[{"constant":false,"id":581,"mutability":"mutable","name":"length","nameLocation":"560:6:5","nodeType":"VariableDeclaration","scope":618,"src":"552:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":588,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"580:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":582,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"569:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2220_$","typeString":"type(library Math)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:5","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2057,"src":"569:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:5"},{"assignments":[590],"declarations":[{"constant":false,"id":590,"mutability":"mutable","name":"buffer","nameLocation":"618:6:5","nodeType":"VariableDeclaration","scope":618,"src":"604:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":589,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":595,"initialValue":{"arguments":[{"id":593,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"638:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":591,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:5"},{"assignments":[597],"declarations":[{"constant":false,"id":597,"mutability":"mutable","name":"ptr","nameLocation":"667:3:5","nodeType":"VariableDeclaration","scope":618,"src":"659:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":598,"nodeType":"VariableDeclarationStatement","src":"659:11:5"},{"AST":{"nodeType":"YulBlock","src":"740:67:5","statements":[{"nodeType":"YulAssignment","src":"758:35:5","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:5","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:5"},"nodeType":"YulFunctionCall","src":"777:15:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:5"},"nodeType":"YulFunctionCall","src":"765:28:5"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:5"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":590,"isOffset":false,"isSlot":false,"src":"769:6:5","valueSize":1},{"declaration":581,"isOffset":false,"isSlot":false,"src":"785:6:5","valueSize":1},{"declaration":597,"isOffset":false,"isSlot":false,"src":"758:3:5","valueSize":1}],"id":599,"nodeType":"InlineAssembly","src":"731:76:5"},{"body":{"id":614,"nodeType":"Block","src":"833:267:5","statements":[{"expression":{"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:5","subExpression":{"id":601,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"851:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":603,"nodeType":"ExpressionStatement","src":"851:5:5"},{"AST":{"nodeType":"YulBlock","src":"934:84:5","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:5"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:5","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:5"},"nodeType":"YulFunctionCall","src":"974:14:5"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:5"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:5"},"nodeType":"YulFunctionCall","src":"969:30:5"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:5"},"nodeType":"YulFunctionCall","src":"956:44:5"},"nodeType":"YulExpressionStatement","src":"956:44:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":569,"isOffset":false,"isSlot":false,"src":"990:8:5","valueSize":1},{"declaration":597,"isOffset":false,"isSlot":false,"src":"964:3:5","valueSize":1},{"declaration":575,"isOffset":false,"isSlot":false,"src":"978:5:5","valueSize":1}],"id":604,"nodeType":"InlineAssembly","src":"925:93:5"},{"expression":{"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"1035:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":608,"nodeType":"ExpressionStatement","src":"1035:11:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"1068:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":613,"nodeType":"IfStatement","src":"1064:21:5","trueBody":{"id":612,"nodeType":"Break","src":"1080:5:5"}}]},"condition":{"hexValue":"74727565","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":615,"nodeType":"WhileStatement","src":"820:280:5"},{"expression":{"id":616,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"1120:6:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":579,"id":617,"nodeType":"Return","src":"1113:13:5"}]}]},"documentation":{"id":573,"nodeType":"StructuredDocumentation","src":"352:90:5","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":620,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:5","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"value","nameLocation":"473:5:5","nodeType":"VariableDeclaration","scope":620,"src":"465:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":574,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:5"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":620,"src":"503:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":577,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:5"},"scope":790,"src":"447:696:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":647,"nodeType":"Block","src":"1313:103:5","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"1354:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:5","trueExpression":{"hexValue":"2d","id":635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"1400:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":639,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"1385:10:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$2325_$","typeString":"type(library SignedMath)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:5","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":2324,"src":"1385:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":638,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[620,648],"referencedDeclaration":620,"src":"1376:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":630,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:5","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":628,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:5","typeDescriptions":{}}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":627,"id":646,"nodeType":"Return","src":"1323:86:5"}]},"documentation":{"id":621,"nodeType":"StructuredDocumentation","src":"1149:89:5","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":648,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:5","nodeType":"FunctionDefinition","parameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"value","nameLocation":"1268:5:5","nodeType":"VariableDeclaration","scope":648,"src":"1261:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":622,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:5"},"returnParameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":648,"src":"1298:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":625,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:5"},"scope":790,"src":"1243:173:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":667,"nodeType":"Block","src":"1595:100:5","statements":[{"id":666,"nodeType":"UncheckedBlock","src":"1605:84:5","statements":[{"expression":{"arguments":[{"id":657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"1648:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"1667:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":658,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"1655:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2220_$","typeString":"type(library Math)"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:5","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2180,"src":"1655:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":656,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[668,744,764],"referencedDeclaration":744,"src":"1636:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":655,"id":665,"nodeType":"Return","src":"1629:49:5"}]}]},"documentation":{"id":649,"nodeType":"StructuredDocumentation","src":"1422:94:5","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":668,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:5","nodeType":"FunctionDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"value","nameLocation":"1550:5:5","nodeType":"VariableDeclaration","scope":668,"src":"1542:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:5"},"returnParameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":668,"src":"1580:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":653,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:5"},"scope":790,"src":"1521:174:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":743,"nodeType":"Block","src":"1908:347:5","statements":[{"assignments":[679],"declarations":[{"constant":false,"id":679,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:5","nodeType":"VariableDeclaration","scope":743,"src":"1918:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":678,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":688,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":683,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"1954:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":680,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:5"},{"expression":{"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":689,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"1975:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":691,"indexExpression":{"hexValue":"30","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":694,"nodeType":"ExpressionStatement","src":"1975:15:5"},{"expression":{"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":695,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"2000:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":697,"indexExpression":{"hexValue":"31","id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":700,"nodeType":"ExpressionStatement","src":"2000:15:5"},{"body":{"id":729,"nodeType":"Block","src":"2070:83:5","statements":[{"expression":{"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":715,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"2084:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":717,"indexExpression":{"id":716,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"2091:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":718,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"2096:8:5","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":722,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"2105:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:5","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":724,"nodeType":"ExpressionStatement","src":"2084:33:5"},{"expression":{"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"2131:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":728,"nodeType":"ExpressionStatement","src":"2131:11:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":709,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"2058:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":730,"initializationExpression":{"assignments":[702],"declarations":[{"constant":false,"id":702,"mutability":"mutable","name":"i","nameLocation":"2038:1:5","nodeType":"VariableDeclaration","scope":730,"src":"2030:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":708,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":704,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"2046:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:5"},"loopExpression":{"expression":{"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:5","subExpression":{"id":712,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"2067:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":714,"nodeType":"ExpressionStatement","src":"2065:3:5"},"nodeType":"ForStatement","src":"2025:128:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"2170:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":731,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":737,"nodeType":"ExpressionStatement","src":"2162:55:5"},{"expression":{"arguments":[{"id":740,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"2241:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":738,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:5","typeDescriptions":{}}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":677,"id":742,"nodeType":"Return","src":"2227:21:5"}]},"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"1701:112:5","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":744,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:5","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"value","nameLocation":"1847:5:5","nodeType":"VariableDeclaration","scope":744,"src":"1839:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":670,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":673,"mutability":"mutable","name":"length","nameLocation":"1862:6:5","nodeType":"VariableDeclaration","scope":744,"src":"1854:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":672,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:5"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":744,"src":"1893:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":675,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:5"},"scope":790,"src":"1818:437:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":763,"nodeType":"Block","src":"2480:76:5","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":757,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"2525:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":755,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:5","typeDescriptions":{}}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":753,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:5","typeDescriptions":{}}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":760,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"2533:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":752,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[668,744,764],"referencedDeclaration":744,"src":"2497:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":751,"id":762,"nodeType":"Return","src":"2490:59:5"}]},"documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"2261:141:5","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":764,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:5","nodeType":"FunctionDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"addr","nameLocation":"2436:4:5","nodeType":"VariableDeclaration","scope":764,"src":"2428:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:5"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":764,"src":"2465:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":749,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:5"},"scope":790,"src":"2407:149:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":788,"nodeType":"Block","src":"2711:66:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":777,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"2744:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":775,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:5","typeDescriptions":{}}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":774,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":783,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"2767:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":781,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:5","typeDescriptions":{}}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":780,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":773,"id":787,"nodeType":"Return","src":"2721:49:5"}]},"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"2562:66:5","text":" @dev Returns true if the two strings are equal."},"id":789,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:5","nodeType":"FunctionDefinition","parameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"a","nameLocation":"2662:1:5","nodeType":"VariableDeclaration","scope":789,"src":"2648:15:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":766,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"b","nameLocation":"2679:1:5","nodeType":"VariableDeclaration","scope":789,"src":"2665:15:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":768,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:5"},"returnParameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":789,"src":"2705:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":771,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:5"},"scope":790,"src":"2633:144:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":791,"src":"220:2559:5","usedErrors":[],"usedEvents":[]}],"src":"101:2679:5"},"id":5},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[1318]},"id":1319,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":792,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"143:658:6","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates merkle trees that are safe\n against this attack out of the box."},"fullyImplemented":true,"id":1318,"linearizedBaseContracts":[1318],"name":"MerkleProof","nameLocation":"810:11:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":813,"nodeType":"Block","src":"1253:57:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":807,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"1283:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":808,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"1290:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":806,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"1270:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1270:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":810,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"1299:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1270:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":805,"id":812,"nodeType":"Return","src":"1263:40:6"}]},"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"828:323:6","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":814,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1165:6:6","nodeType":"FunctionDefinition","parameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"proof","nameLocation":"1189:5:6","nodeType":"VariableDeclaration","scope":814,"src":"1172:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1172:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":796,"nodeType":"ArrayTypeName","src":"1172:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":799,"mutability":"mutable","name":"root","nameLocation":"1204:4:6","nodeType":"VariableDeclaration","scope":814,"src":"1196:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":798,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1196:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":801,"mutability":"mutable","name":"leaf","nameLocation":"1218:4:6","nodeType":"VariableDeclaration","scope":814,"src":"1210:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1210:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1171:52:6"},"returnParameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":814,"src":"1247:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":803,"name":"bool","nodeType":"ElementaryTypeName","src":"1247:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1246:6:6"},"scope":1318,"src":"1156:154:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":834,"nodeType":"Block","src":"1518:65:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":828,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"1556:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":829,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"1563:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":827,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1535:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1535:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":831,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"1572:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1535:41:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":826,"id":833,"nodeType":"Return","src":"1528:48:6"}]},"documentation":{"id":815,"nodeType":"StructuredDocumentation","src":"1316:90:6","text":" @dev Calldata version of {verify}\n _Available since v4.7._"},"id":835,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"1420:14:6","nodeType":"FunctionDefinition","parameters":{"id":823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"proof","nameLocation":"1454:5:6","nodeType":"VariableDeclaration","scope":835,"src":"1435:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1435:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":817,"nodeType":"ArrayTypeName","src":"1435:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"root","nameLocation":"1469:4:6","nodeType":"VariableDeclaration","scope":835,"src":"1461:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1461:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":822,"mutability":"mutable","name":"leaf","nameLocation":"1483:4:6","nodeType":"VariableDeclaration","scope":835,"src":"1475:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1475:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1434:54:6"},"returnParameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":835,"src":"1512:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":824,"name":"bool","nodeType":"ElementaryTypeName","src":"1512:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1511:6:6"},"scope":1318,"src":"1411:172:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":874,"nodeType":"Block","src":"2026:198:6","statements":[{"assignments":[847],"declarations":[{"constant":false,"id":847,"mutability":"mutable","name":"computedHash","nameLocation":"2044:12:6","nodeType":"VariableDeclaration","scope":874,"src":"2036:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":846,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2036:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":849,"initialValue":{"id":848,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"2059:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2036:27:6"},{"body":{"id":870,"nodeType":"Block","src":"2116:73:6","statements":[{"expression":{"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":861,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"2130:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":863,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"2155:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":864,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"2169:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":866,"indexExpression":{"id":865,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"2175:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2169:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":862,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"2145:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2130:48:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":869,"nodeType":"ExpressionStatement","src":"2130:48:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":854,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"2093:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":855,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"2097:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2103:6:6","memberName":"length","nodeType":"MemberAccess","src":"2097:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2093:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":871,"initializationExpression":{"assignments":[851],"declarations":[{"constant":false,"id":851,"mutability":"mutable","name":"i","nameLocation":"2086:1:6","nodeType":"VariableDeclaration","scope":871,"src":"2078:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"2078:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":853,"initialValue":{"hexValue":"30","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2090:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2078:13:6"},"loopExpression":{"expression":{"id":859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2111:3:6","subExpression":{"id":858,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"2111:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":860,"nodeType":"ExpressionStatement","src":"2111:3:6"},"nodeType":"ForStatement","src":"2073:116:6"},{"expression":{"id":872,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"2205:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":845,"id":873,"nodeType":"Return","src":"2198:19:6"}]},"documentation":{"id":836,"nodeType":"StructuredDocumentation","src":"1589:340:6","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"},"id":875,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"1943:12:6","nodeType":"FunctionDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"proof","nameLocation":"1973:5:6","nodeType":"VariableDeclaration","scope":875,"src":"1956:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":837,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1956:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":838,"nodeType":"ArrayTypeName","src":"1956:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":841,"mutability":"mutable","name":"leaf","nameLocation":"1988:4:6","nodeType":"VariableDeclaration","scope":875,"src":"1980:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1980:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1955:38:6"},"returnParameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":875,"src":"2017:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":843,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2017:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2016:9:6"},"scope":1318,"src":"1934:290:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":914,"nodeType":"Block","src":"2433:198:6","statements":[{"assignments":[887],"declarations":[{"constant":false,"id":887,"mutability":"mutable","name":"computedHash","nameLocation":"2451:12:6","nodeType":"VariableDeclaration","scope":914,"src":"2443:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":889,"initialValue":{"id":888,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"2466:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2443:27:6"},{"body":{"id":910,"nodeType":"Block","src":"2523:73:6","statements":[{"expression":{"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":901,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2537:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":903,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2562:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":904,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"2576:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":906,"indexExpression":{"id":905,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2582:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2576:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":902,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"2552:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2552:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2537:48:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":909,"nodeType":"ExpressionStatement","src":"2537:48:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":894,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2500:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":895,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"2504:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2510:6:6","memberName":"length","nodeType":"MemberAccess","src":"2504:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2500:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":911,"initializationExpression":{"assignments":[891],"declarations":[{"constant":false,"id":891,"mutability":"mutable","name":"i","nameLocation":"2493:1:6","nodeType":"VariableDeclaration","scope":911,"src":"2485:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"2485:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":893,"initialValue":{"hexValue":"30","id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2497:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2485:13:6"},"loopExpression":{"expression":{"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2518:3:6","subExpression":{"id":898,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2518:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":900,"nodeType":"ExpressionStatement","src":"2518:3:6"},"nodeType":"ForStatement","src":"2480:116:6"},{"expression":{"id":912,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2612:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":885,"id":913,"nodeType":"Return","src":"2605:19:6"}]},"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"2230:96:6","text":" @dev Calldata version of {processProof}\n _Available since v4.7._"},"id":915,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"2340:20:6","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"proof","nameLocation":"2380:5:6","nodeType":"VariableDeclaration","scope":915,"src":"2361:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2361:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":878,"nodeType":"ArrayTypeName","src":"2361:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"leaf","nameLocation":"2395:4:6","nodeType":"VariableDeclaration","scope":915,"src":"2387:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":880,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2387:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2360:40:6"},"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":915,"src":"2424:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":883,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2424:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2423:9:6"},"scope":1318,"src":"2331:300:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":940,"nodeType":"Block","src":"3174:76:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":933,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"3209:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":934,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"3216:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":935,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"3228:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":932,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3191:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3191:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":937,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"3239:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3191:52:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":931,"id":939,"nodeType":"Return","src":"3184:59:6"}]},"documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"2637:350:6","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":941,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"3001:16:6","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"proof","nameLocation":"3044:5:6","nodeType":"VariableDeclaration","scope":941,"src":"3027:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3027:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":918,"nodeType":"ArrayTypeName","src":"3027:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"proofFlags","nameLocation":"3073:10:6","nodeType":"VariableDeclaration","scope":941,"src":"3059:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":920,"name":"bool","nodeType":"ElementaryTypeName","src":"3059:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":921,"nodeType":"ArrayTypeName","src":"3059:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"root","nameLocation":"3101:4:6","nodeType":"VariableDeclaration","scope":941,"src":"3093:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":923,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3093:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"leaves","nameLocation":"3132:6:6","nodeType":"VariableDeclaration","scope":941,"src":"3115:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":925,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3115:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":926,"nodeType":"ArrayTypeName","src":"3115:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3017:127:6"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":941,"src":"3168:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":929,"name":"bool","nodeType":"ElementaryTypeName","src":"3168:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3167:6:6"},"scope":1318,"src":"2992:258:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":966,"nodeType":"Block","src":"3655:84:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":959,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"3698:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":960,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"3705:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":961,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"3717:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":958,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"3672:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3672:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":963,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"3728:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3672:60:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":957,"id":965,"nodeType":"Return","src":"3665:67:6"}]},"documentation":{"id":942,"nodeType":"StructuredDocumentation","src":"3256:200:6","text":" @dev Calldata version of {multiProofVerify}\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":967,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"3470:24:6","nodeType":"FunctionDefinition","parameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"proof","nameLocation":"3523:5:6","nodeType":"VariableDeclaration","scope":967,"src":"3504:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":943,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3504:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":944,"nodeType":"ArrayTypeName","src":"3504:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":948,"mutability":"mutable","name":"proofFlags","nameLocation":"3554:10:6","nodeType":"VariableDeclaration","scope":967,"src":"3538:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":946,"name":"bool","nodeType":"ElementaryTypeName","src":"3538:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":947,"nodeType":"ArrayTypeName","src":"3538:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"root","nameLocation":"3582:4:6","nodeType":"VariableDeclaration","scope":967,"src":"3574:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":949,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3574:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"leaves","nameLocation":"3613:6:6","nodeType":"VariableDeclaration","scope":967,"src":"3596:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":951,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3596:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":952,"nodeType":"ArrayTypeName","src":"3596:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3494:131:6"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":967,"src":"3649:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":955,"name":"bool","nodeType":"ElementaryTypeName","src":"3649:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3648:6:6"},"scope":1318,"src":"3461:278:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1124,"nodeType":"Block","src":"4693:2053:6","statements":[{"assignments":[983],"declarations":[{"constant":false,"id":983,"mutability":"mutable","name":"leavesLen","nameLocation":"5085:9:6","nodeType":"VariableDeclaration","scope":1124,"src":"5077:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"5077:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":986,"initialValue":{"expression":{"id":984,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"5097:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5104:6:6","memberName":"length","nodeType":"MemberAccess","src":"5097:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5077:33:6"},{"assignments":[988],"declarations":[{"constant":false,"id":988,"mutability":"mutable","name":"proofLen","nameLocation":"5128:8:6","nodeType":"VariableDeclaration","scope":1124,"src":"5120:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":987,"name":"uint256","nodeType":"ElementaryTypeName","src":"5120:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":991,"initialValue":{"expression":{"id":989,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"5139:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5145:6:6","memberName":"length","nodeType":"MemberAccess","src":"5139:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5120:31:6"},{"assignments":[993],"declarations":[{"constant":false,"id":993,"mutability":"mutable","name":"totalHashes","nameLocation":"5169:11:6","nodeType":"VariableDeclaration","scope":1124,"src":"5161:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"5161:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":996,"initialValue":{"expression":{"id":994,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"5183:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5194:6:6","memberName":"length","nodeType":"MemberAccess","src":"5183:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5161:39:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":998,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"5252:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":999,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"5264:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5252:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5275:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5252:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1003,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"5280:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5252:39:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5293:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":997,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5244:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5244:83:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1007,"nodeType":"ExpressionStatement","src":"5244:83:6"},{"assignments":[1012],"declarations":[{"constant":false,"id":1012,"mutability":"mutable","name":"hashes","nameLocation":"5589:6:6","nodeType":"VariableDeclaration","scope":1124,"src":"5572:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1010,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5572:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1011,"nodeType":"ArrayTypeName","src":"5572:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1018,"initialValue":{"arguments":[{"id":1016,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"5612:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5598:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1013,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5602:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1014,"nodeType":"ArrayTypeName","src":"5602:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5598:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5572:52:6"},{"assignments":[1020],"declarations":[{"constant":false,"id":1020,"mutability":"mutable","name":"leafPos","nameLocation":"5642:7:6","nodeType":"VariableDeclaration","scope":1124,"src":"5634:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"5634:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1022,"initialValue":{"hexValue":"30","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5634:19:6"},{"assignments":[1024],"declarations":[{"constant":false,"id":1024,"mutability":"mutable","name":"hashPos","nameLocation":"5671:7:6","nodeType":"VariableDeclaration","scope":1124,"src":"5663:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1023,"name":"uint256","nodeType":"ElementaryTypeName","src":"5663:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1026,"initialValue":{"hexValue":"30","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5681:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5663:19:6"},{"assignments":[1028],"declarations":[{"constant":false,"id":1028,"mutability":"mutable","name":"proofPos","nameLocation":"5700:8:6","nodeType":"VariableDeclaration","scope":1124,"src":"5692:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"5692:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1030,"initialValue":{"hexValue":"30","id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5711:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5692:20:6"},{"body":{"id":1089,"nodeType":"Block","src":"6130:292:6","statements":[{"assignments":[1042],"declarations":[{"constant":false,"id":1042,"mutability":"mutable","name":"a","nameLocation":"6152:1:6","nodeType":"VariableDeclaration","scope":1089,"src":"6144:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6144:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1055,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1043,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"6156:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1044,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"6166:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6156:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1050,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"6198:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1053,"indexExpression":{"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6205:9:6","subExpression":{"id":1051,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"6205:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6198:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6156:59:6","trueExpression":{"baseExpression":{"id":1046,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"6178:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1049,"indexExpression":{"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6185:9:6","subExpression":{"id":1047,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"6185:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6178:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6144:71:6"},{"assignments":[1057],"declarations":[{"constant":false,"id":1057,"mutability":"mutable","name":"b","nameLocation":"6237:1:6","nodeType":"VariableDeclaration","scope":1089,"src":"6229:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6229:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1079,"initialValue":{"condition":{"baseExpression":{"id":1058,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"6241:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1060,"indexExpression":{"id":1059,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"6252:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6241:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1074,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"6353:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1077,"indexExpression":{"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6359:10:6","subExpression":{"id":1075,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"6359:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6353:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6241:129:6","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1061,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"6274:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1062,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"6284:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6274:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1068,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"6316:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1071,"indexExpression":{"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6323:9:6","subExpression":{"id":1069,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"6323:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6316:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6274:59:6","trueExpression":{"baseExpression":{"id":1064,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"6296:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1067,"indexExpression":{"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6303:9:6","subExpression":{"id":1065,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"6303:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6296:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1073,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6273:61:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6229:141:6"},{"expression":{"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1080,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"6384:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1082,"indexExpression":{"id":1081,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"6391:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6384:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1084,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"6406:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1085,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"6409:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1083,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"6396:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6396:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6384:27:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1088,"nodeType":"ExpressionStatement","src":"6384:27:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1035,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"6108:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1036,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"6112:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6108:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1090,"initializationExpression":{"assignments":[1032],"declarations":[{"constant":false,"id":1032,"mutability":"mutable","name":"i","nameLocation":"6101:1:6","nodeType":"VariableDeclaration","scope":1090,"src":"6093:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"6093:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1034,"initialValue":{"hexValue":"30","id":1033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6105:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6093:13:6"},"loopExpression":{"expression":{"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6125:3:6","subExpression":{"id":1038,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"6125:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1040,"nodeType":"ExpressionStatement","src":"6125:3:6"},"nodeType":"ForStatement","src":"6088:334:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1091,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"6436:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6450:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6436:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1109,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"6638:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6650:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6638:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1121,"nodeType":"Block","src":"6700:40:6","statements":[{"expression":{"baseExpression":{"id":1117,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"6721:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1119,"indexExpression":{"hexValue":"30","id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6727:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6721:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":981,"id":1120,"nodeType":"Return","src":"6714:15:6"}]},"id":1122,"nodeType":"IfStatement","src":"6634:106:6","trueBody":{"id":1116,"nodeType":"Block","src":"6653:41:6","statements":[{"expression":{"baseExpression":{"id":1112,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"6674:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1114,"indexExpression":{"hexValue":"30","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6674:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":981,"id":1115,"nodeType":"Return","src":"6667:16:6"}]}},"id":1123,"nodeType":"IfStatement","src":"6432:308:6","trueBody":{"id":1108,"nodeType":"Block","src":"6453:175:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1095,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"6475:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1096,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"6487:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6497:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":1094,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6467:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6467:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1100,"nodeType":"ExpressionStatement","src":"6467:64:6"},{"id":1107,"nodeType":"UncheckedBlock","src":"6545:73:6","statements":[{"expression":{"baseExpression":{"id":1101,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"6580:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1105,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1102,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"6587:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6601:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6587:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6580:23:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":981,"id":1106,"nodeType":"Return","src":"6573:30:6"}]}]}}]},"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"3745:768:6","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n _Available since v4.7._"},"id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"4527:17:6","nodeType":"FunctionDefinition","parameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"mutability":"mutable","name":"proof","nameLocation":"4571:5:6","nodeType":"VariableDeclaration","scope":1125,"src":"4554:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4554:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":970,"nodeType":"ArrayTypeName","src":"4554:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"proofFlags","nameLocation":"4600:10:6","nodeType":"VariableDeclaration","scope":1125,"src":"4586:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":972,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":973,"nodeType":"ArrayTypeName","src":"4586:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":977,"mutability":"mutable","name":"leaves","nameLocation":"4637:6:6","nodeType":"VariableDeclaration","scope":1125,"src":"4620:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":975,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4620:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":976,"nodeType":"ArrayTypeName","src":"4620:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4544:105:6"},"returnParameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"merkleRoot","nameLocation":"4681:10:6","nodeType":"VariableDeclaration","scope":1125,"src":"4673:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4673:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4672:20:6"},"scope":1318,"src":"4518:2228:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1282,"nodeType":"Block","src":"7146:2053:6","statements":[{"assignments":[1141],"declarations":[{"constant":false,"id":1141,"mutability":"mutable","name":"leavesLen","nameLocation":"7538:9:6","nodeType":"VariableDeclaration","scope":1282,"src":"7530:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1140,"name":"uint256","nodeType":"ElementaryTypeName","src":"7530:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1144,"initialValue":{"expression":{"id":1142,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"7550:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7557:6:6","memberName":"length","nodeType":"MemberAccess","src":"7550:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7530:33:6"},{"assignments":[1146],"declarations":[{"constant":false,"id":1146,"mutability":"mutable","name":"proofLen","nameLocation":"7581:8:6","nodeType":"VariableDeclaration","scope":1282,"src":"7573:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"7573:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1149,"initialValue":{"expression":{"id":1147,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"7592:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7598:6:6","memberName":"length","nodeType":"MemberAccess","src":"7592:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7573:31:6"},{"assignments":[1151],"declarations":[{"constant":false,"id":1151,"mutability":"mutable","name":"totalHashes","nameLocation":"7622:11:6","nodeType":"VariableDeclaration","scope":1282,"src":"7614:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1150,"name":"uint256","nodeType":"ElementaryTypeName","src":"7614:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1154,"initialValue":{"expression":{"id":1152,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"7636:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7647:6:6","memberName":"length","nodeType":"MemberAccess","src":"7636:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7614:39:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1156,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"7705:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1157,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"7717:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7705:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7728:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7705:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1161,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"7733:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7705:39:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7746:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":1155,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7697:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:83:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1165,"nodeType":"ExpressionStatement","src":"7697:83:6"},{"assignments":[1170],"declarations":[{"constant":false,"id":1170,"mutability":"mutable","name":"hashes","nameLocation":"8042:6:6","nodeType":"VariableDeclaration","scope":1282,"src":"8025:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8025:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1169,"nodeType":"ArrayTypeName","src":"8025:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1176,"initialValue":{"arguments":[{"id":1174,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"8065:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8051:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1171,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8055:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1172,"nodeType":"ArrayTypeName","src":"8055:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8051:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8025:52:6"},{"assignments":[1178],"declarations":[{"constant":false,"id":1178,"mutability":"mutable","name":"leafPos","nameLocation":"8095:7:6","nodeType":"VariableDeclaration","scope":1282,"src":"8087:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1177,"name":"uint256","nodeType":"ElementaryTypeName","src":"8087:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1180,"initialValue":{"hexValue":"30","id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8105:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8087:19:6"},{"assignments":[1182],"declarations":[{"constant":false,"id":1182,"mutability":"mutable","name":"hashPos","nameLocation":"8124:7:6","nodeType":"VariableDeclaration","scope":1282,"src":"8116:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"8116:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1184,"initialValue":{"hexValue":"30","id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8134:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8116:19:6"},{"assignments":[1186],"declarations":[{"constant":false,"id":1186,"mutability":"mutable","name":"proofPos","nameLocation":"8153:8:6","nodeType":"VariableDeclaration","scope":1282,"src":"8145:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1185,"name":"uint256","nodeType":"ElementaryTypeName","src":"8145:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1188,"initialValue":{"hexValue":"30","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8164:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8145:20:6"},{"body":{"id":1247,"nodeType":"Block","src":"8583:292:6","statements":[{"assignments":[1200],"declarations":[{"constant":false,"id":1200,"mutability":"mutable","name":"a","nameLocation":"8605:1:6","nodeType":"VariableDeclaration","scope":1247,"src":"8597:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8597:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1213,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1201,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"8609:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1202,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"8619:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1208,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"8651:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1211,"indexExpression":{"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8658:9:6","subExpression":{"id":1209,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"8658:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8651:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8609:59:6","trueExpression":{"baseExpression":{"id":1204,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"8631:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1207,"indexExpression":{"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8638:9:6","subExpression":{"id":1205,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"8638:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8631:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8597:71:6"},{"assignments":[1215],"declarations":[{"constant":false,"id":1215,"mutability":"mutable","name":"b","nameLocation":"8690:1:6","nodeType":"VariableDeclaration","scope":1247,"src":"8682:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8682:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1237,"initialValue":{"condition":{"baseExpression":{"id":1216,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"8694:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1218,"indexExpression":{"id":1217,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"8705:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8694:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1232,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"8806:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1235,"indexExpression":{"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8812:10:6","subExpression":{"id":1233,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"8812:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8806:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8694:129:6","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1219,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"8727:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1220,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"8737:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8727:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1226,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"8769:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1229,"indexExpression":{"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8776:9:6","subExpression":{"id":1227,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"8776:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8769:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8727:59:6","trueExpression":{"baseExpression":{"id":1222,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"8749:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1225,"indexExpression":{"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8756:9:6","subExpression":{"id":1223,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"8756:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8749:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1231,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8726:61:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8682:141:6"},{"expression":{"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1238,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"8837:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1240,"indexExpression":{"id":1239,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"8844:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8837:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1242,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"8859:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1243,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"8862:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1241,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"8849:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8849:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8837:27:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1246,"nodeType":"ExpressionStatement","src":"8837:27:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1193,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"8561:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1194,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"8565:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8561:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1248,"initializationExpression":{"assignments":[1190],"declarations":[{"constant":false,"id":1190,"mutability":"mutable","name":"i","nameLocation":"8554:1:6","nodeType":"VariableDeclaration","scope":1248,"src":"8546:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"8546:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1192,"initialValue":{"hexValue":"30","id":1191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8558:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8546:13:6"},"loopExpression":{"expression":{"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8578:3:6","subExpression":{"id":1196,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"8578:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1198,"nodeType":"ExpressionStatement","src":"8578:3:6"},"nodeType":"ForStatement","src":"8541:334:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1249,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"8889:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8903:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8889:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1267,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"9091:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9103:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9091:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1279,"nodeType":"Block","src":"9153:40:6","statements":[{"expression":{"baseExpression":{"id":1275,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"9174:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1277,"indexExpression":{"hexValue":"30","id":1276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9180:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9174:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1139,"id":1278,"nodeType":"Return","src":"9167:15:6"}]},"id":1280,"nodeType":"IfStatement","src":"9087:106:6","trueBody":{"id":1274,"nodeType":"Block","src":"9106:41:6","statements":[{"expression":{"baseExpression":{"id":1270,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"9127:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1272,"indexExpression":{"hexValue":"30","id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9134:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9127:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1139,"id":1273,"nodeType":"Return","src":"9120:16:6"}]}},"id":1281,"nodeType":"IfStatement","src":"8885:308:6","trueBody":{"id":1266,"nodeType":"Block","src":"8906:175:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1253,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"8928:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1254,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"8940:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8928:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8950:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":1252,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8920:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8920:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1258,"nodeType":"ExpressionStatement","src":"8920:64:6"},{"id":1265,"nodeType":"UncheckedBlock","src":"8998:73:6","statements":[{"expression":{"baseExpression":{"id":1259,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"9033:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1263,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1260,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"9040:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9054:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9040:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9033:23:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1139,"id":1264,"nodeType":"Return","src":"9026:30:6"}]}]}}]},"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"6752:202:6","text":" @dev Calldata version of {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":1283,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"6968:25:6","nodeType":"FunctionDefinition","parameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"proof","nameLocation":"7022:5:6","nodeType":"VariableDeclaration","scope":1283,"src":"7003:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7003:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1128,"nodeType":"ArrayTypeName","src":"7003:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"proofFlags","nameLocation":"7053:10:6","nodeType":"VariableDeclaration","scope":1283,"src":"7037:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1130,"name":"bool","nodeType":"ElementaryTypeName","src":"7037:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1131,"nodeType":"ArrayTypeName","src":"7037:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"leaves","nameLocation":"7090:6:6","nodeType":"VariableDeclaration","scope":1283,"src":"7073:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7073:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1134,"nodeType":"ArrayTypeName","src":"7073:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6993:109:6"},"returnParameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"mutability":"mutable","name":"merkleRoot","nameLocation":"7134:10:6","nodeType":"VariableDeclaration","scope":1283,"src":"7126:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7126:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7125:20:6"},"scope":1318,"src":"6959:2240:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1305,"nodeType":"Block","src":"9277:75:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1292,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"9294:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1293,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"9298:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9294:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1300,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"9340:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1301,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"9343:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1299,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"9325:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9325:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9294:51:6","trueExpression":{"arguments":[{"id":1296,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"9317:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1297,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"9320:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1295,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"9302:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9302:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1291,"id":1304,"nodeType":"Return","src":"9287:58:6"}]},"id":1306,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPair","nameLocation":"9214:9:6","nodeType":"FunctionDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"a","nameLocation":"9232:1:6","nodeType":"VariableDeclaration","scope":1306,"src":"9224:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9224:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1287,"mutability":"mutable","name":"b","nameLocation":"9243:1:6","nodeType":"VariableDeclaration","scope":1306,"src":"9235:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9235:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9223:22:6"},"returnParameters":{"id":1291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1306,"src":"9268:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9268:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9267:9:6"},"scope":1318,"src":"9205:147:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1316,"nodeType":"Block","src":"9441:178:6","statements":[{"AST":{"nodeType":"YulBlock","src":"9503:110:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9524:4:6","type":"","value":"0x00"},{"name":"a","nodeType":"YulIdentifier","src":"9530:1:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9517:6:6"},"nodeType":"YulFunctionCall","src":"9517:15:6"},"nodeType":"YulExpressionStatement","src":"9517:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9552:4:6","type":"","value":"0x20"},{"name":"b","nodeType":"YulIdentifier","src":"9558:1:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9545:6:6"},"nodeType":"YulFunctionCall","src":"9545:15:6"},"nodeType":"YulExpressionStatement","src":"9545:15:6"},{"nodeType":"YulAssignment","src":"9573:30:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9592:4:6","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"9598:4:6","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9582:9:6"},"nodeType":"YulFunctionCall","src":"9582:21:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9573:5:6"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1308,"isOffset":false,"isSlot":false,"src":"9530:1:6","valueSize":1},{"declaration":1310,"isOffset":false,"isSlot":false,"src":"9558:1:6","valueSize":1},{"declaration":1313,"isOffset":false,"isSlot":false,"src":"9573:5:6","valueSize":1}],"id":1315,"nodeType":"InlineAssembly","src":"9494:119:6"}]},"id":1317,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientHash","nameLocation":"9367:14:6","nodeType":"FunctionDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"a","nameLocation":"9390:1:6","nodeType":"VariableDeclaration","scope":1317,"src":"9382:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9382:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"b","nameLocation":"9401:1:6","nodeType":"VariableDeclaration","scope":1317,"src":"9393:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9393:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9381:22:6"},"returnParameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"value","nameLocation":"9434:5:6","nodeType":"VariableDeclaration","scope":1317,"src":"9426:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9426:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9425:15:6"},"scope":1318,"src":"9358:261:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1319,"src":"802:8819:6","usedErrors":[],"usedEvents":[]}],"src":"118:9504:6"},"id":6},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1342],"IERC165":[1354]},"id":1343,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1320,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1343,"sourceUnit":1355,"src":"124:23:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1323,"name":"IERC165","nameLocations":["754:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1354,"src":"754:7:7"},"id":1324,"nodeType":"InheritanceSpecifier","src":"754:7:7"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1322,"nodeType":"StructuredDocumentation","src":"149:576:7","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":1342,"linearizedBaseContracts":[1342,1354],"name":"ERC165","nameLocation":"744:6:7","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1353],"body":{"id":1340,"nodeType":"Block","src":"920:64:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1333,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"937:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1335,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"957:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1354_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1354_$","typeString":"type(contract IERC165)"}],"id":1334,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1354","typeString":"type(contract IERC165)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1332,"id":1339,"nodeType":"Return","src":"930:47:7"}]},"documentation":{"id":1325,"nodeType":"StructuredDocumentation","src":"768:56:7","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1341,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:7","nodeType":"FunctionDefinition","overrides":{"id":1329,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:7"},"parameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:7","nodeType":"VariableDeclaration","scope":1341,"src":"856:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1326,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:7"},"returnParameters":{"id":1332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1341,"src":"914:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1330,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:7"},"scope":1342,"src":"829:155:7","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1343,"src":"726:260:7","usedErrors":[],"usedEvents":[]}],"src":"99:888:7"},"id":7},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1354]},"id":1355,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1344,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1345,"nodeType":"StructuredDocumentation","src":"125:279:8","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1354,"linearizedBaseContracts":[1354],"name":"IERC165","nameLocation":"415:7:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1346,"nodeType":"StructuredDocumentation","src":"429:340:8","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1353,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:8","nodeType":"FunctionDefinition","parameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:8","nodeType":"VariableDeclaration","scope":1353,"src":"801:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1347,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:8"},"returnParameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1353,"src":"844:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1350,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:8"},"scope":1354,"src":"774:76:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1355,"src":"405:447:8","usedErrors":[],"usedEvents":[]}],"src":"100:753:8"},"id":8},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2220]},"id":2221,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1356,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1357,"nodeType":"StructuredDocumentation","src":"128:73:9","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2220,"linearizedBaseContracts":[2220],"name":"Math","nameLocation":"210:4:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1361,"members":[{"id":1358,"name":"Down","nameLocation":"245:4:9","nodeType":"EnumValue","src":"245:4:9"},{"id":1359,"name":"Up","nameLocation":"287:2:9","nodeType":"EnumValue","src":"287:2:9"},{"id":1360,"name":"Zero","nameLocation":"318:4:9","nodeType":"EnumValue","src":"318:4:9"}],"name":"Rounding","nameLocation":"226:8:9","nodeType":"EnumDefinition","src":"221:122:9"},{"body":{"id":1378,"nodeType":"Block","src":"480:37:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1371,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"497:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1372,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"501:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1375,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"509:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:9","trueExpression":{"id":1374,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"505:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1370,"id":1377,"nodeType":"Return","src":"490:20:9"}]},"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"349:59:9","text":" @dev Returns the largest of two numbers."},"id":1379,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:9","nodeType":"FunctionDefinition","parameters":{"id":1367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"a","nameLocation":"434:1:9","nodeType":"VariableDeclaration","scope":1379,"src":"426:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1366,"mutability":"mutable","name":"b","nameLocation":"445:1:9","nodeType":"VariableDeclaration","scope":1379,"src":"437:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:9"},"returnParameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1379,"src":"471:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:9"},"scope":2220,"src":"413:104:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1396,"nodeType":"Block","src":"655:37:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1389,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"672:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1390,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"676:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1393,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"684:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:9","trueExpression":{"id":1392,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"680:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1388,"id":1395,"nodeType":"Return","src":"665:20:9"}]},"documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"523:60:9","text":" @dev Returns the smallest of two numbers."},"id":1397,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:9","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"a","nameLocation":"609:1:9","nodeType":"VariableDeclaration","scope":1397,"src":"601:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1381,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1384,"mutability":"mutable","name":"b","nameLocation":"620:1:9","nodeType":"VariableDeclaration","scope":1397,"src":"612:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:9"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1397,"src":"646:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:9"},"scope":2220,"src":"588:104:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1419,"nodeType":"Block","src":"876:82:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1407,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"931:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1408,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"935:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1411,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"941:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1412,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"945:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1406,"id":1418,"nodeType":"Return","src":"923:28:9"}]},"documentation":{"id":1398,"nodeType":"StructuredDocumentation","src":"698:102:9","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1420,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:9","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1400,"mutability":"mutable","name":"a","nameLocation":"830:1:9","nodeType":"VariableDeclaration","scope":1420,"src":"822:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1399,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"b","nameLocation":"841:1:9","nodeType":"VariableDeclaration","scope":1420,"src":"833:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1401,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:9"},"returnParameters":{"id":1406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1420,"src":"867:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1404,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:9"},"scope":2220,"src":"805:153:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1444,"nodeType":"Block","src":"1228:123:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1430,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"1316:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1434,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"1330:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1438,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"1339:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:9","trueExpression":{"hexValue":"30","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1429,"id":1443,"nodeType":"Return","src":"1309:35:9"}]},"documentation":{"id":1421,"nodeType":"StructuredDocumentation","src":"964:188:9","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1445,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:9","nodeType":"FunctionDefinition","parameters":{"id":1426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1423,"mutability":"mutable","name":"a","nameLocation":"1182:1:9","nodeType":"VariableDeclaration","scope":1445,"src":"1174:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1422,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1425,"mutability":"mutable","name":"b","nameLocation":"1193:1:9","nodeType":"VariableDeclaration","scope":1445,"src":"1185:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1424,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:9"},"returnParameters":{"id":1429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1445,"src":"1219:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:9"},"scope":2220,"src":"1157:194:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1567,"nodeType":"Block","src":"1765:4115:9","statements":[{"id":1566,"nodeType":"UncheckedBlock","src":"1775:4099:9","statements":[{"assignments":[1458],"declarations":[{"constant":false,"id":1458,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:9","nodeType":"VariableDeclaration","scope":1566,"src":"2096:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1457,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1459,"nodeType":"VariableDeclarationStatement","src":"2096:13:9"},{"assignments":[1461],"declarations":[{"constant":false,"id":1461,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:9","nodeType":"VariableDeclaration","scope":1566,"src":"2168:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1462,"nodeType":"VariableDeclarationStatement","src":"2168:13:9"},{"AST":{"nodeType":"YulBlock","src":"2248:157:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:9","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:9"},"nodeType":"YulFunctionCall","src":"2289:6:9"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:9"},"nodeType":"YulFunctionCall","src":"2276:20:9"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:9","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:9"},"nodeType":"YulFunctionCall","src":"2322:9:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:9"}]},{"nodeType":"YulAssignment","src":"2348:43:9","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:9"},"nodeType":"YulFunctionCall","src":"2361:14:9"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:9"},"nodeType":"YulFunctionCall","src":"2377:13:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:9"},"nodeType":"YulFunctionCall","src":"2357:34:9"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1458,"isOffset":false,"isSlot":false,"src":"2313:5:9","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"2369:5:9","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"2384:5:9","valueSize":1},{"declaration":1461,"isOffset":false,"isSlot":false,"src":"2348:5:9","valueSize":1},{"declaration":1448,"isOffset":false,"isSlot":false,"src":"2283:1:9","valueSize":1},{"declaration":1448,"isOffset":false,"isSlot":false,"src":"2326:1:9","valueSize":1},{"declaration":1450,"isOffset":false,"isSlot":false,"src":"2286:1:9","valueSize":1},{"declaration":1450,"isOffset":false,"isSlot":false,"src":"2329:1:9","valueSize":1}],"id":1463,"nodeType":"InlineAssembly","src":"2239:166:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1464,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"2486:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1472,"nodeType":"IfStatement","src":"2482:368:9","trueBody":{"id":1471,"nodeType":"Block","src":"2498:352:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1467,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"2816:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1468,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"2824:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1456,"id":1470,"nodeType":"Return","src":"2809:26:9"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1474,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"2960:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1475,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"2974:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":1473,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1479,"nodeType":"ExpressionStatement","src":"2952:53:9"},{"assignments":[1481],"declarations":[{"constant":false,"id":1481,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:9","nodeType":"VariableDeclaration","scope":1566,"src":"3261:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1482,"nodeType":"VariableDeclarationStatement","src":"3261:17:9"},{"AST":{"nodeType":"YulBlock","src":"3301:291:9","statements":[{"nodeType":"YulAssignment","src":"3370:38:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:9"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:9"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:9"},"nodeType":"YulFunctionCall","src":"3383:25:9"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:9"}]},{"nodeType":"YulAssignment","src":"3490:41:9","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:9"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:9"},"nodeType":"YulFunctionCall","src":"3510:20:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:9"},"nodeType":"YulFunctionCall","src":"3499:32:9"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:9"}]},{"nodeType":"YulAssignment","src":"3548:30:9","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:9"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:9"},"nodeType":"YulFunctionCall","src":"3557:21:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1452,"isOffset":false,"isSlot":false,"src":"3396:11:9","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"3524:5:9","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"3548:5:9","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"3561:5:9","valueSize":1},{"declaration":1461,"isOffset":false,"isSlot":false,"src":"3490:5:9","valueSize":1},{"declaration":1461,"isOffset":false,"isSlot":false,"src":"3503:5:9","valueSize":1},{"declaration":1481,"isOffset":false,"isSlot":false,"src":"3370:9:9","valueSize":1},{"declaration":1481,"isOffset":false,"isSlot":false,"src":"3513:9:9","valueSize":1},{"declaration":1481,"isOffset":false,"isSlot":false,"src":"3568:9:9","valueSize":1},{"declaration":1448,"isOffset":false,"isSlot":false,"src":"3390:1:9","valueSize":1},{"declaration":1450,"isOffset":false,"isSlot":false,"src":"3393:1:9","valueSize":1}],"id":1483,"nodeType":"InlineAssembly","src":"3292:300:9"},{"assignments":[1485],"declarations":[{"constant":false,"id":1485,"mutability":"mutable","name":"twos","nameLocation":"3907:4:9","nodeType":"VariableDeclaration","scope":1566,"src":"3899:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1493,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1486,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"3914:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:9","subExpression":{"id":1487,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"3930:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1491,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:9"},{"AST":{"nodeType":"YulBlock","src":"3969:362:9","statements":[{"nodeType":"YulAssignment","src":"4034:37:9","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:9"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:9"},"nodeType":"YulFunctionCall","src":"4049:22:9"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:9"}]},{"nodeType":"YulAssignment","src":"4138:25:9","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:9"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:9"},"nodeType":"YulFunctionCall","src":"4147:16:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:9"}]},{"nodeType":"YulAssignment","src":"4278:39:9","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:9","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:9"},"nodeType":"YulFunctionCall","src":"4294:12:9"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:9"},"nodeType":"YulFunctionCall","src":"4290:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:9"},"nodeType":"YulFunctionCall","src":"4286:31:9"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1452,"isOffset":false,"isSlot":false,"src":"4034:11:9","valueSize":1},{"declaration":1452,"isOffset":false,"isSlot":false,"src":"4053:11:9","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"4138:5:9","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"4151:5:9","valueSize":1},{"declaration":1485,"isOffset":false,"isSlot":false,"src":"4066:4:9","valueSize":1},{"declaration":1485,"isOffset":false,"isSlot":false,"src":"4158:4:9","valueSize":1},{"declaration":1485,"isOffset":false,"isSlot":false,"src":"4278:4:9","valueSize":1},{"declaration":1485,"isOffset":false,"isSlot":false,"src":"4301:4:9","valueSize":1},{"declaration":1485,"isOffset":false,"isSlot":false,"src":"4308:4:9","valueSize":1}],"id":1494,"nodeType":"InlineAssembly","src":"3960:371:9"},{"expression":{"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1495,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"4397:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1496,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"4406:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1497,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"4414:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1500,"nodeType":"ExpressionStatement","src":"4397:21:9"},{"assignments":[1502],"declarations":[{"constant":false,"id":1502,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:9","nodeType":"VariableDeclaration","scope":1566,"src":"4736:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1501,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1509,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:9","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1504,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"4759:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:9"},{"expression":{"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1510,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"4992:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1512,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"5007:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1513,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"5021:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1517,"nodeType":"ExpressionStatement","src":"4992:36:9"},{"expression":{"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1518,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"5061:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1520,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"5076:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1521,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"5090:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1525,"nodeType":"ExpressionStatement","src":"5061:36:9"},{"expression":{"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1526,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"5131:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1528,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"5146:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1529,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"5160:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1533,"nodeType":"ExpressionStatement","src":"5131:36:9"},{"expression":{"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1534,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"5201:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1536,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"5216:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1537,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"5230:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1541,"nodeType":"ExpressionStatement","src":"5201:36:9"},{"expression":{"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1542,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"5271:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1544,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"5286:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1545,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"5300:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1549,"nodeType":"ExpressionStatement","src":"5271:36:9"},{"expression":{"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1550,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"5342:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1552,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"5357:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1553,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"5371:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1557,"nodeType":"ExpressionStatement","src":"5342:36:9"},{"expression":{"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1558,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"5812:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1559,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"5821:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1560,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"5829:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1563,"nodeType":"ExpressionStatement","src":"5812:24:9"},{"expression":{"id":1564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"5857:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1456,"id":1565,"nodeType":"Return","src":"5850:13:9"}]}]},"documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"1357:305:9","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1568,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:9","nodeType":"FunctionDefinition","parameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1448,"mutability":"mutable","name":"x","nameLocation":"1691:1:9","nodeType":"VariableDeclaration","scope":1568,"src":"1683:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1450,"mutability":"mutable","name":"y","nameLocation":"1702:1:9","nodeType":"VariableDeclaration","scope":1568,"src":"1694:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1449,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:9","nodeType":"VariableDeclaration","scope":1568,"src":"1705:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1451,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:9"},"returnParameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"result","nameLocation":"1757:6:9","nodeType":"VariableDeclaration","scope":1568,"src":"1749:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1454,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:9"},"scope":2220,"src":"1667:4213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1611,"nodeType":"Block","src":"6122:189:9","statements":[{"assignments":[1584],"declarations":[{"constant":false,"id":1584,"mutability":"mutable","name":"result","nameLocation":"6140:6:9","nodeType":"VariableDeclaration","scope":1611,"src":"6132:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1583,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1590,"initialValue":{"arguments":[{"id":1586,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"6156:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1587,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"6159:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1588,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"6162:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1585,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1568,1612],"referencedDeclaration":1568,"src":"6149:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1591,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"6188:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1592,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"6200:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1361_$","typeString":"type(enum Math.Rounding)"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1359,"src":"6200:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"}},"src":"6188:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1596,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"6222:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1597,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"6225:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1598,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"6228:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1595,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:9","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1608,"nodeType":"IfStatement","src":"6184:98:9","trueBody":{"id":1607,"nodeType":"Block","src":"6246:36:9","statements":[{"expression":{"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1603,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"6260:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1606,"nodeType":"ExpressionStatement","src":"6260:11:9"}]}},{"expression":{"id":1609,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"6298:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1582,"id":1610,"nodeType":"Return","src":"6291:13:9"}]},"documentation":{"id":1569,"nodeType":"StructuredDocumentation","src":"5886:121:9","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1612,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:9","nodeType":"FunctionDefinition","parameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1571,"mutability":"mutable","name":"x","nameLocation":"6036:1:9","nodeType":"VariableDeclaration","scope":1612,"src":"6028:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1573,"mutability":"mutable","name":"y","nameLocation":"6047:1:9","nodeType":"VariableDeclaration","scope":1612,"src":"6039:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1572,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1575,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:9","nodeType":"VariableDeclaration","scope":1612,"src":"6050:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1574,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1578,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:9","nodeType":"VariableDeclaration","scope":1612,"src":"6071:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"},"typeName":{"id":1577,"nodeType":"UserDefinedTypeName","pathNode":{"id":1576,"name":"Rounding","nameLocations":["6071:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1361,"src":"6071:8:9"},"referencedDeclaration":1361,"src":"6071:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:9"},"returnParameters":{"id":1582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1612,"src":"6113:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1580,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:9"},"scope":2220,"src":"6012:299:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1723,"nodeType":"Block","src":"6587:1585:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1620,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"6601:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1626,"nodeType":"IfStatement","src":"6597:45:9","trueBody":{"id":1625,"nodeType":"Block","src":"6609:33:9","statements":[{"expression":{"hexValue":"30","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1619,"id":1624,"nodeType":"Return","src":"6623:8:9"}]}},{"assignments":[1628],"declarations":[{"constant":false,"id":1628,"mutability":"mutable","name":"result","nameLocation":"7329:6:9","nodeType":"VariableDeclaration","scope":1723,"src":"7321:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1627,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1637,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1631,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"7349:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1630,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1892,1928],"referencedDeclaration":1892,"src":"7344:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1635,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:9"},{"id":1722,"nodeType":"UncheckedBlock","src":"7758:408:9","statements":[{"expression":{"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1638,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"7782:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1639,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"7792:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1640,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"7801:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1641,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"7805:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1648,"nodeType":"ExpressionStatement","src":"7782:35:9"},{"expression":{"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1649,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"7831:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1650,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"7841:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1651,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"7850:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1652,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"7854:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1655,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1659,"nodeType":"ExpressionStatement","src":"7831:35:9"},{"expression":{"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"7880:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1661,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"7890:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1662,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"7899:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1663,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"7903:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1666,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1670,"nodeType":"ExpressionStatement","src":"7880:35:9"},{"expression":{"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1671,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"7929:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1672,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"7939:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1673,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"7948:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"7952:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1677,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1681,"nodeType":"ExpressionStatement","src":"7929:35:9"},{"expression":{"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1682,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"7978:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1683,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"7988:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1684,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"7997:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1685,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"8001:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1688,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1692,"nodeType":"ExpressionStatement","src":"7978:35:9"},{"expression":{"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1693,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"8027:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1694,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"8037:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1695,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"8046:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1696,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"8050:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1699,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1703,"nodeType":"ExpressionStatement","src":"8027:35:9"},{"expression":{"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1704,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"8076:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1705,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"8086:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1706,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"8095:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1707,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"8099:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1710,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1714,"nodeType":"ExpressionStatement","src":"8076:35:9"},{"expression":{"arguments":[{"id":1716,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"8136:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1717,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"8144:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1718,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"8148:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1715,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"8132:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1619,"id":1721,"nodeType":"Return","src":"8125:30:9"}]}]},"documentation":{"id":1613,"nodeType":"StructuredDocumentation","src":"6317:208:9","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1724,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:9","nodeType":"FunctionDefinition","parameters":{"id":1616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1615,"mutability":"mutable","name":"a","nameLocation":"6552:1:9","nodeType":"VariableDeclaration","scope":1724,"src":"6544:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1614,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:9"},"returnParameters":{"id":1619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1724,"src":"6578:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1617,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:9"},"scope":2220,"src":"6530:1642:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1759,"nodeType":"Block","src":"8348:161:9","statements":[{"id":1758,"nodeType":"UncheckedBlock","src":"8358:145:9","statements":[{"assignments":[1736],"declarations":[{"constant":false,"id":1736,"mutability":"mutable","name":"result","nameLocation":"8390:6:9","nodeType":"VariableDeclaration","scope":1758,"src":"8382:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1735,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1740,"initialValue":{"arguments":[{"id":1738,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"8404:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1737,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1724,1760],"referencedDeclaration":1724,"src":"8399:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1741,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"8427:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1742,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"8437:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1743,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"8449:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1361_$","typeString":"type(enum Math.Rounding)"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1359,"src":"8449:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"}},"src":"8437:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1746,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"8464:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1747,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"8473:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1749,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"8482:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:9","trueExpression":{"hexValue":"31","id":1752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1755,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1734,"id":1757,"nodeType":"Return","src":"8420:72:9"}]}]},"documentation":{"id":1725,"nodeType":"StructuredDocumentation","src":"8178:89:9","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1760,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:9","nodeType":"FunctionDefinition","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1727,"mutability":"mutable","name":"a","nameLocation":"8294:1:9","nodeType":"VariableDeclaration","scope":1760,"src":"8286:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1726,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1730,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:9","nodeType":"VariableDeclaration","scope":1760,"src":"8297:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"},"typeName":{"id":1729,"nodeType":"UserDefinedTypeName","pathNode":{"id":1728,"name":"Rounding","nameLocations":["8297:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1361,"src":"8297:8:9"},"referencedDeclaration":1361,"src":"8297:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:9"},"returnParameters":{"id":1734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1760,"src":"8339:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1732,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:9"},"scope":2220,"src":"8272:237:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1891,"nodeType":"Block","src":"8694:922:9","statements":[{"assignments":[1769],"declarations":[{"constant":false,"id":1769,"mutability":"mutable","name":"result","nameLocation":"8712:6:9","nodeType":"VariableDeclaration","scope":1891,"src":"8704:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1768,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1771,"initialValue":{"hexValue":"30","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:9"},{"id":1888,"nodeType":"UncheckedBlock","src":"8732:855:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"8760:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1786,"nodeType":"IfStatement","src":"8756:99:9","trueBody":{"id":1785,"nodeType":"Block","src":"8778:77:9","statements":[{"expression":{"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"8796:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1780,"nodeType":"ExpressionStatement","src":"8796:13:9"},{"expression":{"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1781,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"8827:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1784,"nodeType":"ExpressionStatement","src":"8827:13:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"8872:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1801,"nodeType":"IfStatement","src":"8868:96:9","trueBody":{"id":1800,"nodeType":"Block","src":"8889:75:9","statements":[{"expression":{"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"8907:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1795,"nodeType":"ExpressionStatement","src":"8907:12:9"},{"expression":{"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1796,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"8937:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1799,"nodeType":"ExpressionStatement","src":"8937:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"8981:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1816,"nodeType":"IfStatement","src":"8977:96:9","trueBody":{"id":1815,"nodeType":"Block","src":"8998:75:9","statements":[{"expression":{"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"9016:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1810,"nodeType":"ExpressionStatement","src":"9016:12:9"},{"expression":{"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1811,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"9046:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1814,"nodeType":"ExpressionStatement","src":"9046:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"9090:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1831,"nodeType":"IfStatement","src":"9086:96:9","trueBody":{"id":1830,"nodeType":"Block","src":"9107:75:9","statements":[{"expression":{"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"9125:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1825,"nodeType":"ExpressionStatement","src":"9125:12:9"},{"expression":{"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1826,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"9155:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1829,"nodeType":"ExpressionStatement","src":"9155:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"9199:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1846,"nodeType":"IfStatement","src":"9195:93:9","trueBody":{"id":1845,"nodeType":"Block","src":"9215:73:9","statements":[{"expression":{"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"9233:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1840,"nodeType":"ExpressionStatement","src":"9233:11:9"},{"expression":{"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1841,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"9262:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1844,"nodeType":"ExpressionStatement","src":"9262:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"9305:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1861,"nodeType":"IfStatement","src":"9301:93:9","trueBody":{"id":1860,"nodeType":"Block","src":"9321:73:9","statements":[{"expression":{"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"9339:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1855,"nodeType":"ExpressionStatement","src":"9339:11:9"},{"expression":{"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1856,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"9368:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1859,"nodeType":"ExpressionStatement","src":"9368:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"9411:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1876,"nodeType":"IfStatement","src":"9407:93:9","trueBody":{"id":1875,"nodeType":"Block","src":"9427:73:9","statements":[{"expression":{"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"9445:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1870,"nodeType":"ExpressionStatement","src":"9445:11:9"},{"expression":{"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1871,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"9474:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1874,"nodeType":"ExpressionStatement","src":"9474:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"9517:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1887,"nodeType":"IfStatement","src":"9513:64:9","trueBody":{"id":1886,"nodeType":"Block","src":"9533:44:9","statements":[{"expression":{"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1882,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"9551:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1885,"nodeType":"ExpressionStatement","src":"9551:11:9"}]}}]},{"expression":{"id":1889,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"9603:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1767,"id":1890,"nodeType":"Return","src":"9596:13:9"}]},"documentation":{"id":1761,"nodeType":"StructuredDocumentation","src":"8515:113:9","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1892,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:9","nodeType":"FunctionDefinition","parameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"value","nameLocation":"8655:5:9","nodeType":"VariableDeclaration","scope":1892,"src":"8647:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1762,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:9"},"returnParameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1892,"src":"8685:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1765,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:9"},"scope":2220,"src":"8633:983:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1927,"nodeType":"Block","src":"9849:165:9","statements":[{"id":1926,"nodeType":"UncheckedBlock","src":"9859:149:9","statements":[{"assignments":[1904],"declarations":[{"constant":false,"id":1904,"mutability":"mutable","name":"result","nameLocation":"9891:6:9","nodeType":"VariableDeclaration","scope":1926,"src":"9883:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1908,"initialValue":{"arguments":[{"id":1906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"9905:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1905,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1892,1928],"referencedDeclaration":1892,"src":"9900:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1909,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"9932:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1910,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"9942:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1911,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"9954:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1361_$","typeString":"type(enum Math.Rounding)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1359,"src":"9954:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"}},"src":"9942:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1915,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"9974:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"9983:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:9","trueExpression":{"hexValue":"31","id":1920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1923,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1902,"id":1925,"nodeType":"Return","src":"9925:72:9"}]}]},"documentation":{"id":1893,"nodeType":"StructuredDocumentation","src":"9622:142:9","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1928,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:9","nodeType":"FunctionDefinition","parameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1895,"mutability":"mutable","name":"value","nameLocation":"9791:5:9","nodeType":"VariableDeclaration","scope":1928,"src":"9783:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1894,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1898,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:9","nodeType":"VariableDeclaration","scope":1928,"src":"9798:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"},"typeName":{"id":1897,"nodeType":"UserDefinedTypeName","pathNode":{"id":1896,"name":"Rounding","nameLocations":["9798:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1361,"src":"9798:8:9"},"referencedDeclaration":1361,"src":"9798:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:9"},"returnParameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1928,"src":"9840:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1900,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:9"},"scope":2220,"src":"9769:245:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2056,"nodeType":"Block","src":"10201:854:9","statements":[{"assignments":[1937],"declarations":[{"constant":false,"id":1937,"mutability":"mutable","name":"result","nameLocation":"10219:6:9","nodeType":"VariableDeclaration","scope":2056,"src":"10211:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1939,"initialValue":{"hexValue":"30","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:9"},{"id":2053,"nodeType":"UncheckedBlock","src":"10239:787:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"10267:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1956,"nodeType":"IfStatement","src":"10263:103:9","trueBody":{"id":1955,"nodeType":"Block","src":"10286:80:9","statements":[{"expression":{"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"10304:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1950,"nodeType":"ExpressionStatement","src":"10304:17:9"},{"expression":{"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1951,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"10339:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1954,"nodeType":"ExpressionStatement","src":"10339:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"10383:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1973,"nodeType":"IfStatement","src":"10379:103:9","trueBody":{"id":1972,"nodeType":"Block","src":"10402:80:9","statements":[{"expression":{"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"10420:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1967,"nodeType":"ExpressionStatement","src":"10420:17:9"},{"expression":{"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1968,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"10455:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1971,"nodeType":"ExpressionStatement","src":"10455:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"10499:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1990,"nodeType":"IfStatement","src":"10495:103:9","trueBody":{"id":1989,"nodeType":"Block","src":"10518:80:9","statements":[{"expression":{"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"10536:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1984,"nodeType":"ExpressionStatement","src":"10536:17:9"},{"expression":{"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1985,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"10571:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1988,"nodeType":"ExpressionStatement","src":"10571:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"10615:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2007,"nodeType":"IfStatement","src":"10611:100:9","trueBody":{"id":2006,"nodeType":"Block","src":"10633:78:9","statements":[{"expression":{"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"10651:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2001,"nodeType":"ExpressionStatement","src":"10651:16:9"},{"expression":{"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2002,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"10685:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2005,"nodeType":"ExpressionStatement","src":"10685:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"10728:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:9","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2024,"nodeType":"IfStatement","src":"10724:100:9","trueBody":{"id":2023,"nodeType":"Block","src":"10746:78:9","statements":[{"expression":{"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"10764:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:9","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2018,"nodeType":"ExpressionStatement","src":"10764:16:9"},{"expression":{"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2019,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"10798:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2022,"nodeType":"ExpressionStatement","src":"10798:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"10841:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2041,"nodeType":"IfStatement","src":"10837:100:9","trueBody":{"id":2040,"nodeType":"Block","src":"10859:78:9","statements":[{"expression":{"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"10877:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2035,"nodeType":"ExpressionStatement","src":"10877:16:9"},{"expression":{"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2036,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"10911:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2039,"nodeType":"ExpressionStatement","src":"10911:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"10954:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2052,"nodeType":"IfStatement","src":"10950:66:9","trueBody":{"id":2051,"nodeType":"Block","src":"10972:44:9","statements":[{"expression":{"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2047,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"10990:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2050,"nodeType":"ExpressionStatement","src":"10990:11:9"}]}}]},{"expression":{"id":2054,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"11042:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1935,"id":2055,"nodeType":"Return","src":"11035:13:9"}]},"documentation":{"id":1929,"nodeType":"StructuredDocumentation","src":"10020:114:9","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2057,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:9","nodeType":"FunctionDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"mutability":"mutable","name":"value","nameLocation":"10162:5:9","nodeType":"VariableDeclaration","scope":2057,"src":"10154:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1930,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:9"},"returnParameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2057,"src":"10192:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1933,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:9"},"scope":2220,"src":"10139:916:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2092,"nodeType":"Block","src":"11290:167:9","statements":[{"id":2091,"nodeType":"UncheckedBlock","src":"11300:151:9","statements":[{"assignments":[2069],"declarations":[{"constant":false,"id":2069,"mutability":"mutable","name":"result","nameLocation":"11332:6:9","nodeType":"VariableDeclaration","scope":2091,"src":"11324:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2068,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2073,"initialValue":{"arguments":[{"id":2071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"11347:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2070,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2057,2093],"referencedDeclaration":2057,"src":"11341:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2074,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"11374:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2075,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"11384:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2076,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"11396:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1361_$","typeString":"type(enum Math.Rounding)"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1359,"src":"11396:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"}},"src":"11384:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2080,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"11417:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"11426:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:9","trueExpression":{"hexValue":"31","id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2067,"id":2090,"nodeType":"Return","src":"11367:73:9"}]}]},"documentation":{"id":2058,"nodeType":"StructuredDocumentation","src":"11061:143:9","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2093,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:9","nodeType":"FunctionDefinition","parameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2060,"mutability":"mutable","name":"value","nameLocation":"11232:5:9","nodeType":"VariableDeclaration","scope":2093,"src":"11224:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2059,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2063,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:9","nodeType":"VariableDeclaration","scope":2093,"src":"11239:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"},"typeName":{"id":2062,"nodeType":"UserDefinedTypeName","pathNode":{"id":2061,"name":"Rounding","nameLocations":["11239:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1361,"src":"11239:8:9"},"referencedDeclaration":1361,"src":"11239:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:9"},"returnParameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2093,"src":"11281:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2065,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:9"},"scope":2220,"src":"11209:248:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2179,"nodeType":"Block","src":"11771:600:9","statements":[{"assignments":[2102],"declarations":[{"constant":false,"id":2102,"mutability":"mutable","name":"result","nameLocation":"11789:6:9","nodeType":"VariableDeclaration","scope":2179,"src":"11781:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2101,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2104,"initialValue":{"hexValue":"30","id":2103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:9"},{"id":2176,"nodeType":"UncheckedBlock","src":"11809:533:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"11837:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2119,"nodeType":"IfStatement","src":"11833:98:9","trueBody":{"id":2118,"nodeType":"Block","src":"11855:76:9","statements":[{"expression":{"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"11873:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2113,"nodeType":"ExpressionStatement","src":"11873:13:9"},{"expression":{"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2114,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"11904:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2117,"nodeType":"ExpressionStatement","src":"11904:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"11948:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2134,"nodeType":"IfStatement","src":"11944:95:9","trueBody":{"id":2133,"nodeType":"Block","src":"11965:74:9","statements":[{"expression":{"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"11983:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2128,"nodeType":"ExpressionStatement","src":"11983:12:9"},{"expression":{"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2129,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"12013:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2132,"nodeType":"ExpressionStatement","src":"12013:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"12056:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2149,"nodeType":"IfStatement","src":"12052:95:9","trueBody":{"id":2148,"nodeType":"Block","src":"12073:74:9","statements":[{"expression":{"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"12091:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2143,"nodeType":"ExpressionStatement","src":"12091:12:9"},{"expression":{"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2144,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"12121:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2147,"nodeType":"ExpressionStatement","src":"12121:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"12164:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2164,"nodeType":"IfStatement","src":"12160:95:9","trueBody":{"id":2163,"nodeType":"Block","src":"12181:74:9","statements":[{"expression":{"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"12199:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2158,"nodeType":"ExpressionStatement","src":"12199:12:9"},{"expression":{"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2159,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"12229:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2162,"nodeType":"ExpressionStatement","src":"12229:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"12272:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2175,"nodeType":"IfStatement","src":"12268:64:9","trueBody":{"id":2174,"nodeType":"Block","src":"12288:44:9","statements":[{"expression":{"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2170,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"12306:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2173,"nodeType":"ExpressionStatement","src":"12306:11:9"}]}}]},{"expression":{"id":2177,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"12358:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2100,"id":2178,"nodeType":"Return","src":"12351:13:9"}]},"documentation":{"id":2094,"nodeType":"StructuredDocumentation","src":"11463:240:9","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2180,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:9","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"value","nameLocation":"11732:5:9","nodeType":"VariableDeclaration","scope":2180,"src":"11724:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2095,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:9"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2180,"src":"11762:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2098,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:9"},"scope":2220,"src":"11708:663:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2218,"nodeType":"Block","src":"12608:174:9","statements":[{"id":2217,"nodeType":"UncheckedBlock","src":"12618:158:9","statements":[{"assignments":[2192],"declarations":[{"constant":false,"id":2192,"mutability":"mutable","name":"result","nameLocation":"12650:6:9","nodeType":"VariableDeclaration","scope":2217,"src":"12642:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2191,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2196,"initialValue":{"arguments":[{"id":2194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"12666:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2193,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2180,2219],"referencedDeclaration":2180,"src":"12659:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2197,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"12693:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2198,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"12703:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2199,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"12715:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1361_$","typeString":"type(enum Math.Rounding)"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1359,"src":"12715:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"}},"src":"12703:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2203,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"12736:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:9","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"12751:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:9","trueExpression":{"hexValue":"31","id":2211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2190,"id":2216,"nodeType":"Return","src":"12686:79:9"}]}]},"documentation":{"id":2181,"nodeType":"StructuredDocumentation","src":"12377:144:9","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2219,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:9","nodeType":"FunctionDefinition","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"value","nameLocation":"12550:5:9","nodeType":"VariableDeclaration","scope":2219,"src":"12542:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2182,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2186,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:9","nodeType":"VariableDeclaration","scope":2219,"src":"12557:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"},"typeName":{"id":2185,"nodeType":"UserDefinedTypeName","pathNode":{"id":2184,"name":"Rounding","nameLocations":["12557:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1361,"src":"12557:8:9"},"referencedDeclaration":1361,"src":"12557:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1361","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:9"},"returnParameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2219,"src":"12599:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:9"},"scope":2220,"src":"12526:256:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2221,"src":"202:12582:9","usedErrors":[],"usedEvents":[]}],"src":"103:12682:9"},"id":9},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[2325]},"id":2326,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2222,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":2223,"nodeType":"StructuredDocumentation","src":"134:80:10","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2325,"linearizedBaseContracts":[2325],"name":"SignedMath","nameLocation":"223:10:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":2240,"nodeType":"Block","src":"375:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2233,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"392:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2234,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"396:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2237,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"404:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:10","trueExpression":{"id":2236,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"400:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2232,"id":2239,"nodeType":"Return","src":"385:20:10"}]},"documentation":{"id":2224,"nodeType":"StructuredDocumentation","src":"240:66:10","text":" @dev Returns the largest of two signed numbers."},"id":2241,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:10","nodeType":"FunctionDefinition","parameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"mutability":"mutable","name":"a","nameLocation":"331:1:10","nodeType":"VariableDeclaration","scope":2241,"src":"324:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2225,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2228,"mutability":"mutable","name":"b","nameLocation":"341:1:10","nodeType":"VariableDeclaration","scope":2241,"src":"334:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2227,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:10"},"returnParameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2241,"src":"367:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2230,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:10"},"scope":2325,"src":"311:101:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2258,"nodeType":"Block","src":"554:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2251,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"571:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2252,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"575:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2255,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"583:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:10","trueExpression":{"id":2254,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"579:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2250,"id":2257,"nodeType":"Return","src":"564:20:10"}]},"documentation":{"id":2242,"nodeType":"StructuredDocumentation","src":"418:67:10","text":" @dev Returns the smallest of two signed numbers."},"id":2259,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:10","nodeType":"FunctionDefinition","parameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"a","nameLocation":"510:1:10","nodeType":"VariableDeclaration","scope":2259,"src":"503:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2243,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2246,"mutability":"mutable","name":"b","nameLocation":"520:1:10","nodeType":"VariableDeclaration","scope":2259,"src":"513:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2245,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:10"},"returnParameters":{"id":2250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2259,"src":"546:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2248,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:10"},"scope":2325,"src":"490:101:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2302,"nodeType":"Block","src":"796:162:10","statements":[{"assignments":[2270],"declarations":[{"constant":false,"id":2270,"mutability":"mutable","name":"x","nameLocation":"865:1:10","nodeType":"VariableDeclaration","scope":2302,"src":"858:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2269,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2283,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2271,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"870:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2272,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"874:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2274,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2275,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"881:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2276,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"885:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2278,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:10"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2284,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"910:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2289,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"930:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2287,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:10","typeDescriptions":{}}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2285,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:10","typeDescriptions":{}}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2294,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"944:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2295,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"948:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2297,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2268,"id":2301,"nodeType":"Return","src":"903:48:10"}]},"documentation":{"id":2260,"nodeType":"StructuredDocumentation","src":"597:126:10","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":2303,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:10","nodeType":"FunctionDefinition","parameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2262,"mutability":"mutable","name":"a","nameLocation":"752:1:10","nodeType":"VariableDeclaration","scope":2303,"src":"745:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2261,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2264,"mutability":"mutable","name":"b","nameLocation":"762:1:10","nodeType":"VariableDeclaration","scope":2303,"src":"755:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2263,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:10"},"returnParameters":{"id":2268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2303,"src":"788:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2266,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:10"},"scope":2325,"src":"728:230:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2323,"nodeType":"Block","src":"1102:158:10","statements":[{"id":2322,"nodeType":"UncheckedBlock","src":"1112:142:10","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2313,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"1227:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:10","subExpression":{"id":2317,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"1241:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:10","trueExpression":{"id":2316,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"1236:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:10","typeDescriptions":{}}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2310,"id":2321,"nodeType":"Return","src":"1212:31:10"}]}]},"documentation":{"id":2304,"nodeType":"StructuredDocumentation","src":"964:78:10","text":" @dev Returns the absolute unsigned value of a signed value."},"id":2324,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:10","nodeType":"FunctionDefinition","parameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2306,"mutability":"mutable","name":"n","nameLocation":"1067:1:10","nodeType":"VariableDeclaration","scope":2324,"src":"1060:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2305,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:10"},"returnParameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2324,"src":"1093:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:10"},"scope":2325,"src":"1047:213:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2326,"src":"215:1047:10","usedErrors":[],"usedEvents":[]}],"src":"109:1154:10"},"id":10},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[2938]},"id":2939,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2327,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":2328,"nodeType":"StructuredDocumentation","src":"230:1098:11","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":2938,"linearizedBaseContracts":[2938],"name":"EnumerableSet","nameLocation":"1337:13:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":2336,"members":[{"constant":false,"id":2331,"mutability":"mutable","name":"_values","nameLocation":"1861:7:11","nodeType":"VariableDeclaration","scope":2336,"src":"1851:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1851:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2330,"nodeType":"ArrayTypeName","src":"1851:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2335,"mutability":"mutable","name":"_indexes","nameLocation":"2029:8:11","nodeType":"VariableDeclaration","scope":2336,"src":"2001:36:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":2334,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2009:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2001:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2333,"name":"uint256","nodeType":"ElementaryTypeName","src":"2020:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1804:3:11","nodeType":"StructDefinition","scope":2938,"src":"1797:247:11","visibility":"public"},{"body":{"id":2377,"nodeType":"Block","src":"2283:335:11","statements":[{"condition":{"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2297:22:11","subExpression":{"arguments":[{"id":2348,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"2308:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":2349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"2313:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2347,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"2298:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2336_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2298:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2375,"nodeType":"Block","src":"2575:37:11","statements":[{"expression":{"hexValue":"66616c7365","id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2596:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2346,"id":2374,"nodeType":"Return","src":"2589:12:11"}]},"id":2376,"nodeType":"IfStatement","src":"2293:319:11","trueBody":{"id":2372,"nodeType":"Block","src":"2321:248:11","statements":[{"expression":{"arguments":[{"id":2357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"2352:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":2352,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"2335:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2339:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"2335:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2347:4:11","memberName":"push","nodeType":"MemberAccess","src":"2335:16:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2359,"nodeType":"ExpressionStatement","src":"2335:23:11"},{"expression":{"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2360,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"2493:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2363,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2497:8:11","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"2493:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2364,"indexExpression":{"id":2362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"2506:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2493:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":2365,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"2515:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2519:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"2515:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2527:6:11","memberName":"length","nodeType":"MemberAccess","src":"2515:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2493:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2369,"nodeType":"ExpressionStatement","src":"2493:40:11"},{"expression":{"hexValue":"74727565","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2554:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2346,"id":2371,"nodeType":"Return","src":"2547:11:11"}]}}]},"documentation":{"id":2337,"nodeType":"StructuredDocumentation","src":"2050:159:11","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2378,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2223:4:11","nodeType":"FunctionDefinition","parameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2340,"mutability":"mutable","name":"set","nameLocation":"2240:3:11","nodeType":"VariableDeclaration","scope":2378,"src":"2228:15:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2339,"nodeType":"UserDefinedTypeName","pathNode":{"id":2338,"name":"Set","nameLocations":["2228:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":2336,"src":"2228:3:11"},"referencedDeclaration":2336,"src":"2228:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2342,"mutability":"mutable","name":"value","nameLocation":"2253:5:11","nodeType":"VariableDeclaration","scope":2378,"src":"2245:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2341,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2245:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2227:32:11"},"returnParameters":{"id":2346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2378,"src":"2277:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2344,"name":"bool","nodeType":"ElementaryTypeName","src":"2277:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2276:6:11"},"scope":2938,"src":"2214:404:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2461,"nodeType":"Block","src":"2858:1316:11","statements":[{"assignments":[2390],"declarations":[{"constant":false,"id":2390,"mutability":"mutable","name":"valueIndex","nameLocation":"2976:10:11","nodeType":"VariableDeclaration","scope":2461,"src":"2968:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2389,"name":"uint256","nodeType":"ElementaryTypeName","src":"2968:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2395,"initialValue":{"baseExpression":{"expression":{"id":2391,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"2989:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2993:8:11","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"2989:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2394,"indexExpression":{"id":2393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"3002:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2989:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2968:40:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2396,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"3023:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3037:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3023:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2459,"nodeType":"Block","src":"4131:37:11","statements":[{"expression":{"hexValue":"66616c7365","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4152:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2388,"id":2458,"nodeType":"Return","src":"4145:12:11"}]},"id":2460,"nodeType":"IfStatement","src":"3019:1149:11","trueBody":{"id":2456,"nodeType":"Block","src":"3040:1085:11","statements":[{"assignments":[2400],"declarations":[{"constant":false,"id":2400,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3400:13:11","nodeType":"VariableDeclaration","scope":2456,"src":"3392:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2399,"name":"uint256","nodeType":"ElementaryTypeName","src":"3392:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2404,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2401,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"3416:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3429:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3416:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3392:38:11"},{"assignments":[2406],"declarations":[{"constant":false,"id":2406,"mutability":"mutable","name":"lastIndex","nameLocation":"3452:9:11","nodeType":"VariableDeclaration","scope":2456,"src":"3444:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2405,"name":"uint256","nodeType":"ElementaryTypeName","src":"3444:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2412,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2407,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"3464:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3468:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"3464:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3476:6:11","memberName":"length","nodeType":"MemberAccess","src":"3464:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3485:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3464:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3444:42:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2413,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"3505:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2414,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"3518:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3505:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2440,"nodeType":"IfStatement","src":"3501:398:11","trueBody":{"id":2439,"nodeType":"Block","src":"3533:366:11","statements":[{"assignments":[2417],"declarations":[{"constant":false,"id":2417,"mutability":"mutable","name":"lastValue","nameLocation":"3559:9:11","nodeType":"VariableDeclaration","scope":2439,"src":"3551:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3551:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2422,"initialValue":{"baseExpression":{"expression":{"id":2418,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"3571:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2419,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3575:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"3571:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2421,"indexExpression":{"id":2420,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"3583:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3571:22:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3551:42:11"},{"expression":{"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2423,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"3693:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3697:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"3693:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2427,"indexExpression":{"id":2425,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"3705:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3693:26:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2428,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"3722:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3693:38:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2430,"nodeType":"ExpressionStatement","src":"3693:38:11"},{"expression":{"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2431,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"3805:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3809:8:11","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"3805:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2435,"indexExpression":{"id":2433,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"3818:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3805:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2436,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"3831:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3805:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2438,"nodeType":"ExpressionStatement","src":"3805:36:11"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":2441,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"3977:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3981:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"3977:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3989:3:11","memberName":"pop","nodeType":"MemberAccess","src":"3977:15:11","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3977:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2447,"nodeType":"ExpressionStatement","src":"3977:17:11"},{"expression":{"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4062:26:11","subExpression":{"baseExpression":{"expression":{"id":2448,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"4069:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4073:8:11","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"4069:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2451,"indexExpression":{"id":2450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"4082:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4069:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2453,"nodeType":"ExpressionStatement","src":"4062:26:11"},{"expression":{"hexValue":"74727565","id":2454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4110:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2388,"id":2455,"nodeType":"Return","src":"4103:11:11"}]}}]},"documentation":{"id":2379,"nodeType":"StructuredDocumentation","src":"2624:157:11","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2462,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2795:7:11","nodeType":"FunctionDefinition","parameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2382,"mutability":"mutable","name":"set","nameLocation":"2815:3:11","nodeType":"VariableDeclaration","scope":2462,"src":"2803:15:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2381,"nodeType":"UserDefinedTypeName","pathNode":{"id":2380,"name":"Set","nameLocations":["2803:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":2336,"src":"2803:3:11"},"referencedDeclaration":2336,"src":"2803:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2384,"mutability":"mutable","name":"value","nameLocation":"2828:5:11","nodeType":"VariableDeclaration","scope":2462,"src":"2820:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2383,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2820:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2802:32:11"},"returnParameters":{"id":2388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2462,"src":"2852:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2386,"name":"bool","nodeType":"ElementaryTypeName","src":"2852:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2851:6:11"},"scope":2938,"src":"2786:1388:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2480,"nodeType":"Block","src":"4334:48:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":2473,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"4351:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2474,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4355:8:11","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"4351:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2476,"indexExpression":{"id":2475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"4364:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4351:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4374:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4351:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2472,"id":2479,"nodeType":"Return","src":"4344:31:11"}]},"documentation":{"id":2463,"nodeType":"StructuredDocumentation","src":"4180:70:11","text":" @dev Returns true if the value is in the set. O(1)."},"id":2481,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4264:9:11","nodeType":"FunctionDefinition","parameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"set","nameLocation":"4286:3:11","nodeType":"VariableDeclaration","scope":2481,"src":"4274:15:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2465,"nodeType":"UserDefinedTypeName","pathNode":{"id":2464,"name":"Set","nameLocations":["4274:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":2336,"src":"4274:3:11"},"referencedDeclaration":2336,"src":"4274:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2468,"mutability":"mutable","name":"value","nameLocation":"4299:5:11","nodeType":"VariableDeclaration","scope":2481,"src":"4291:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4291:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4273:32:11"},"returnParameters":{"id":2472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2481,"src":"4328:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2470,"name":"bool","nodeType":"ElementaryTypeName","src":"4328:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4327:6:11"},"scope":2938,"src":"4255:127:11","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2494,"nodeType":"Block","src":"4528:42:11","statements":[{"expression":{"expression":{"expression":{"id":2490,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"4545:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4549:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"4545:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4557:6:11","memberName":"length","nodeType":"MemberAccess","src":"4545:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2489,"id":2493,"nodeType":"Return","src":"4538:25:11"}]},"documentation":{"id":2482,"nodeType":"StructuredDocumentation","src":"4388:70:11","text":" @dev Returns the number of values on the set. O(1)."},"id":2495,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4472:7:11","nodeType":"FunctionDefinition","parameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"set","nameLocation":"4492:3:11","nodeType":"VariableDeclaration","scope":2495,"src":"4480:15:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2484,"nodeType":"UserDefinedTypeName","pathNode":{"id":2483,"name":"Set","nameLocations":["4480:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":2336,"src":"4480:3:11"},"referencedDeclaration":2336,"src":"4480:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4479:17:11"},"returnParameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2495,"src":"4519:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"4519:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4518:9:11"},"scope":2938,"src":"4463:107:11","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2511,"nodeType":"Block","src":"4988:42:11","statements":[{"expression":{"baseExpression":{"expression":{"id":2506,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"5005:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5009:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"5005:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2509,"indexExpression":{"id":2508,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"5017:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5005:18:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2505,"id":2510,"nodeType":"Return","src":"4998:25:11"}]},"documentation":{"id":2496,"nodeType":"StructuredDocumentation","src":"4576:331:11","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2512,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4921:3:11","nodeType":"FunctionDefinition","parameters":{"id":2502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2499,"mutability":"mutable","name":"set","nameLocation":"4937:3:11","nodeType":"VariableDeclaration","scope":2512,"src":"4925:15:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2498,"nodeType":"UserDefinedTypeName","pathNode":{"id":2497,"name":"Set","nameLocations":["4925:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":2336,"src":"4925:3:11"},"referencedDeclaration":2336,"src":"4925:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2501,"mutability":"mutable","name":"index","nameLocation":"4950:5:11","nodeType":"VariableDeclaration","scope":2512,"src":"4942:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2500,"name":"uint256","nodeType":"ElementaryTypeName","src":"4942:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4924:32:11"},"returnParameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2512,"src":"4979:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4979:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4978:9:11"},"scope":2938,"src":"4912:118:11","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2525,"nodeType":"Block","src":"5644:35:11","statements":[{"expression":{"expression":{"id":2522,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"5661:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5665:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"5661:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":2521,"id":2524,"nodeType":"Return","src":"5654:18:11"}]},"documentation":{"id":2513,"nodeType":"StructuredDocumentation","src":"5036:529:11","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2526,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5579:7:11","nodeType":"FunctionDefinition","parameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"set","nameLocation":"5599:3:11","nodeType":"VariableDeclaration","scope":2526,"src":"5587:15:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2515,"nodeType":"UserDefinedTypeName","pathNode":{"id":2514,"name":"Set","nameLocations":["5587:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":2336,"src":"5587:3:11"},"referencedDeclaration":2336,"src":"5587:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5586:17:11"},"returnParameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2526,"src":"5626:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2518,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5626:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2519,"nodeType":"ArrayTypeName","src":"5626:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5625:18:11"},"scope":2938,"src":"5570:109:11","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":2530,"members":[{"constant":false,"id":2529,"mutability":"mutable","name":"_inner","nameLocation":"5736:6:11","nodeType":"VariableDeclaration","scope":2530,"src":"5732:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2528,"nodeType":"UserDefinedTypeName","pathNode":{"id":2527,"name":"Set","nameLocations":["5732:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":2336,"src":"5732:3:11"},"referencedDeclaration":2336,"src":"5732:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5711:10:11","nodeType":"StructDefinition","scope":2938,"src":"5704:45:11","visibility":"public"},{"body":{"id":2547,"nodeType":"Block","src":"5995:47:11","statements":[{"expression":{"arguments":[{"expression":{"id":2542,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"6017:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6021:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2529,"src":"6017:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"6029:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2541,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"6012:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2336_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2540,"id":2546,"nodeType":"Return","src":"6005:30:11"}]},"documentation":{"id":2531,"nodeType":"StructuredDocumentation","src":"5755:159:11","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2548,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5928:3:11","nodeType":"FunctionDefinition","parameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"set","nameLocation":"5951:3:11","nodeType":"VariableDeclaration","scope":2548,"src":"5932:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2533,"nodeType":"UserDefinedTypeName","pathNode":{"id":2532,"name":"Bytes32Set","nameLocations":["5932:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"5932:10:11"},"referencedDeclaration":2530,"src":"5932:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2536,"mutability":"mutable","name":"value","nameLocation":"5964:5:11","nodeType":"VariableDeclaration","scope":2548,"src":"5956:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5956:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5931:39:11"},"returnParameters":{"id":2540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2548,"src":"5989:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2538,"name":"bool","nodeType":"ElementaryTypeName","src":"5989:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5988:6:11"},"scope":2938,"src":"5919:123:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2565,"nodeType":"Block","src":"6289:50:11","statements":[{"expression":{"arguments":[{"expression":{"id":2560,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"6314:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6318:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2529,"src":"6314:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"6326:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2559,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"6306:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2336_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6306:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2558,"id":2564,"nodeType":"Return","src":"6299:33:11"}]},"documentation":{"id":2549,"nodeType":"StructuredDocumentation","src":"6048:157:11","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2566,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6219:6:11","nodeType":"FunctionDefinition","parameters":{"id":2555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2552,"mutability":"mutable","name":"set","nameLocation":"6245:3:11","nodeType":"VariableDeclaration","scope":2566,"src":"6226:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2551,"nodeType":"UserDefinedTypeName","pathNode":{"id":2550,"name":"Bytes32Set","nameLocations":["6226:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"6226:10:11"},"referencedDeclaration":2530,"src":"6226:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2554,"mutability":"mutable","name":"value","nameLocation":"6258:5:11","nodeType":"VariableDeclaration","scope":2566,"src":"6250:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2553,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6250:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6225:39:11"},"returnParameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2566,"src":"6283:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2556,"name":"bool","nodeType":"ElementaryTypeName","src":"6283:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6282:6:11"},"scope":2938,"src":"6210:129:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2583,"nodeType":"Block","src":"6506:52:11","statements":[{"expression":{"arguments":[{"expression":{"id":2578,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"6533:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6537:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2529,"src":"6533:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"6545:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2577,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"6523:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2336_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6523:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2576,"id":2582,"nodeType":"Return","src":"6516:35:11"}]},"documentation":{"id":2567,"nodeType":"StructuredDocumentation","src":"6345:70:11","text":" @dev Returns true if the value is in the set. O(1)."},"id":2584,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6429:8:11","nodeType":"FunctionDefinition","parameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"set","nameLocation":"6457:3:11","nodeType":"VariableDeclaration","scope":2584,"src":"6438:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2569,"nodeType":"UserDefinedTypeName","pathNode":{"id":2568,"name":"Bytes32Set","nameLocations":["6438:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"6438:10:11"},"referencedDeclaration":2530,"src":"6438:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2572,"mutability":"mutable","name":"value","nameLocation":"6470:5:11","nodeType":"VariableDeclaration","scope":2584,"src":"6462:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2571,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6462:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6437:39:11"},"returnParameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2584,"src":"6500:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2574,"name":"bool","nodeType":"ElementaryTypeName","src":"6500:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6499:6:11"},"scope":2938,"src":"6420:138:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2598,"nodeType":"Block","src":"6711:43:11","statements":[{"expression":{"arguments":[{"expression":{"id":2594,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"6736:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6740:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2529,"src":"6736:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2593,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"6728:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2336_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6728:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2592,"id":2597,"nodeType":"Return","src":"6721:26:11"}]},"documentation":{"id":2585,"nodeType":"StructuredDocumentation","src":"6564:70:11","text":" @dev Returns the number of values in the set. O(1)."},"id":2599,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6648:6:11","nodeType":"FunctionDefinition","parameters":{"id":2589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"set","nameLocation":"6674:3:11","nodeType":"VariableDeclaration","scope":2599,"src":"6655:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2587,"nodeType":"UserDefinedTypeName","pathNode":{"id":2586,"name":"Bytes32Set","nameLocations":["6655:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"6655:10:11"},"referencedDeclaration":2530,"src":"6655:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6654:24:11"},"returnParameters":{"id":2592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2599,"src":"6702:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2590,"name":"uint256","nodeType":"ElementaryTypeName","src":"6702:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6701:9:11"},"scope":2938,"src":"6639:115:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2616,"nodeType":"Block","src":"7179:46:11","statements":[{"expression":{"arguments":[{"expression":{"id":2611,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"7200:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2612,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7204:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2529,"src":"7200:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2613,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"7212:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2610,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"7196:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2336_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7196:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2609,"id":2615,"nodeType":"Return","src":"7189:29:11"}]},"documentation":{"id":2600,"nodeType":"StructuredDocumentation","src":"6760:331:11","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2617,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7105:2:11","nodeType":"FunctionDefinition","parameters":{"id":2606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2603,"mutability":"mutable","name":"set","nameLocation":"7127:3:11","nodeType":"VariableDeclaration","scope":2617,"src":"7108:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2602,"nodeType":"UserDefinedTypeName","pathNode":{"id":2601,"name":"Bytes32Set","nameLocations":["7108:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"7108:10:11"},"referencedDeclaration":2530,"src":"7108:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2605,"mutability":"mutable","name":"index","nameLocation":"7140:5:11","nodeType":"VariableDeclaration","scope":2617,"src":"7132:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2604,"name":"uint256","nodeType":"ElementaryTypeName","src":"7132:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7107:39:11"},"returnParameters":{"id":2609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2617,"src":"7170:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7170:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7169:9:11"},"scope":2938,"src":"7096:129:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2646,"nodeType":"Block","src":"7846:219:11","statements":[{"assignments":[2631],"declarations":[{"constant":false,"id":2631,"mutability":"mutable","name":"store","nameLocation":"7873:5:11","nodeType":"VariableDeclaration","scope":2646,"src":"7856:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2629,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7856:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2630,"nodeType":"ArrayTypeName","src":"7856:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2636,"initialValue":{"arguments":[{"expression":{"id":2633,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"7889:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7893:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2529,"src":"7889:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2632,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"7881:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2336_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7881:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7856:44:11"},{"assignments":[2641],"declarations":[{"constant":false,"id":2641,"mutability":"mutable","name":"result","nameLocation":"7927:6:11","nodeType":"VariableDeclaration","scope":2646,"src":"7910:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7910:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2640,"nodeType":"ArrayTypeName","src":"7910:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2642,"nodeType":"VariableDeclarationStatement","src":"7910:23:11"},{"AST":{"nodeType":"YulBlock","src":"7996:39:11","statements":[{"nodeType":"YulAssignment","src":"8010:15:11","value":{"name":"store","nodeType":"YulIdentifier","src":"8020:5:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8010:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2641,"isOffset":false,"isSlot":false,"src":"8010:6:11","valueSize":1},{"declaration":2631,"isOffset":false,"isSlot":false,"src":"8020:5:11","valueSize":1}],"id":2643,"nodeType":"InlineAssembly","src":"7987:48:11"},{"expression":{"id":2644,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"8052:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2626,"id":2645,"nodeType":"Return","src":"8045:13:11"}]},"documentation":{"id":2618,"nodeType":"StructuredDocumentation","src":"7231:529:11","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2647,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7774:6:11","nodeType":"FunctionDefinition","parameters":{"id":2622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"set","nameLocation":"7800:3:11","nodeType":"VariableDeclaration","scope":2647,"src":"7781:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2620,"nodeType":"UserDefinedTypeName","pathNode":{"id":2619,"name":"Bytes32Set","nameLocations":["7781:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"7781:10:11"},"referencedDeclaration":2530,"src":"7781:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7780:24:11"},"returnParameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2647,"src":"7828:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7828:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2624,"nodeType":"ArrayTypeName","src":"7828:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7827:18:11"},"scope":2938,"src":"7765:300:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":2651,"members":[{"constant":false,"id":2650,"mutability":"mutable","name":"_inner","nameLocation":"8122:6:11","nodeType":"VariableDeclaration","scope":2651,"src":"8118:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2649,"nodeType":"UserDefinedTypeName","pathNode":{"id":2648,"name":"Set","nameLocations":["8118:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":2336,"src":"8118:3:11"},"referencedDeclaration":2336,"src":"8118:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8097:10:11","nodeType":"StructDefinition","scope":2938,"src":"8090:45:11","visibility":"public"},{"body":{"id":2677,"nodeType":"Block","src":"8381:74:11","statements":[{"expression":{"arguments":[{"expression":{"id":2663,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"8403:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2651_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8407:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2650,"src":"8403:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"8439:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8431:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2669,"name":"uint160","nodeType":"ElementaryTypeName","src":"8431:7:11","typeDescriptions":{}}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8431:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2667,"name":"uint256","nodeType":"ElementaryTypeName","src":"8423:7:11","typeDescriptions":{}}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8423:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8415:7:11","typeDescriptions":{}}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8415:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2662,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"8398:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2336_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8398:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2661,"id":2676,"nodeType":"Return","src":"8391:57:11"}]},"documentation":{"id":2652,"nodeType":"StructuredDocumentation","src":"8141:159:11","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2678,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8314:3:11","nodeType":"FunctionDefinition","parameters":{"id":2658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2655,"mutability":"mutable","name":"set","nameLocation":"8337:3:11","nodeType":"VariableDeclaration","scope":2678,"src":"8318:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2651_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2654,"nodeType":"UserDefinedTypeName","pathNode":{"id":2653,"name":"AddressSet","nameLocations":["8318:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2651,"src":"8318:10:11"},"referencedDeclaration":2651,"src":"8318:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2651_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2657,"mutability":"mutable","name":"value","nameLocation":"8350:5:11","nodeType":"VariableDeclaration","scope":2678,"src":"8342:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2656,"name":"address","nodeType":"ElementaryTypeName","src":"8342:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8317:39:11"},"returnParameters":{"id":2661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2678,"src":"8375:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2659,"name":"bool","nodeType":"ElementaryTypeName","src":"8375:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8374:6:11"},"scope":2938,"src":"8305:150:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2704,"nodeType":"Block","src":"8702:77:11","statements":[{"expression":{"arguments":[{"expression":{"id":2690,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"8727:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2651_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8731:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2650,"src":"8727:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"8763:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8755:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2696,"name":"uint160","nodeType":"ElementaryTypeName","src":"8755:7:11","typeDescriptions":{}}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8755:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8747:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2694,"name":"uint256","nodeType":"ElementaryTypeName","src":"8747:7:11","typeDescriptions":{}}},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8747:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8739:7:11","typeDescriptions":{}}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2689,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"8719:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2336_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8719:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2688,"id":2703,"nodeType":"Return","src":"8712:60:11"}]},"documentation":{"id":2679,"nodeType":"StructuredDocumentation","src":"8461:157:11","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2705,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8632:6:11","nodeType":"FunctionDefinition","parameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2682,"mutability":"mutable","name":"set","nameLocation":"8658:3:11","nodeType":"VariableDeclaration","scope":2705,"src":"8639:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2651_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2681,"nodeType":"UserDefinedTypeName","pathNode":{"id":2680,"name":"AddressSet","nameLocations":["8639:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2651,"src":"8639:10:11"},"referencedDeclaration":2651,"src":"8639:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2651_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2684,"mutability":"mutable","name":"value","nameLocation":"8671:5:11","nodeType":"VariableDeclaration","scope":2705,"src":"8663:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2683,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8638:39:11"},"returnParameters":{"id":2688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2705,"src":"8696:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2686,"name":"bool","nodeType":"ElementaryTypeName","src":"8696:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8695:6:11"},"scope":2938,"src":"8623:156:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2731,"nodeType":"Block","src":"8946:79:11","statements":[{"expression":{"arguments":[{"expression":{"id":2717,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"8973:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2651_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8977:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2650,"src":"8973:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"9009:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9001:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2723,"name":"uint160","nodeType":"ElementaryTypeName","src":"9001:7:11","typeDescriptions":{}}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9001:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2721,"name":"uint256","nodeType":"ElementaryTypeName","src":"8993:7:11","typeDescriptions":{}}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8993:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8985:7:11","typeDescriptions":{}}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8985:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2716,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"8963:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2336_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8963:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2715,"id":2730,"nodeType":"Return","src":"8956:62:11"}]},"documentation":{"id":2706,"nodeType":"StructuredDocumentation","src":"8785:70:11","text":" @dev Returns true if the value is in the set. O(1)."},"id":2732,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8869:8:11","nodeType":"FunctionDefinition","parameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"set","nameLocation":"8897:3:11","nodeType":"VariableDeclaration","scope":2732,"src":"8878:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2651_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2708,"nodeType":"UserDefinedTypeName","pathNode":{"id":2707,"name":"AddressSet","nameLocations":["8878:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2651,"src":"8878:10:11"},"referencedDeclaration":2651,"src":"8878:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2651_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2711,"mutability":"mutable","name":"value","nameLocation":"8910:5:11","nodeType":"VariableDeclaration","scope":2732,"src":"8902:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2710,"name":"address","nodeType":"ElementaryTypeName","src":"8902:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:39:11"},"returnParameters":{"id":2715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2732,"src":"8940:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2713,"name":"bool","nodeType":"ElementaryTypeName","src":"8940:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8939:6:11"},"scope":2938,"src":"8860:165:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2746,"nodeType":"Block","src":"9178:43:11","statements":[{"expression":{"arguments":[{"expression":{"id":2742,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"9203:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2651_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2743,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9207:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2650,"src":"9203:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2741,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"9195:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2336_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9195:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2740,"id":2745,"nodeType":"Return","src":"9188:26:11"}]},"documentation":{"id":2733,"nodeType":"StructuredDocumentation","src":"9031:70:11","text":" @dev Returns the number of values in the set. O(1)."},"id":2747,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9115:6:11","nodeType":"FunctionDefinition","parameters":{"id":2737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2736,"mutability":"mutable","name":"set","nameLocation":"9141:3:11","nodeType":"VariableDeclaration","scope":2747,"src":"9122:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2651_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2735,"nodeType":"UserDefinedTypeName","pathNode":{"id":2734,"name":"AddressSet","nameLocations":["9122:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2651,"src":"9122:10:11"},"referencedDeclaration":2651,"src":"9122:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2651_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9121:24:11"},"returnParameters":{"id":2740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2747,"src":"9169:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint256","nodeType":"ElementaryTypeName","src":"9169:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9168:9:11"},"scope":2938,"src":"9106:115:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2773,"nodeType":"Block","src":"9646:73:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":2765,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"9691:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2651_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2766,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9695:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2650,"src":"9691:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2767,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"9703:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2764,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"9687:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2336_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9687:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9679:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2762,"name":"uint256","nodeType":"ElementaryTypeName","src":"9679:7:11","typeDescriptions":{}}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9679:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9671:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2760,"name":"uint160","nodeType":"ElementaryTypeName","src":"9671:7:11","typeDescriptions":{}}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9671:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2758,"name":"address","nodeType":"ElementaryTypeName","src":"9663:7:11","typeDescriptions":{}}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9663:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2757,"id":2772,"nodeType":"Return","src":"9656:56:11"}]},"documentation":{"id":2748,"nodeType":"StructuredDocumentation","src":"9227:331:11","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2774,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9572:2:11","nodeType":"FunctionDefinition","parameters":{"id":2754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2751,"mutability":"mutable","name":"set","nameLocation":"9594:3:11","nodeType":"VariableDeclaration","scope":2774,"src":"9575:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2651_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2750,"nodeType":"UserDefinedTypeName","pathNode":{"id":2749,"name":"AddressSet","nameLocations":["9575:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2651,"src":"9575:10:11"},"referencedDeclaration":2651,"src":"9575:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2651_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2753,"mutability":"mutable","name":"index","nameLocation":"9607:5:11","nodeType":"VariableDeclaration","scope":2774,"src":"9599:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2752,"name":"uint256","nodeType":"ElementaryTypeName","src":"9599:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9574:39:11"},"returnParameters":{"id":2757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2774,"src":"9637:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2755,"name":"address","nodeType":"ElementaryTypeName","src":"9637:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9636:9:11"},"scope":2938,"src":"9563:156:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2803,"nodeType":"Block","src":"10340:219:11","statements":[{"assignments":[2788],"declarations":[{"constant":false,"id":2788,"mutability":"mutable","name":"store","nameLocation":"10367:5:11","nodeType":"VariableDeclaration","scope":2803,"src":"10350:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2786,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10350:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2787,"nodeType":"ArrayTypeName","src":"10350:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2793,"initialValue":{"arguments":[{"expression":{"id":2790,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"10383:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2651_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10387:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2650,"src":"10383:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2789,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"10375:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2336_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10375:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10350:44:11"},{"assignments":[2798],"declarations":[{"constant":false,"id":2798,"mutability":"mutable","name":"result","nameLocation":"10421:6:11","nodeType":"VariableDeclaration","scope":2803,"src":"10404:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2796,"name":"address","nodeType":"ElementaryTypeName","src":"10404:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2797,"nodeType":"ArrayTypeName","src":"10404:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2799,"nodeType":"VariableDeclarationStatement","src":"10404:23:11"},{"AST":{"nodeType":"YulBlock","src":"10490:39:11","statements":[{"nodeType":"YulAssignment","src":"10504:15:11","value":{"name":"store","nodeType":"YulIdentifier","src":"10514:5:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10504:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2798,"isOffset":false,"isSlot":false,"src":"10504:6:11","valueSize":1},{"declaration":2788,"isOffset":false,"isSlot":false,"src":"10514:5:11","valueSize":1}],"id":2800,"nodeType":"InlineAssembly","src":"10481:48:11"},{"expression":{"id":2801,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"10546:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2783,"id":2802,"nodeType":"Return","src":"10539:13:11"}]},"documentation":{"id":2775,"nodeType":"StructuredDocumentation","src":"9725:529:11","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2804,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10268:6:11","nodeType":"FunctionDefinition","parameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"set","nameLocation":"10294:3:11","nodeType":"VariableDeclaration","scope":2804,"src":"10275:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2651_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2777,"nodeType":"UserDefinedTypeName","pathNode":{"id":2776,"name":"AddressSet","nameLocations":["10275:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2651,"src":"10275:10:11"},"referencedDeclaration":2651,"src":"10275:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2651_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10274:24:11"},"returnParameters":{"id":2783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2804,"src":"10322:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2780,"name":"address","nodeType":"ElementaryTypeName","src":"10322:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2781,"nodeType":"ArrayTypeName","src":"10322:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10321:18:11"},"scope":2938,"src":"10259:300:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":2808,"members":[{"constant":false,"id":2807,"mutability":"mutable","name":"_inner","nameLocation":"10610:6:11","nodeType":"VariableDeclaration","scope":2808,"src":"10606:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2806,"nodeType":"UserDefinedTypeName","pathNode":{"id":2805,"name":"Set","nameLocations":["10606:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":2336,"src":"10606:3:11"},"referencedDeclaration":2336,"src":"10606:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10588:7:11","nodeType":"StructDefinition","scope":2938,"src":"10581:42:11","visibility":"public"},{"body":{"id":2828,"nodeType":"Block","src":"10866:56:11","statements":[{"expression":{"arguments":[{"expression":{"id":2820,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"10888:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2808_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10892:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2807,"src":"10888:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"10908:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10900:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2822,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10900:7:11","typeDescriptions":{}}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10900:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2819,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"10883:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2336_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10883:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2818,"id":2827,"nodeType":"Return","src":"10876:39:11"}]},"documentation":{"id":2809,"nodeType":"StructuredDocumentation","src":"10629:159:11","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2829,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10802:3:11","nodeType":"FunctionDefinition","parameters":{"id":2815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2812,"mutability":"mutable","name":"set","nameLocation":"10822:3:11","nodeType":"VariableDeclaration","scope":2829,"src":"10806:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2808_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2811,"nodeType":"UserDefinedTypeName","pathNode":{"id":2810,"name":"UintSet","nameLocations":["10806:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2808,"src":"10806:7:11"},"referencedDeclaration":2808,"src":"10806:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2808_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2814,"mutability":"mutable","name":"value","nameLocation":"10835:5:11","nodeType":"VariableDeclaration","scope":2829,"src":"10827:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2813,"name":"uint256","nodeType":"ElementaryTypeName","src":"10827:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10805:36:11"},"returnParameters":{"id":2818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2829,"src":"10860:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2816,"name":"bool","nodeType":"ElementaryTypeName","src":"10860:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10859:6:11"},"scope":2938,"src":"10793:129:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2849,"nodeType":"Block","src":"11166:59:11","statements":[{"expression":{"arguments":[{"expression":{"id":2841,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"11191:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2808_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11195:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2807,"src":"11191:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"11211:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11203:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2843,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11203:7:11","typeDescriptions":{}}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11203:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2840,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"11183:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2336_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11183:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2839,"id":2848,"nodeType":"Return","src":"11176:42:11"}]},"documentation":{"id":2830,"nodeType":"StructuredDocumentation","src":"10928:157:11","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2850,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11099:6:11","nodeType":"FunctionDefinition","parameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2833,"mutability":"mutable","name":"set","nameLocation":"11122:3:11","nodeType":"VariableDeclaration","scope":2850,"src":"11106:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2808_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2832,"nodeType":"UserDefinedTypeName","pathNode":{"id":2831,"name":"UintSet","nameLocations":["11106:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2808,"src":"11106:7:11"},"referencedDeclaration":2808,"src":"11106:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2808_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2835,"mutability":"mutable","name":"value","nameLocation":"11135:5:11","nodeType":"VariableDeclaration","scope":2850,"src":"11127:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2834,"name":"uint256","nodeType":"ElementaryTypeName","src":"11127:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11105:36:11"},"returnParameters":{"id":2839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2850,"src":"11160:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2837,"name":"bool","nodeType":"ElementaryTypeName","src":"11160:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11159:6:11"},"scope":2938,"src":"11090:135:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2870,"nodeType":"Block","src":"11389:61:11","statements":[{"expression":{"arguments":[{"expression":{"id":2862,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"11416:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2808_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11420:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2807,"src":"11416:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"11436:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11428:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11428:7:11","typeDescriptions":{}}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11428:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2861,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"11406:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2336_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11406:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2860,"id":2869,"nodeType":"Return","src":"11399:44:11"}]},"documentation":{"id":2851,"nodeType":"StructuredDocumentation","src":"11231:70:11","text":" @dev Returns true if the value is in the set. O(1)."},"id":2871,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11315:8:11","nodeType":"FunctionDefinition","parameters":{"id":2857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2854,"mutability":"mutable","name":"set","nameLocation":"11340:3:11","nodeType":"VariableDeclaration","scope":2871,"src":"11324:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2808_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2853,"nodeType":"UserDefinedTypeName","pathNode":{"id":2852,"name":"UintSet","nameLocations":["11324:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2808,"src":"11324:7:11"},"referencedDeclaration":2808,"src":"11324:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2808_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2856,"mutability":"mutable","name":"value","nameLocation":"11353:5:11","nodeType":"VariableDeclaration","scope":2871,"src":"11345:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2855,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11323:36:11"},"returnParameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2871,"src":"11383:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2858,"name":"bool","nodeType":"ElementaryTypeName","src":"11383:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11382:6:11"},"scope":2938,"src":"11306:144:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2885,"nodeType":"Block","src":"11600:43:11","statements":[{"expression":{"arguments":[{"expression":{"id":2881,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"11625:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2808_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2882,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11629:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2807,"src":"11625:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2880,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"11617:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2336_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11617:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2879,"id":2884,"nodeType":"Return","src":"11610:26:11"}]},"documentation":{"id":2872,"nodeType":"StructuredDocumentation","src":"11456:70:11","text":" @dev Returns the number of values in the set. O(1)."},"id":2886,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11540:6:11","nodeType":"FunctionDefinition","parameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"set","nameLocation":"11563:3:11","nodeType":"VariableDeclaration","scope":2886,"src":"11547:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2808_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2874,"nodeType":"UserDefinedTypeName","pathNode":{"id":2873,"name":"UintSet","nameLocations":["11547:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2808,"src":"11547:7:11"},"referencedDeclaration":2808,"src":"11547:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2808_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11546:21:11"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2886,"src":"11591:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2877,"name":"uint256","nodeType":"ElementaryTypeName","src":"11591:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11590:9:11"},"scope":2938,"src":"11531:112:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2906,"nodeType":"Block","src":"12065:55:11","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2900,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"12094:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2808_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12098:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2807,"src":"12094:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2902,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"12106:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2899,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"12090:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2336_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12090:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12082:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2897,"name":"uint256","nodeType":"ElementaryTypeName","src":"12082:7:11","typeDescriptions":{}}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12082:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2896,"id":2905,"nodeType":"Return","src":"12075:38:11"}]},"documentation":{"id":2887,"nodeType":"StructuredDocumentation","src":"11649:331:11","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2907,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11994:2:11","nodeType":"FunctionDefinition","parameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2890,"mutability":"mutable","name":"set","nameLocation":"12013:3:11","nodeType":"VariableDeclaration","scope":2907,"src":"11997:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2808_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2889,"nodeType":"UserDefinedTypeName","pathNode":{"id":2888,"name":"UintSet","nameLocations":["11997:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2808,"src":"11997:7:11"},"referencedDeclaration":2808,"src":"11997:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2808_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2892,"mutability":"mutable","name":"index","nameLocation":"12026:5:11","nodeType":"VariableDeclaration","scope":2907,"src":"12018:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2891,"name":"uint256","nodeType":"ElementaryTypeName","src":"12018:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11996:36:11"},"returnParameters":{"id":2896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2907,"src":"12056:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"12056:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12055:9:11"},"scope":2938,"src":"11985:135:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2936,"nodeType":"Block","src":"12738:219:11","statements":[{"assignments":[2921],"declarations":[{"constant":false,"id":2921,"mutability":"mutable","name":"store","nameLocation":"12765:5:11","nodeType":"VariableDeclaration","scope":2936,"src":"12748:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2919,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12748:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2920,"nodeType":"ArrayTypeName","src":"12748:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2926,"initialValue":{"arguments":[{"expression":{"id":2923,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"12781:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2808_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12785:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2807,"src":"12781:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2336_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2922,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"12773:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2336_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12773:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12748:44:11"},{"assignments":[2931],"declarations":[{"constant":false,"id":2931,"mutability":"mutable","name":"result","nameLocation":"12819:6:11","nodeType":"VariableDeclaration","scope":2936,"src":"12802:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2929,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2930,"nodeType":"ArrayTypeName","src":"12802:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2932,"nodeType":"VariableDeclarationStatement","src":"12802:23:11"},{"AST":{"nodeType":"YulBlock","src":"12888:39:11","statements":[{"nodeType":"YulAssignment","src":"12902:15:11","value":{"name":"store","nodeType":"YulIdentifier","src":"12912:5:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12902:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2931,"isOffset":false,"isSlot":false,"src":"12902:6:11","valueSize":1},{"declaration":2921,"isOffset":false,"isSlot":false,"src":"12912:5:11","valueSize":1}],"id":2933,"nodeType":"InlineAssembly","src":"12879:48:11"},{"expression":{"id":2934,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"12944:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2916,"id":2935,"nodeType":"Return","src":"12937:13:11"}]},"documentation":{"id":2908,"nodeType":"StructuredDocumentation","src":"12126:529:11","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2937,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12669:6:11","nodeType":"FunctionDefinition","parameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2911,"mutability":"mutable","name":"set","nameLocation":"12692:3:11","nodeType":"VariableDeclaration","scope":2937,"src":"12676:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2808_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2910,"nodeType":"UserDefinedTypeName","pathNode":{"id":2909,"name":"UintSet","nameLocations":["12676:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2808,"src":"12676:7:11"},"referencedDeclaration":2808,"src":"12676:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2808_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12675:21:11"},"returnParameters":{"id":2916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2937,"src":"12720:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2913,"name":"uint256","nodeType":"ElementaryTypeName","src":"12720:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2914,"nodeType":"ArrayTypeName","src":"12720:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12719:18:11"},"scope":2938,"src":"12660:297:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2939,"src":"1329:11630:11","usedErrors":[],"usedEvents":[]}],"src":"205:12755:11"},"id":11},"contracts/MixerMerkleRoot.sol":{"ast":{"absolutePath":"contracts/MixerMerkleRoot.sol","exportedSymbols":{"AccessControl":[315],"EnumerableSet":[2938],"IERC20":[531],"MerkleProof":[1318],"MixerMerkleRoot":[3798],"ReentrancyGuard":[453]},"id":3799,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2940,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"32:23:12"},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":2942,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3799,"sourceUnit":2939,"src":"56:86:12","symbolAliases":[{"foreign":{"id":2941,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"64:13:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":2944,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3799,"sourceUnit":454,"src":"143:85:12","symbolAliases":[{"foreign":{"id":2943,"name":"ReentrancyGuard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"151:15:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":2946,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3799,"sourceUnit":316,"src":"229:79:12","symbolAliases":[{"foreign":{"id":2945,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"237:13:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":2948,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3799,"sourceUnit":1319,"src":"309:87:12","symbolAliases":[{"foreign":{"id":2947,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"317:11:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2950,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3799,"sourceUnit":532,"src":"397:70:12","symbolAliases":[{"foreign":{"id":2949,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"405:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2952,"name":"AccessControl","nameLocations":["706:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"706:13:12"},"id":2953,"nodeType":"InheritanceSpecifier","src":"706:13:12"},{"baseName":{"id":2954,"name":"ReentrancyGuard","nameLocations":["721:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":453,"src":"721:15:12"},"id":2955,"nodeType":"InheritanceSpecifier","src":"721:15:12"}],"canonicalName":"MixerMerkleRoot","contractDependencies":[],"contractKind":"contract","documentation":{"id":2951,"nodeType":"StructuredDocumentation","src":"469:208:12","text":" @title MixerMerkleRoot\n @dev A contract that allows users to deposit ETH and uses per-deposit Merkle proofs to verify withdrawals\n Uses role-based access control for different permission levels"},"fullyImplemented":true,"id":3798,"linearizedBaseContracts":[3798,453,315,1342,1354,388,561],"name":"MixerMerkleRoot","nameLocation":"687:15:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2959,"libraryName":{"id":2956,"name":"EnumerableSet","nameLocations":["749:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":2938,"src":"749:13:12"},"nodeType":"UsingForDirective","src":"743:49:12","typeName":{"id":2958,"nodeType":"UserDefinedTypeName","pathNode":{"id":2957,"name":"EnumerableSet.Bytes32Set","nameLocations":["767:13:12","781:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"767:24:12"},"referencedDeclaration":2530,"src":"767:24:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}}},{"constant":true,"functionSelector":"e58378bb","id":2964,"mutability":"constant","name":"OWNER_ROLE","nameLocation":"853:10:12","nodeType":"VariableDeclaration","scope":3798,"src":"829:60:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"829:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4f574e45525f524f4c45","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"876:12:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_b19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e","typeString":"literal_string \"OWNER_ROLE\""},"value":"OWNER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_b19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e","typeString":"literal_string \"OWNER_ROLE\""}],"id":2961,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"866:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"866:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"75b238fc","id":2969,"mutability":"constant","name":"ADMIN_ROLE","nameLocation":"919:10:12","nodeType":"VariableDeclaration","scope":3798,"src":"895:60:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"895:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41444d494e5f524f4c45","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"942:12:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""},"value":"ADMIN_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""}],"id":2966,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"932:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"932:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"bc063e1a","id":2972,"mutability":"constant","name":"MAX_FEE","nameLocation":"1032:7:12","nodeType":"VariableDeclaration","scope":3798,"src":"1008:38:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2970,"name":"uint256","nodeType":"ElementaryTypeName","src":"1008:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31303030","id":2971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1042:4:12","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"visibility":"public"},{"constant":false,"functionSelector":"46904840","id":2974,"mutability":"mutable","name":"feeRecipient","nameLocation":"1068:12:12","nodeType":"VariableDeclaration","scope":3798,"src":"1053:27:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2973,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"canonicalName":"MixerMerkleRoot.Deposit","id":2981,"members":[{"constant":false,"id":2976,"mutability":"mutable","name":"depositId","nameLocation":"1120:9:12","nodeType":"VariableDeclaration","scope":2981,"src":"1112:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2975,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1112:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2978,"mutability":"mutable","name":"user","nameLocation":"1162:4:12","nodeType":"VariableDeclaration","scope":2981,"src":"1154:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2977,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2980,"mutability":"mutable","name":"amount","nameLocation":"1184:6:12","nodeType":"VariableDeclaration","scope":2981,"src":"1176:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2979,"name":"uint256","nodeType":"ElementaryTypeName","src":"1176:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Deposit","nameLocation":"1094:7:12","nodeType":"StructDefinition","scope":3798,"src":"1087:110:12","visibility":"public"},{"constant":false,"id":2989,"mutability":"mutable","name":"hasWithdrawn","nameLocation":"1359:12:12","nodeType":"VariableDeclaration","scope":3798,"src":"1278:93:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$_$","typeString":"mapping(bytes32 => mapping(address => mapping(uint256 => bool)))"},"typeName":{"id":2988,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1286:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1278:64:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$_$","typeString":"mapping(bytes32 => mapping(address => mapping(uint256 => bool)))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2987,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2983,"name":"address","nodeType":"ElementaryTypeName","src":"1305:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1297:44:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2986,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2984,"name":"uint256","nodeType":"ElementaryTypeName","src":"1324:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1316:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2985,"name":"bool","nodeType":"ElementaryTypeName","src":"1335:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}}},"visibility":"private"},{"constant":false,"id":2994,"mutability":"mutable","name":"deposits","nameLocation":"1414:8:12","nodeType":"VariableDeclaration","scope":3798,"src":"1378:44:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Deposit_$2981_storage_$","typeString":"mapping(bytes32 => struct MixerMerkleRoot.Deposit)"},"typeName":{"id":2993,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1386:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1378:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Deposit_$2981_storage_$","typeString":"mapping(bytes32 => struct MixerMerkleRoot.Deposit)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2992,"nodeType":"UserDefinedTypeName","pathNode":{"id":2991,"name":"Deposit","nameLocations":["1397:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2981,"src":"1397:7:12"},"referencedDeclaration":2981,"src":"1397:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_storage_ptr","typeString":"struct MixerMerkleRoot.Deposit"}}},"visibility":"private"},{"constant":false,"id":2997,"mutability":"mutable","name":"depositIndex","nameLocation":"1461:12:12","nodeType":"VariableDeclaration","scope":3798,"src":"1428:45:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2996,"nodeType":"UserDefinedTypeName","pathNode":{"id":2995,"name":"EnumerableSet.Bytes32Set","nameLocations":["1428:13:12","1442:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"1428:24:12"},"referencedDeclaration":2530,"src":"1428:24:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"private"},{"constant":false,"functionSelector":"ddca3f43","id":3000,"mutability":"mutable","name":"fee","nameLocation":"1494:3:12","nodeType":"VariableDeclaration","scope":3798,"src":"1479:24:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2998,"name":"uint256","nodeType":"ElementaryTypeName","src":"1479:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1500:3:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"constant":false,"functionSelector":"5c975abb","id":3003,"mutability":"mutable","name":"paused","nameLocation":"1563:6:12","nodeType":"VariableDeclaration","scope":3798,"src":"1551:26:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3001,"name":"bool","nodeType":"ElementaryTypeName","src":"1551:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"66616c7365","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1572:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"visibility":"public"},{"anonymous":false,"eventSelector":"2fc7f61216f4b9da63724a7ccba484452205b7cf651334640e3cd11201786006","id":3011,"name":"DepositCreated","nameLocation":"1604:14:12","nodeType":"EventDefinition","parameters":{"id":3010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3005,"indexed":true,"mutability":"mutable","name":"depositId","nameLocation":"1644:9:12","nodeType":"VariableDeclaration","scope":3011,"src":"1628:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3004,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1628:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3007,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1679:4:12","nodeType":"VariableDeclaration","scope":3011,"src":"1663:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3006,"name":"address","nodeType":"ElementaryTypeName","src":"1663:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3009,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1701:6:12","nodeType":"VariableDeclaration","scope":3011,"src":"1693:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3008,"name":"uint256","nodeType":"ElementaryTypeName","src":"1693:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1618:95:12"},"src":"1598:116:12"},{"anonymous":false,"eventSelector":"528d9479e9f9889a87a3c30c7f7ba537e5e59c4c85a37733b16e57c62df61302","id":3017,"name":"FeeUpdated","nameLocation":"1725:10:12","nodeType":"EventDefinition","parameters":{"id":3016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3013,"indexed":false,"mutability":"mutable","name":"oldFee","nameLocation":"1744:6:12","nodeType":"VariableDeclaration","scope":3017,"src":"1736:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"1736:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3015,"indexed":false,"mutability":"mutable","name":"newFee","nameLocation":"1760:6:12","nodeType":"VariableDeclaration","scope":3017,"src":"1752:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3014,"name":"uint256","nodeType":"ElementaryTypeName","src":"1752:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1735:32:12"},"src":"1719:49:12"},{"anonymous":false,"eventSelector":"aaebcf1bfa00580e41d966056b48521fa9f202645c86d4ddf28113e617c1b1d3","id":3023,"name":"FeeRecipientUpdated","nameLocation":"1779:19:12","nodeType":"EventDefinition","parameters":{"id":3022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3019,"indexed":true,"mutability":"mutable","name":"oldRecipient","nameLocation":"1824:12:12","nodeType":"VariableDeclaration","scope":3023,"src":"1808:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3018,"name":"address","nodeType":"ElementaryTypeName","src":"1808:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3021,"indexed":true,"mutability":"mutable","name":"newRecipient","nameLocation":"1862:12:12","nodeType":"VariableDeclaration","scope":3023,"src":"1846:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3020,"name":"address","nodeType":"ElementaryTypeName","src":"1846:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1798:82:12"},"src":"1773:108:12"},{"anonymous":false,"eventSelector":"d3b273b587e4a15cb1369ade4bcd4b90d2ed5521efc90ba14809d78a7f9f7428","id":3031,"name":"MerkleRootUpdated","nameLocation":"1892:17:12","nodeType":"EventDefinition","parameters":{"id":3030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3025,"indexed":true,"mutability":"mutable","name":"depositId","nameLocation":"1935:9:12","nodeType":"VariableDeclaration","scope":3031,"src":"1919:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3024,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1919:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3027,"indexed":false,"mutability":"mutable","name":"oldRoot","nameLocation":"1962:7:12","nodeType":"VariableDeclaration","scope":3031,"src":"1954:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1954:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3029,"indexed":false,"mutability":"mutable","name":"newRoot","nameLocation":"1987:7:12","nodeType":"VariableDeclaration","scope":3031,"src":"1979:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3028,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1979:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1909:91:12"},"src":"1886:115:12"},{"anonymous":false,"eventSelector":"f459faee68c663908ff1a63dbe00219bea7dc9c03f866771eb43feefe2ef6527","id":3041,"name":"EtherTransferred","nameLocation":"2012:16:12","nodeType":"EventDefinition","parameters":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"indexed":true,"mutability":"mutable","name":"depositId","nameLocation":"2054:9:12","nodeType":"VariableDeclaration","scope":3041,"src":"2038:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3032,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2038:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3035,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2089:4:12","nodeType":"VariableDeclaration","scope":3041,"src":"2073:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3034,"name":"address","nodeType":"ElementaryTypeName","src":"2073:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3037,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2111:6:12","nodeType":"VariableDeclaration","scope":3041,"src":"2103:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3036,"name":"uint256","nodeType":"ElementaryTypeName","src":"2103:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3039,"indexed":false,"mutability":"mutable","name":"releaseTime","nameLocation":"2135:11:12","nodeType":"VariableDeclaration","scope":3041,"src":"2127:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3038,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2028:124:12"},"src":"2006:147:12"},{"anonymous":false,"eventSelector":"b80d1ae5628c2af91424c54c87acfd15016be4bebeef0425b328238702f34831","id":3045,"name":"EmergencyPause","nameLocation":"2164:14:12","nodeType":"EventDefinition","parameters":{"id":3044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3043,"indexed":false,"mutability":"mutable","name":"isPaused","nameLocation":"2184:8:12","nodeType":"VariableDeclaration","scope":3045,"src":"2179:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3042,"name":"bool","nodeType":"ElementaryTypeName","src":"2179:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2178:15:12"},"src":"2158:36:12"},{"anonymous":false,"eventSelector":"049e2797daee2aadd15e6edee0f05ed19e022b55665ff1c33d22b70e89652b46","id":3055,"name":"WithdrawalExecuted","nameLocation":"2205:18:12","nodeType":"EventDefinition","parameters":{"id":3054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3047,"indexed":true,"mutability":"mutable","name":"depositId","nameLocation":"2249:9:12","nodeType":"VariableDeclaration","scope":3055,"src":"2233:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3046,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3049,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2284:4:12","nodeType":"VariableDeclaration","scope":3055,"src":"2268:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3048,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3051,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2306:6:12","nodeType":"VariableDeclaration","scope":3055,"src":"2298:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3050,"name":"uint256","nodeType":"ElementaryTypeName","src":"2298:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3053,"indexed":false,"mutability":"mutable","name":"releaseTime","nameLocation":"2330:11:12","nodeType":"VariableDeclaration","scope":3055,"src":"2322:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3052,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2223:124:12"},"src":"2199:149:12"},{"anonymous":false,"eventSelector":"c01be8cccf858504feb9ca3c65b0e2340a99d0935173883cee33e762f4a2904e","id":3059,"name":"DepositDeleted","nameLocation":"2359:14:12","nodeType":"EventDefinition","parameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3057,"indexed":true,"mutability":"mutable","name":"depositId","nameLocation":"2390:9:12","nodeType":"VariableDeclaration","scope":3059,"src":"2374:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2374:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2373:27:12"},"src":"2353:48:12"},{"body":{"id":3069,"nodeType":"Block","src":"2508:66:12","statements":[{"expression":{"arguments":[{"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2526:7:12","subExpression":{"id":3063,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"2527:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e747261637420697320706175736564","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2535:20:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d","typeString":"literal_string \"Contract is paused\""},"value":"Contract is paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d","typeString":"literal_string \"Contract is paused\""}],"id":3062,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2518:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2518:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3067,"nodeType":"ExpressionStatement","src":"2518:38:12"},{"id":3068,"nodeType":"PlaceholderStatement","src":"2566:1:12"}]},"documentation":{"id":3060,"nodeType":"StructuredDocumentation","src":"2407:71:12","text":" @dev Modifier to check if the contract is not paused"},"id":3070,"name":"whenNotPaused","nameLocation":"2492:13:12","nodeType":"ModifierDefinition","parameters":{"id":3061,"nodeType":"ParameterList","parameters":[],"src":"2505:2:12"},"src":"2483:91:12","virtual":false,"visibility":"internal"},{"body":{"id":3108,"nodeType":"Block","src":"2727:361:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3077,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"2745:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2762:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2754:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3078,"name":"address","nodeType":"ElementaryTypeName","src":"2754:7:12","typeDescriptions":{}}},"id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2754:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2745:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41646d696e2063616e6e6f74206265207a65726f2061646472657373","id":3083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2766:30:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24","typeString":"literal_string \"Admin cannot be zero address\""},"value":"Admin cannot be zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24","typeString":"literal_string \"Admin cannot be zero address\""}],"id":3076,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2737:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2737:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3085,"nodeType":"ExpressionStatement","src":"2737:60:12"},{"expression":{"arguments":[{"id":3087,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2881:18:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3088,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2901:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2905:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2901:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3086,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"2870:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3091,"nodeType":"ExpressionStatement","src":"2870:42:12"},{"expression":{"arguments":[{"id":3093,"name":"OWNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"2933:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3094,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2945:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2949:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2945:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3092,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"2922:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3097,"nodeType":"ExpressionStatement","src":"2922:34:12"},{"expression":{"arguments":[{"id":3099,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"2977:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3100,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"2989:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3098,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"2966:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2966:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3102,"nodeType":"ExpressionStatement","src":"2966:29:12"},{"expression":{"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3103,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"3006:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3104,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3021:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3025:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3021:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3006:25:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3107,"nodeType":"ExpressionStatement","src":"3006:25:12"}]},"documentation":{"id":3071,"nodeType":"StructuredDocumentation","src":"2580:115:12","text":" @dev Constructor that sets up initial roles\n @param admin Address to be granted ADMIN_ROLE"},"id":3109,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"admin","nameLocation":"2720:5:12","nodeType":"VariableDeclaration","scope":3109,"src":"2712:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3072,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2711:15:12"},"returnParameters":{"id":3075,"nodeType":"ParameterList","parameters":[],"src":"2727:0:12"},"scope":3798,"src":"2700:388:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3117,"nodeType":"Block","src":"3212:27:12","statements":[{"expression":{"id":3115,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"3229:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3114,"id":3116,"nodeType":"Return","src":"3222:10:12"}]},"documentation":{"id":3110,"nodeType":"StructuredDocumentation","src":"3094:63:12","text":" @dev Returns the current fee in basis points"},"functionSelector":"ced72f87","id":3118,"implemented":true,"kind":"function","modifiers":[],"name":"getFee","nameLocation":"3171:6:12","nodeType":"FunctionDefinition","parameters":{"id":3111,"nodeType":"ParameterList","parameters":[],"src":"3177:2:12"},"returnParameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3118,"src":"3203:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3112,"name":"uint256","nodeType":"ElementaryTypeName","src":"3203:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3202:9:12"},"scope":3798,"src":"3162:77:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3128,"nodeType":"Block","src":"3367:45:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3124,"name":"depositIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"3384:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3397:6:12","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":2599,"src":"3384:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$2530_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$2530_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"}},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3123,"id":3127,"nodeType":"Return","src":"3377:28:12"}]},"documentation":{"id":3119,"nodeType":"StructuredDocumentation","src":"3245:60:12","text":" @dev Returns the total number of deposits"},"functionSelector":"7d882097","id":3129,"implemented":true,"kind":"function","modifiers":[],"name":"totalDeposits","nameLocation":"3319:13:12","nodeType":"FunctionDefinition","parameters":{"id":3120,"nodeType":"ParameterList","parameters":[],"src":"3332:2:12"},"returnParameters":{"id":3123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3129,"src":"3358:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3121,"name":"uint256","nodeType":"ElementaryTypeName","src":"3358:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3357:9:12"},"scope":3798,"src":"3310:102:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3151,"nodeType":"Block","src":"3602:117:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3138,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"3620:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3139,"name":"depositIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"3628:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3641:6:12","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":2599,"src":"3628:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$2530_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$2530_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3628:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3620:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e646578206f7574206f6620626f756e6473","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3651:21:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","typeString":"literal_string \"Index out of bounds\""},"value":"Index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","typeString":"literal_string \"Index out of bounds\""}],"id":3137,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3612:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3612:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3145,"nodeType":"ExpressionStatement","src":"3612:61:12"},{"expression":{"arguments":[{"id":3148,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"3706:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3146,"name":"depositIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"3690:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3703:2:12","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":2617,"src":"3690:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$2530_storage_ptr_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_struct$_Bytes32Set_$2530_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3690:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3136,"id":3150,"nodeType":"Return","src":"3683:29:12"}]},"documentation":{"id":3130,"nodeType":"StructuredDocumentation","src":"3418:108:12","text":" @dev Returns the deposit ID at the specified index\n @param index The index to query"},"functionSelector":"b75f5e60","id":3152,"implemented":true,"kind":"function","modifiers":[],"name":"getDepositIdAt","nameLocation":"3540:14:12","nodeType":"FunctionDefinition","parameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3132,"mutability":"mutable","name":"index","nameLocation":"3563:5:12","nodeType":"VariableDeclaration","scope":3152,"src":"3555:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3131,"name":"uint256","nodeType":"ElementaryTypeName","src":"3555:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3554:15:12"},"returnParameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3152,"src":"3593:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3593:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3592:9:12"},"scope":3798,"src":"3531:188:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3173,"nodeType":"Block","src":"3928:161:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":3164,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"3981:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3162,"name":"depositIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"3959:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3972:8:12","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":2584,"src":"3959:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$2530_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$2530_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3959:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"517565727920666f72206e6f6e6578697374656e74206465706f736974","id":3166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4005:31:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cacadcc73db8e6395c114dc30f0bb9c982ee87d348a2924baa79be69e3bb4687","typeString":"literal_string \"Query for nonexistent deposit\""},"value":"Query for nonexistent deposit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cacadcc73db8e6395c114dc30f0bb9c982ee87d348a2924baa79be69e3bb4687","typeString":"literal_string \"Query for nonexistent deposit\""}],"id":3161,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3938:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3938:108:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3168,"nodeType":"ExpressionStatement","src":"3938:108:12"},{"expression":{"baseExpression":{"id":3169,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"4063:8:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Deposit_$2981_storage_$","typeString":"mapping(bytes32 => struct MixerMerkleRoot.Deposit storage ref)"}},"id":3171,"indexExpression":{"id":3170,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"4072:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4063:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_storage","typeString":"struct MixerMerkleRoot.Deposit storage ref"}},"functionReturnParameters":3160,"id":3172,"nodeType":"Return","src":"4056:26:12"}]},"documentation":{"id":3153,"nodeType":"StructuredDocumentation","src":"3725:106:12","text":" @dev Gets deposit details by deposit ID\n @param depositId The deposit ID to query"},"functionSelector":"7a86983f","id":3174,"implemented":true,"kind":"function","modifiers":[],"name":"getDeposit","nameLocation":"3845:10:12","nodeType":"FunctionDefinition","parameters":{"id":3156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3155,"mutability":"mutable","name":"depositId","nameLocation":"3873:9:12","nodeType":"VariableDeclaration","scope":3174,"src":"3865:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3865:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3855:33:12"},"returnParameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3174,"src":"3912:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_memory_ptr","typeString":"struct MixerMerkleRoot.Deposit"},"typeName":{"id":3158,"nodeType":"UserDefinedTypeName","pathNode":{"id":3157,"name":"Deposit","nameLocations":["3912:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2981,"src":"3912:7:12"},"referencedDeclaration":2981,"src":"3912:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_storage_ptr","typeString":"struct MixerMerkleRoot.Deposit"}},"visibility":"internal"}],"src":"3911:16:12"},"scope":3798,"src":"3836:253:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3269,"nodeType":"Block","src":"4345:954:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3185,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4363:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4367:5:12","memberName":"value","nodeType":"MemberAccess","src":"4363:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4375:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4363:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f73697420616d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":3189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4378:42:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71","typeString":"literal_string \"Deposit amount must be greater than zero\""},"value":"Deposit amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71","typeString":"literal_string \"Deposit amount must be greater than zero\""}],"id":3184,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4355:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4355:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3191,"nodeType":"ExpressionStatement","src":"4355:66:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3193,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"4439:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4460:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4452:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4452:7:12","typeDescriptions":{}}},"id":3197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4452:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4439:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204d65726b6c6520726f6f74","id":3199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4464:21:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_24ad9e456a2ce0106486031801792ed30a6c347256d2d81e2b2aae7dcd707129","typeString":"literal_string \"Invalid Merkle root\""},"value":"Invalid Merkle root"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24ad9e456a2ce0106486031801792ed30a6c347256d2d81e2b2aae7dcd707129","typeString":"literal_string \"Invalid Merkle root\""}],"id":3192,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4431:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4431:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3201,"nodeType":"ExpressionStatement","src":"4431:55:12"},{"expression":{"arguments":[{"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4550:33:12","subExpression":{"arguments":[{"id":3205,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"4573:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3203,"name":"depositIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"4551:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4564:8:12","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":2584,"src":"4551:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$2530_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$2530_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f73697420494420616c726561647920657869737473","id":3208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4585:27:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_004c0fa1591e755bd6bc2a320c434e2cacca3ce858e00934e976ba0265b4cd87","typeString":"literal_string \"Deposit ID already exists\""},"value":"Deposit ID already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_004c0fa1591e755bd6bc2a320c434e2cacca3ce858e00934e976ba0265b4cd87","typeString":"literal_string \"Deposit ID already exists\""}],"id":3202,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4542:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4542:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3210,"nodeType":"ExpressionStatement","src":"4542:71:12"},{"assignments":[3212],"declarations":[{"constant":false,"id":3212,"mutability":"mutable","name":"feeAmount","nameLocation":"4657:9:12","nodeType":"VariableDeclaration","scope":3269,"src":"4649:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3211,"name":"uint256","nodeType":"ElementaryTypeName","src":"4649:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3220,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3213,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4670:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4674:5:12","memberName":"value","nodeType":"MemberAccess","src":"4670:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3215,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"4682:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4670:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3217,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4669:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4689:5:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"4669:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4649:45:12"},{"assignments":[3222],"declarations":[{"constant":false,"id":3222,"mutability":"mutable","name":"netAmount","nameLocation":"4712:9:12","nodeType":"VariableDeclaration","scope":3269,"src":"4704:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"4704:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3227,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3223,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4724:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4728:5:12","memberName":"value","nodeType":"MemberAccess","src":"4724:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3225,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"4736:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4724:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4704:41:12"},{"expression":{"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3228,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"4826:8:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Deposit_$2981_storage_$","typeString":"mapping(bytes32 => struct MixerMerkleRoot.Deposit storage ref)"}},"id":3230,"indexExpression":{"id":3229,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"4835:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4826:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_storage","typeString":"struct MixerMerkleRoot.Deposit storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3232,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"4856:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3233,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4867:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4871:6:12","memberName":"sender","nodeType":"MemberAccess","src":"4867:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3235,"name":"netAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"4879:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3231,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"4848:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Deposit_$2981_storage_ptr_$","typeString":"type(struct MixerMerkleRoot.Deposit storage pointer)"}},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4848:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_memory_ptr","typeString":"struct MixerMerkleRoot.Deposit memory"}},"src":"4826:63:12","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_storage","typeString":"struct MixerMerkleRoot.Deposit storage ref"}},"id":3238,"nodeType":"ExpressionStatement","src":"4826:63:12"},{"expression":{"arguments":[{"id":3242,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"4916:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3239,"name":"depositIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"4899:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4912:3:12","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2548,"src":"4899:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$2530_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$2530_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4899:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3244,"nodeType":"ExpressionStatement","src":"4899:27:12"},{"eventCall":{"arguments":[{"id":3246,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"5039:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3247,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5050:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5054:6:12","memberName":"sender","nodeType":"MemberAccess","src":"5050:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3249,"name":"netAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"5062:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3245,"name":"DepositCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"5024:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5024:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3251,"nodeType":"EmitStatement","src":"5019:53:12"},{"assignments":[3253,null],"declarations":[{"constant":false,"id":3253,"mutability":"mutable","name":"feeTransferSuccess","nameLocation":"5138:18:12","nodeType":"VariableDeclaration","scope":3269,"src":"5133:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3252,"name":"bool","nodeType":"ElementaryTypeName","src":"5133:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3263,"initialValue":{"arguments":[{"hexValue":"","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5229:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":3256,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"5170:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5162:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3254,"name":"address","nodeType":"ElementaryTypeName","src":"5162:7:12","typeDescriptions":{}}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5162:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5184:4:12","memberName":"call","nodeType":"MemberAccess","src":"5162:26:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3259,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"5209:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5162:66:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5162:70:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5132:100:12"},{"expression":{"arguments":[{"id":3265,"name":"feeTransferSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"5250:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466565207472616e73666572206661696c6564","id":3266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5270:21:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""},"value":"Fee transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""}],"id":3264,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5242:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5242:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3268,"nodeType":"ExpressionStatement","src":"5242:50:12"}]},"documentation":{"id":3175,"nodeType":"StructuredDocumentation","src":"4095:151:12","text":" @dev Allows a user to deposit ETH with a Merkle root\n @param depositId The Merkle root containing user/amount/releaseTime data"},"functionSelector":"b214faa5","id":3270,"implemented":true,"kind":"function","modifiers":[{"id":3180,"kind":"modifierInvocation","modifierName":{"id":3179,"name":"nonReentrant","nameLocations":["4318:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":418,"src":"4318:12:12"},"nodeType":"ModifierInvocation","src":"4318:12:12"},{"id":3182,"kind":"modifierInvocation","modifierName":{"id":3181,"name":"whenNotPaused","nameLocations":["4331:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":3070,"src":"4331:13:12"},"nodeType":"ModifierInvocation","src":"4331:13:12"}],"name":"deposit","nameLocation":"4260:7:12","nodeType":"FunctionDefinition","parameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3177,"mutability":"mutable","name":"depositId","nameLocation":"4285:9:12","nodeType":"VariableDeclaration","scope":3270,"src":"4277:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4277:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4267:33:12"},"returnParameters":{"id":3183,"nodeType":"ParameterList","parameters":[],"src":"4345:0:12"},"scope":3798,"src":"4251:1048:12","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3290,"nodeType":"Block","src":"5694:66:12","statements":[{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":3282,"name":"hasWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"5711:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$_$","typeString":"mapping(bytes32 => mapping(address => mapping(uint256 => bool)))"}},"id":3284,"indexExpression":{"id":3283,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"5724:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5711:23:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":3286,"indexExpression":{"id":3285,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3275,"src":"5735:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5711:29:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":3288,"indexExpression":{"id":3287,"name":"releaseTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"5741:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5711:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3281,"id":3289,"nodeType":"Return","src":"5704:49:12"}]},"documentation":{"id":3271,"nodeType":"StructuredDocumentation","src":"5305:245:12","text":" @dev Checks if a withdrawal has already been made\n @param depositId The deposit to check\n @param user The user address to check\n @param releaseTime The release time that identifies this withdrawal opportunity"},"functionSelector":"3cbf725c","id":3291,"implemented":true,"kind":"function","modifiers":[],"name":"hasUserWithdrawn","nameLocation":"5564:16:12","nodeType":"FunctionDefinition","parameters":{"id":3278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3273,"mutability":"mutable","name":"depositId","nameLocation":"5598:9:12","nodeType":"VariableDeclaration","scope":3291,"src":"5590:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5590:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3275,"mutability":"mutable","name":"user","nameLocation":"5625:4:12","nodeType":"VariableDeclaration","scope":3291,"src":"5617:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3274,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3277,"mutability":"mutable","name":"releaseTime","nameLocation":"5647:11:12","nodeType":"VariableDeclaration","scope":3291,"src":"5639:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"5639:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5580:84:12"},"returnParameters":{"id":3281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3291,"src":"5688:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3279,"name":"bool","nodeType":"ElementaryTypeName","src":"5688:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5687:6:12"},"scope":3798,"src":"5555:205:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3375,"nodeType":"Block","src":"6308:939:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":3311,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"6348:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3309,"name":"depositIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"6326:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6339:8:12","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":2584,"src":"6326:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$2530_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$2530_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6326:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f73697420494420646f6573206e6f74206578697374","id":3313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6360:27:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a87c9e0d3eefbac0f3a8e33df8ba206353d61a7c4bcb58b89c11ac8e66ce6d56","typeString":"literal_string \"Deposit ID does not exist\""},"value":"Deposit ID does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a87c9e0d3eefbac0f3a8e33df8ba206353d61a7c4bcb58b89c11ac8e66ce6d56","typeString":"literal_string \"Deposit ID does not exist\""}],"id":3308,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6318:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6318:70:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3315,"nodeType":"ExpressionStatement","src":"6318:70:12"},{"assignments":[3318],"declarations":[{"constant":false,"id":3318,"mutability":"mutable","name":"userDeposit","nameLocation":"6414:11:12","nodeType":"VariableDeclaration","scope":3375,"src":"6398:27:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_storage_ptr","typeString":"struct MixerMerkleRoot.Deposit"},"typeName":{"id":3317,"nodeType":"UserDefinedTypeName","pathNode":{"id":3316,"name":"Deposit","nameLocations":["6398:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2981,"src":"6398:7:12"},"referencedDeclaration":2981,"src":"6398:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_storage_ptr","typeString":"struct MixerMerkleRoot.Deposit"}},"visibility":"internal"}],"id":3322,"initialValue":{"baseExpression":{"id":3319,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"6428:8:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Deposit_$2981_storage_$","typeString":"mapping(bytes32 => struct MixerMerkleRoot.Deposit storage ref)"}},"id":3321,"indexExpression":{"id":3320,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"6437:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6428:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_storage","typeString":"struct MixerMerkleRoot.Deposit storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6398:49:12"},{"assignments":[3324],"declarations":[{"constant":false,"id":3324,"mutability":"mutable","name":"leaf","nameLocation":"6501:4:12","nodeType":"VariableDeclaration","scope":3375,"src":"6493:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6493:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3333,"initialValue":{"arguments":[{"arguments":[{"id":3328,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"6548:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3329,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"6559:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3330,"name":"releaseTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"6567:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3326,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6531:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6535:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"6531:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6531:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3325,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6508:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6508:81:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6493:96:12"},{"expression":{"arguments":[{"arguments":[{"id":3337,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"6639:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"expression":{"id":3338,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"6652:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_storage_ptr","typeString":"struct MixerMerkleRoot.Deposit storage pointer"}},"id":3339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6664:9:12","memberName":"depositId","nodeType":"MemberAccess","referencedDeclaration":2976,"src":"6652:21:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3340,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"6675:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3335,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"6620:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$1318_$","typeString":"type(library MerkleProof)"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6632:6:12","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":814,"src":"6620:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6620:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d65726b6c652070726f6f66","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6694:22:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_9e0b6a3c3c2892dcc46975fd4747d409a6200f0f6763c4000ee1783c7e6b5410","typeString":"literal_string \"Invalid merkle proof\""},"value":"Invalid merkle proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9e0b6a3c3c2892dcc46975fd4747d409a6200f0f6763c4000ee1783c7e6b5410","typeString":"literal_string \"Invalid merkle proof\""}],"id":3334,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6599:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6599:127:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3344,"nodeType":"ExpressionStatement","src":"6599:127:12"},{"expression":{"arguments":[{"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6796:48:12","subExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":3346,"name":"hasWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"6797:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$_$","typeString":"mapping(bytes32 => mapping(address => mapping(uint256 => bool)))"}},"id":3348,"indexExpression":{"id":3347,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"6810:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6797:23:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":3350,"indexExpression":{"id":3349,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"6821:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6797:34:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":3352,"indexExpression":{"id":3351,"name":"releaseTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"6832:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6797:47:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c72656164792077697468647261776e","id":3354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6858:19:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_6b293b0896b22dc3a03a4f229b72f78da937962c6081a958fe0adeeb67107219","typeString":"literal_string \"Already withdrawn\""},"value":"Already withdrawn"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6b293b0896b22dc3a03a4f229b72f78da937962c6081a958fe0adeeb67107219","typeString":"literal_string \"Already withdrawn\""}],"id":3345,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6775:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6775:112:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3356,"nodeType":"ExpressionStatement","src":"6775:112:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3358,"name":"releaseTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"6969:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3359,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6984:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6990:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"6984:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6969:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52656c656173652074696d65206e6f742072656163686564","id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7013:26:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_98697925fb039aaca86dc4adabe52515e4418e1e556d3a371cdce8ced9b902f6","typeString":"literal_string \"Release time not reached\""},"value":"Release time not reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_98697925fb039aaca86dc4adabe52515e4418e1e556d3a371cdce8ced9b902f6","typeString":"literal_string \"Release time not reached\""}],"id":3357,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6948:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6948:101:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3364,"nodeType":"ExpressionStatement","src":"6948:101:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3366,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"7129:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_storage_ptr","typeString":"struct MixerMerkleRoot.Deposit storage pointer"}},"id":3367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7141:6:12","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2980,"src":"7129:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3368,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"7151:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7129:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206465706f73697420616d6f756e74","id":3370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7171:29:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_4ea48790db13e4ee9ddfd7285660e5d12af98045629460d48a74e53124125a3d","typeString":"literal_string \"Insufficient deposit amount\""},"value":"Insufficient deposit amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4ea48790db13e4ee9ddfd7285660e5d12af98045629460d48a74e53124125a3d","typeString":"literal_string \"Insufficient deposit amount\""}],"id":3365,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7108:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7108:102:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3372,"nodeType":"ExpressionStatement","src":"7108:102:12"},{"expression":{"hexValue":"74727565","id":3373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7236:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3307,"id":3374,"nodeType":"Return","src":"7229:11:12"}]},"documentation":{"id":3292,"nodeType":"StructuredDocumentation","src":"5766:326:12","text":" @dev Checks if a withdrawal can be made\n @param depositId The deposit ID to check\n @param recipient The recipient address\n @param amount The amount to withdraw\n @param releaseTime The release time for the withdrawal\n @param merkleProof The Merkle proof to verify the withdrawal"},"functionSelector":"bf301d84","id":3376,"implemented":true,"kind":"function","modifiers":[],"name":"shouldTransferEther","nameLocation":"6106:19:12","nodeType":"FunctionDefinition","parameters":{"id":3304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3294,"mutability":"mutable","name":"depositId","nameLocation":"6143:9:12","nodeType":"VariableDeclaration","scope":3376,"src":"6135:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6135:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3296,"mutability":"mutable","name":"recipient","nameLocation":"6170:9:12","nodeType":"VariableDeclaration","scope":3376,"src":"6162:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3295,"name":"address","nodeType":"ElementaryTypeName","src":"6162:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3298,"mutability":"mutable","name":"amount","nameLocation":"6197:6:12","nodeType":"VariableDeclaration","scope":3376,"src":"6189:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3297,"name":"uint256","nodeType":"ElementaryTypeName","src":"6189:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3300,"mutability":"mutable","name":"releaseTime","nameLocation":"6221:11:12","nodeType":"VariableDeclaration","scope":3376,"src":"6213:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"6213:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3303,"mutability":"mutable","name":"merkleProof","nameLocation":"6261:11:12","nodeType":"VariableDeclaration","scope":3376,"src":"6242:30:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6242:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3302,"nodeType":"ArrayTypeName","src":"6242:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6125:153:12"},"returnParameters":{"id":3307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3376,"src":"6302:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3305,"name":"bool","nodeType":"ElementaryTypeName","src":"6302:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6301:6:12"},"scope":3798,"src":"6097:1150:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3494,"nodeType":"Block","src":"7863:1144:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":3401,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"7903:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3399,"name":"depositIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"7881:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7894:8:12","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":2584,"src":"7881:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$2530_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$2530_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7881:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f73697420494420646f6573206e6f74206578697374","id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7915:27:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a87c9e0d3eefbac0f3a8e33df8ba206353d61a7c4bcb58b89c11ac8e66ce6d56","typeString":"literal_string \"Deposit ID does not exist\""},"value":"Deposit ID does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a87c9e0d3eefbac0f3a8e33df8ba206353d61a7c4bcb58b89c11ac8e66ce6d56","typeString":"literal_string \"Deposit ID does not exist\""}],"id":3398,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7873:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7873:70:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3405,"nodeType":"ExpressionStatement","src":"7873:70:12"},{"assignments":[3408],"declarations":[{"constant":false,"id":3408,"mutability":"mutable","name":"userDeposit","nameLocation":"7969:11:12","nodeType":"VariableDeclaration","scope":3494,"src":"7953:27:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_storage_ptr","typeString":"struct MixerMerkleRoot.Deposit"},"typeName":{"id":3407,"nodeType":"UserDefinedTypeName","pathNode":{"id":3406,"name":"Deposit","nameLocations":["7953:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2981,"src":"7953:7:12"},"referencedDeclaration":2981,"src":"7953:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_storage_ptr","typeString":"struct MixerMerkleRoot.Deposit"}},"visibility":"internal"}],"id":3412,"initialValue":{"baseExpression":{"id":3409,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"7983:8:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Deposit_$2981_storage_$","typeString":"mapping(bytes32 => struct MixerMerkleRoot.Deposit storage ref)"}},"id":3411,"indexExpression":{"id":3410,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"7992:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7983:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_storage","typeString":"struct MixerMerkleRoot.Deposit storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7953:49:12"},{"assignments":[3414],"declarations":[{"constant":false,"id":3414,"mutability":"mutable","name":"shouldTransfer","nameLocation":"8018:14:12","nodeType":"VariableDeclaration","scope":3494,"src":"8013:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3413,"name":"bool","nodeType":"ElementaryTypeName","src":"8013:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3423,"initialValue":{"arguments":[{"id":3417,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8073:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3418,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"8096:9:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3419,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"8119:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3420,"name":"releaseTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"8139:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3421,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"8164:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}],"expression":{"id":3415,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8035:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_MixerMerkleRoot_$3798","typeString":"contract MixerMerkleRoot"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8040:19:12","memberName":"shouldTransferEther","nodeType":"MemberAccess","referencedDeclaration":3376,"src":"8035:24:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes32,address,uint256,uint256,bytes32[] memory) view external returns (bool)"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8035:150:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"8013:172:12"},{"expression":{"arguments":[{"id":3425,"name":"shouldTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"8203:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207769746864726177616c20636f6e646974696f6e73","id":3426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8219:31:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1bf4c4e730d5ee6cec86008d2bfd433f0c42d1b0ac13b55ae99ee97c360662b0","typeString":"literal_string \"Invalid withdrawal conditions\""},"value":"Invalid withdrawal conditions"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1bf4c4e730d5ee6cec86008d2bfd433f0c42d1b0ac13b55ae99ee97c360662b0","typeString":"literal_string \"Invalid withdrawal conditions\""}],"id":3424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8195:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8195:56:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3428,"nodeType":"ExpressionStatement","src":"8195:56:12"},{"expression":{"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":3429,"name":"hasWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"8350:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$_$","typeString":"mapping(bytes32 => mapping(address => mapping(uint256 => bool)))"}},"id":3433,"indexExpression":{"id":3430,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8363:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8350:23:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":3434,"indexExpression":{"id":3431,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"8374:9:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8350:34:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":3435,"indexExpression":{"id":3432,"name":"releaseTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"8385:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8350:47:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8400:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8350:54:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3438,"nodeType":"ExpressionStatement","src":"8350:54:12"},{"assignments":[3440],"declarations":[{"constant":false,"id":3440,"mutability":"mutable","name":"newAmount","nameLocation":"8456:9:12","nodeType":"VariableDeclaration","scope":3494,"src":"8448:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3439,"name":"uint256","nodeType":"ElementaryTypeName","src":"8448:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3445,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3441,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"8468:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_storage_ptr","typeString":"struct MixerMerkleRoot.Deposit storage pointer"}},"id":3442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8480:6:12","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2980,"src":"8468:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3443,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"8489:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8468:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8448:47:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3446,"name":"newAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"8509:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8522:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8509:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3471,"nodeType":"Block","src":"8670:55:12","statements":[{"expression":{"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3465,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"8684:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_storage_ptr","typeString":"struct MixerMerkleRoot.Deposit storage pointer"}},"id":3467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8696:6:12","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2980,"src":"8684:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3468,"name":"newAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"8705:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8684:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3470,"nodeType":"ExpressionStatement","src":"8684:30:12"}]},"id":3472,"nodeType":"IfStatement","src":"8505:220:12","trueBody":{"id":3464,"nodeType":"Block","src":"8525:139:12","statements":[{"expression":{"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"8539:26:12","subExpression":{"baseExpression":{"id":3449,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"8546:8:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Deposit_$2981_storage_$","typeString":"mapping(bytes32 => struct MixerMerkleRoot.Deposit storage ref)"}},"id":3451,"indexExpression":{"id":3450,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8555:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8546:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_storage","typeString":"struct MixerMerkleRoot.Deposit storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3453,"nodeType":"ExpressionStatement","src":"8539:26:12"},{"expression":{"arguments":[{"id":3457,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8599:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3454,"name":"depositIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"8579:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8592:6:12","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":2566,"src":"8579:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$2530_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$2530_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8579:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3459,"nodeType":"ExpressionStatement","src":"8579:30:12"},{"eventCall":{"arguments":[{"id":3461,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8643:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3460,"name":"DepositDeleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"8628:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8628:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3463,"nodeType":"EmitStatement","src":"8623:30:12"}]}},{"eventCall":{"arguments":[{"id":3474,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8824:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3475,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"8835:9:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3476,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"8846:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3477,"name":"releaseTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"8854:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3473,"name":"EtherTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"8807:16:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256,uint256)"}},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8807:59:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3479,"nodeType":"EmitStatement","src":"8802:64:12"},{"assignments":[3481,null],"declarations":[{"constant":false,"id":3481,"mutability":"mutable","name":"success","nameLocation":"8909:7:12","nodeType":"VariableDeclaration","scope":3494,"src":"8904:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3480,"name":"bool","nodeType":"ElementaryTypeName","src":"8904:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3488,"initialValue":{"arguments":[{"hexValue":"","id":3486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8952:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3482,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"8922:9:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8932:4:12","memberName":"call","nodeType":"MemberAccess","src":"8922:14:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3484,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"8944:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8922:29:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8922:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8903:52:12"},{"expression":{"arguments":[{"id":3490,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"8973:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":3491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8982:17:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":3489,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8965:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8965:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3493,"nodeType":"ExpressionStatement","src":"8965:35:12"}]},"documentation":{"id":3377,"nodeType":"StructuredDocumentation","src":"7253:364:12","text":" @dev Allows an admin to transfer ETH from the contract\n @param depositId The ID of the deposit to transfer from\n @param recipient The address to send ETH to\n @param amount The amount of ETH to send\n @param releaseTime The release time for the withdrawal\n @param merkleProof The Merkle proof to verify the withdrawal"},"functionSelector":"34bafb60","id":3495,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3391,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"7824:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3392,"kind":"modifierInvocation","modifierName":{"id":3390,"name":"onlyRole","nameLocations":["7815:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"7815:8:12"},"nodeType":"ModifierInvocation","src":"7815:20:12"},{"id":3394,"kind":"modifierInvocation","modifierName":{"id":3393,"name":"nonReentrant","nameLocations":["7836:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":418,"src":"7836:12:12"},"nodeType":"ModifierInvocation","src":"7836:12:12"},{"id":3396,"kind":"modifierInvocation","modifierName":{"id":3395,"name":"whenNotPaused","nameLocations":["7849:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":3070,"src":"7849:13:12"},"nodeType":"ModifierInvocation","src":"7849:13:12"}],"name":"transferEther","nameLocation":"7631:13:12","nodeType":"FunctionDefinition","parameters":{"id":3389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"depositId","nameLocation":"7662:9:12","nodeType":"VariableDeclaration","scope":3495,"src":"7654:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7654:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3381,"mutability":"mutable","name":"recipient","nameLocation":"7697:9:12","nodeType":"VariableDeclaration","scope":3495,"src":"7681:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3380,"name":"address","nodeType":"ElementaryTypeName","src":"7681:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3383,"mutability":"mutable","name":"amount","nameLocation":"7724:6:12","nodeType":"VariableDeclaration","scope":3495,"src":"7716:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3382,"name":"uint256","nodeType":"ElementaryTypeName","src":"7716:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3385,"mutability":"mutable","name":"releaseTime","nameLocation":"7748:11:12","nodeType":"VariableDeclaration","scope":3495,"src":"7740:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3384,"name":"uint256","nodeType":"ElementaryTypeName","src":"7740:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3388,"mutability":"mutable","name":"merkleProof","nameLocation":"7788:11:12","nodeType":"VariableDeclaration","scope":3495,"src":"7769:30:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7769:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3387,"nodeType":"ArrayTypeName","src":"7769:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7644:161:12"},"returnParameters":{"id":3397,"nodeType":"ParameterList","parameters":[],"src":"7863:0:12"},"scope":3798,"src":"7622:1385:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3578,"nodeType":"Block","src":"9271:648:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":3509,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"9311:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3507,"name":"depositIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"9289:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9302:8:12","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":2584,"src":"9289:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$2530_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$2530_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9289:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f73697420494420646f6573206e6f74206578697374","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9323:27:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a87c9e0d3eefbac0f3a8e33df8ba206353d61a7c4bcb58b89c11ac8e66ce6d56","typeString":"literal_string \"Deposit ID does not exist\""},"value":"Deposit ID does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a87c9e0d3eefbac0f3a8e33df8ba206353d61a7c4bcb58b89c11ac8e66ce6d56","typeString":"literal_string \"Deposit ID does not exist\""}],"id":3506,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9281:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9281:70:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3513,"nodeType":"ExpressionStatement","src":"9281:70:12"},{"assignments":[3516],"declarations":[{"constant":false,"id":3516,"mutability":"mutable","name":"userDeposit","nameLocation":"9377:11:12","nodeType":"VariableDeclaration","scope":3578,"src":"9362:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_memory_ptr","typeString":"struct MixerMerkleRoot.Deposit"},"typeName":{"id":3515,"nodeType":"UserDefinedTypeName","pathNode":{"id":3514,"name":"Deposit","nameLocations":["9362:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2981,"src":"9362:7:12"},"referencedDeclaration":2981,"src":"9362:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_storage_ptr","typeString":"struct MixerMerkleRoot.Deposit"}},"visibility":"internal"}],"id":3520,"initialValue":{"baseExpression":{"id":3517,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"9391:8:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Deposit_$2981_storage_$","typeString":"mapping(bytes32 => struct MixerMerkleRoot.Deposit storage ref)"}},"id":3519,"indexExpression":{"id":3518,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"9400:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9391:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_storage","typeString":"struct MixerMerkleRoot.Deposit storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9362:48:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3522,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"9428:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_memory_ptr","typeString":"struct MixerMerkleRoot.Deposit memory"}},"id":3523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9440:4:12","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":2978,"src":"9428:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9456:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9448:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3524,"name":"address","nodeType":"ElementaryTypeName","src":"9448:7:12","typeDescriptions":{}}},"id":3527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9428:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f736974206e6f7420666f756e64","id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9460:19:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_18ba671663cc149608333373fe3daaddc64eb144864b7962cfeb52050b5de2ce","typeString":"literal_string \"Deposit not found\""},"value":"Deposit not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_18ba671663cc149608333373fe3daaddc64eb144864b7962cfeb52050b5de2ce","typeString":"literal_string \"Deposit not found\""}],"id":3521,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9420:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9420:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3531,"nodeType":"ExpressionStatement","src":"9420:60:12"},{"assignments":[3533],"declarations":[{"constant":false,"id":3533,"mutability":"mutable","name":"amount","nameLocation":"9499:6:12","nodeType":"VariableDeclaration","scope":3578,"src":"9491:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3532,"name":"uint256","nodeType":"ElementaryTypeName","src":"9491:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3536,"initialValue":{"expression":{"id":3534,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"9508:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_memory_ptr","typeString":"struct MixerMerkleRoot.Deposit memory"}},"id":3535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9520:6:12","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2980,"src":"9508:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9491:35:12"},{"assignments":[3538],"declarations":[{"constant":false,"id":3538,"mutability":"mutable","name":"user","nameLocation":"9544:4:12","nodeType":"VariableDeclaration","scope":3578,"src":"9536:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3537,"name":"address","nodeType":"ElementaryTypeName","src":"9536:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3541,"initialValue":{"expression":{"id":3539,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"9551:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_memory_ptr","typeString":"struct MixerMerkleRoot.Deposit memory"}},"id":3540,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9563:4:12","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":2978,"src":"9551:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9536:31:12"},{"expression":{"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"9641:26:12","subExpression":{"baseExpression":{"id":3542,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"9648:8:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Deposit_$2981_storage_$","typeString":"mapping(bytes32 => struct MixerMerkleRoot.Deposit storage ref)"}},"id":3544,"indexExpression":{"id":3543,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"9657:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9648:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_storage","typeString":"struct MixerMerkleRoot.Deposit storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3546,"nodeType":"ExpressionStatement","src":"9641:26:12"},{"expression":{"arguments":[{"id":3550,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"9697:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3547,"name":"depositIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"9677:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9690:6:12","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":2566,"src":"9677:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$2530_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$2530_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9677:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3552,"nodeType":"ExpressionStatement","src":"9677:30:12"},{"eventCall":{"arguments":[{"id":3554,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"9742:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3555,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"9753:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3556,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"9759:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":3557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9767:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3553,"name":"WithdrawalExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"9723:18:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256,uint256)"}},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9723:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3559,"nodeType":"EmitStatement","src":"9718:51:12"},{"eventCall":{"arguments":[{"id":3561,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"9799:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3560,"name":"DepositDeleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"9784:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9784:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3563,"nodeType":"EmitStatement","src":"9779:30:12"},{"assignments":[3565,null],"declarations":[{"constant":false,"id":3565,"mutability":"mutable","name":"success","nameLocation":"9826:7:12","nodeType":"VariableDeclaration","scope":3578,"src":"9821:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3564,"name":"bool","nodeType":"ElementaryTypeName","src":"9821:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3572,"initialValue":{"arguments":[{"hexValue":"","id":3570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9864:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3566,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"9839:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9844:4:12","memberName":"call","nodeType":"MemberAccess","src":"9839:9:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3568,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"9856:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"9839:24:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9839:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"9820:47:12"},{"expression":{"arguments":[{"id":3574,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"9885:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9894:17:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":3573,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9877:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9877:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3577,"nodeType":"ExpressionStatement","src":"9877:35:12"}]},"documentation":{"id":3496,"nodeType":"StructuredDocumentation","src":"9013:144:12","text":" @dev Allows the owner to withdraw a deposit in emergency situations\n @param depositId The ID of the deposit to withdraw"},"functionSelector":"a46d1b13","id":3579,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3501,"name":"OWNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"9246:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3502,"kind":"modifierInvocation","modifierName":{"id":3500,"name":"onlyRole","nameLocations":["9237:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"9237:8:12"},"nodeType":"ModifierInvocation","src":"9237:20:12"},{"id":3504,"kind":"modifierInvocation","modifierName":{"id":3503,"name":"nonReentrant","nameLocations":["9258:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":418,"src":"9258:12:12"},"nodeType":"ModifierInvocation","src":"9258:12:12"}],"name":"emergencyWithdrawToUser","nameLocation":"9171:23:12","nodeType":"FunctionDefinition","parameters":{"id":3499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3498,"mutability":"mutable","name":"depositId","nameLocation":"9212:9:12","nodeType":"VariableDeclaration","scope":3579,"src":"9204:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9204:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9194:33:12"},"returnParameters":{"id":3505,"nodeType":"ParameterList","parameters":[],"src":"9271:0:12"},"scope":3798,"src":"9162:757:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3613,"nodeType":"Block","src":"10173:267:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":3593,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"10213:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3591,"name":"depositIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"10191:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10204:8:12","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":2584,"src":"10191:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$2530_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$2530_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10191:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f73697420494420646f6573206e6f74206578697374","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10225:27:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a87c9e0d3eefbac0f3a8e33df8ba206353d61a7c4bcb58b89c11ac8e66ce6d56","typeString":"literal_string \"Deposit ID does not exist\""},"value":"Deposit ID does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a87c9e0d3eefbac0f3a8e33df8ba206353d61a7c4bcb58b89c11ac8e66ce6d56","typeString":"literal_string \"Deposit ID does not exist\""}],"id":3590,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10183:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10183:70:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3597,"nodeType":"ExpressionStatement","src":"10183:70:12"},{"expression":{"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10327:26:12","subExpression":{"baseExpression":{"id":3598,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"10334:8:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Deposit_$2981_storage_$","typeString":"mapping(bytes32 => struct MixerMerkleRoot.Deposit storage ref)"}},"id":3600,"indexExpression":{"id":3599,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"10343:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10334:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$2981_storage","typeString":"struct MixerMerkleRoot.Deposit storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3602,"nodeType":"ExpressionStatement","src":"10327:26:12"},{"expression":{"arguments":[{"id":3606,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"10383:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3603,"name":"depositIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"10363:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2530_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10376:6:12","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":2566,"src":"10363:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$2530_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$2530_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10363:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3608,"nodeType":"ExpressionStatement","src":"10363:30:12"},{"eventCall":{"arguments":[{"id":3610,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"10423:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3609,"name":"DepositDeleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"10408:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10408:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3612,"nodeType":"EmitStatement","src":"10403:30:12"}]},"documentation":{"id":3580,"nodeType":"StructuredDocumentation","src":"9925:144:12","text":" @dev Allows the owner to withdraw a deposit in emergency situations\n @param depositId The ID of the deposit to withdraw"},"functionSelector":"a54191e2","id":3614,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3585,"name":"OWNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"10148:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3586,"kind":"modifierInvocation","modifierName":{"id":3584,"name":"onlyRole","nameLocations":["10139:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"10139:8:12"},"nodeType":"ModifierInvocation","src":"10139:20:12"},{"id":3588,"kind":"modifierInvocation","modifierName":{"id":3587,"name":"nonReentrant","nameLocations":["10160:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":418,"src":"10160:12:12"},"nodeType":"ModifierInvocation","src":"10160:12:12"}],"name":"deleteDeposit","nameLocation":"10083:13:12","nodeType":"FunctionDefinition","parameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3582,"mutability":"mutable","name":"depositId","nameLocation":"10114:9:12","nodeType":"VariableDeclaration","scope":3614,"src":"10106:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3581,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10106:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10096:33:12"},"returnParameters":{"id":3589,"nodeType":"ParameterList","parameters":[],"src":"10173:0:12"},"scope":3798,"src":"10074:366:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3650,"nodeType":"Block","src":"10724:145:12","statements":[{"assignments":[3627],"declarations":[{"constant":false,"id":3627,"mutability":"mutable","name":"balance","nameLocation":"10742:7:12","nodeType":"VariableDeclaration","scope":3650,"src":"10734:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3626,"name":"uint256","nodeType":"ElementaryTypeName","src":"10734:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3635,"initialValue":{"arguments":[{"arguments":[{"id":3632,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10776:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_MixerMerkleRoot_$3798","typeString":"contract MixerMerkleRoot"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MixerMerkleRoot_$3798","typeString":"contract MixerMerkleRoot"}],"id":3631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10768:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3630,"name":"address","nodeType":"ElementaryTypeName","src":"10768:7:12","typeDescriptions":{}}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10768:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3628,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"10752:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10758:9:12","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":488,"src":"10752:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10752:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10734:48:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3637,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"10800:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10810:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10800:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20746f6b656e73","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10813:11:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4","typeString":"literal_string \"No tokens\""},"value":"No tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4","typeString":"literal_string \"No tokens\""}],"id":3636,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10792:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10792:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3642,"nodeType":"ExpressionStatement","src":"10792:33:12"},{"expression":{"arguments":[{"id":3646,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"10850:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3647,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"10854:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3643,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"10835:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10841:8:12","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":498,"src":"10835:14:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10835:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3649,"nodeType":"ExpressionStatement","src":"10835:27:12"}]},"documentation":{"id":3615,"nodeType":"StructuredDocumentation","src":"10446:173:12","text":" @dev Allows the owner to set the fee recipient\n @param token The ERC20 token to recover\n @param to The address to send the recovered tokens to"},"functionSelector":"886f039a","id":3651,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3623,"name":"OWNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"10712:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3624,"kind":"modifierInvocation","modifierName":{"id":3622,"name":"onlyRole","nameLocations":["10703:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"10703:8:12"},"nodeType":"ModifierInvocation","src":"10703:20:12"}],"name":"recoverERC20","nameLocation":"10633:12:12","nodeType":"FunctionDefinition","parameters":{"id":3621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3618,"mutability":"mutable","name":"token","nameLocation":"10662:5:12","nodeType":"VariableDeclaration","scope":3651,"src":"10655:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"},"typeName":{"id":3617,"nodeType":"UserDefinedTypeName","pathNode":{"id":3616,"name":"IERC20","nameLocations":["10655:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":531,"src":"10655:6:12"},"referencedDeclaration":531,"src":"10655:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3620,"mutability":"mutable","name":"to","nameLocation":"10685:2:12","nodeType":"VariableDeclaration","scope":3651,"src":"10677:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3619,"name":"address","nodeType":"ElementaryTypeName","src":"10677:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10645:48:12"},"returnParameters":{"id":3625,"nodeType":"ParameterList","parameters":[],"src":"10724:0:12"},"scope":3798,"src":"10624:245:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3698,"nodeType":"Block","src":"11153:259:12","statements":[{"assignments":[3663],"declarations":[{"constant":false,"id":3663,"mutability":"mutable","name":"balance","nameLocation":"11171:7:12","nodeType":"VariableDeclaration","scope":3698,"src":"11163:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"11163:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3669,"initialValue":{"expression":{"arguments":[{"id":3666,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11189:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_MixerMerkleRoot_$3798","typeString":"contract MixerMerkleRoot"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MixerMerkleRoot_$3798","typeString":"contract MixerMerkleRoot"}],"id":3665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11181:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3664,"name":"address","nodeType":"ElementaryTypeName","src":"11181:7:12","typeDescriptions":{}}},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11195:7:12","memberName":"balance","nodeType":"MemberAccess","src":"11181:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11163:39:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3671,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"11220:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11230:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11220:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20455448","id":3674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11233:8:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ae725630e89b25bfdaf595445b8423bd80e9df92ceecb6d061610f2a2e3182c","typeString":"literal_string \"No ETH\""},"value":"No ETH"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ae725630e89b25bfdaf595445b8423bd80e9df92ceecb6d061610f2a2e3182c","typeString":"literal_string \"No ETH\""}],"id":3670,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11212:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11212:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3676,"nodeType":"ExpressionStatement","src":"11212:30:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3678,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"11260:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3679,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"11270:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11260:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7420657863656564732062616c616e6365","id":3681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11279:24:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_0039e6735521f7b0196953e89f27cc371edc6bb5fb4f18631ddb74873dea7271","typeString":"literal_string \"Amount exceeds balance\""},"value":"Amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0039e6735521f7b0196953e89f27cc371edc6bb5fb4f18631ddb74873dea7271","typeString":"literal_string \"Amount exceeds balance\""}],"id":3677,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11252:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11252:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3683,"nodeType":"ExpressionStatement","src":"11252:52:12"},{"assignments":[3685,null],"declarations":[{"constant":false,"id":3685,"mutability":"mutable","name":"success","nameLocation":"11320:7:12","nodeType":"VariableDeclaration","scope":3698,"src":"11315:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3684,"name":"bool","nodeType":"ElementaryTypeName","src":"11315:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3692,"initialValue":{"arguments":[{"hexValue":"","id":3690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11357:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3686,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"11333:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11336:4:12","memberName":"call","nodeType":"MemberAccess","src":"11333:7:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3688,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"11348:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"11333:23:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11333:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"11314:46:12"},{"expression":{"arguments":[{"id":3694,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"11378:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":3695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11387:17:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":3693,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11370:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11370:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3697,"nodeType":"ExpressionStatement","src":"11370:35:12"}]},"documentation":{"id":3652,"nodeType":"StructuredDocumentation","src":"10875:173:12","text":" @dev Allows the owner to set the fee recipient\n @param to The address to send the recovered eth to\n @param amount The amount of ETH to recover"},"functionSelector":"e72c5717","id":3699,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3659,"name":"OWNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"11141:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3660,"kind":"modifierInvocation","modifierName":{"id":3658,"name":"onlyRole","nameLocations":["11132:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"11132:8:12"},"nodeType":"ModifierInvocation","src":"11132:20:12"}],"name":"recoverEth","nameLocation":"11062:10:12","nodeType":"FunctionDefinition","parameters":{"id":3657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3654,"mutability":"mutable","name":"to","nameLocation":"11090:2:12","nodeType":"VariableDeclaration","scope":3699,"src":"11082:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3653,"name":"address","nodeType":"ElementaryTypeName","src":"11082:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3656,"mutability":"mutable","name":"amount","nameLocation":"11110:6:12","nodeType":"VariableDeclaration","scope":3699,"src":"11102:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3655,"name":"uint256","nodeType":"ElementaryTypeName","src":"11102:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11072:50:12"},"returnParameters":{"id":3661,"nodeType":"ParameterList","parameters":[],"src":"11153:0:12"},"scope":3798,"src":"11053:359:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3735,"nodeType":"Block","src":"11611:323:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3709,"name":"newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"11629:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11638:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11629:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466565206d7573742062652067726561746572207468616e207a65726f","id":3712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11641:31:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_daf265deba315b0f69699516857cd04e6131e8f2cb52a70455d08357d6058605","typeString":"literal_string \"Fee must be greater than zero\""},"value":"Fee must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_daf265deba315b0f69699516857cd04e6131e8f2cb52a70455d08357d6058605","typeString":"literal_string \"Fee must be greater than zero\""}],"id":3708,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11621:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11621:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3714,"nodeType":"ExpressionStatement","src":"11621:52:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3716,"name":"newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"11691:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3717,"name":"MAX_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"11701:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11691:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4665652063616e6e6f7420657863656564206d6178696d756d202831302529","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11710:33:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_31fb24c45e8e227fef562a8d72702323ba8cefa50ca38edc5e93f5cd45b26b93","typeString":"literal_string \"Fee cannot exceed maximum (10%)\""},"value":"Fee cannot exceed maximum (10%)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_31fb24c45e8e227fef562a8d72702323ba8cefa50ca38edc5e93f5cd45b26b93","typeString":"literal_string \"Fee cannot exceed maximum (10%)\""}],"id":3715,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11683:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11683:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3721,"nodeType":"ExpressionStatement","src":"11683:61:12"},{"assignments":[3723],"declarations":[{"constant":false,"id":3723,"mutability":"mutable","name":"oldFee","nameLocation":"11807:6:12","nodeType":"VariableDeclaration","scope":3735,"src":"11799:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3722,"name":"uint256","nodeType":"ElementaryTypeName","src":"11799:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3725,"initialValue":{"id":3724,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"11816:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11799:20:12"},{"expression":{"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3726,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"11829:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3727,"name":"newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"11835:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11829:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3729,"nodeType":"ExpressionStatement","src":"11829:12:12"},{"eventCall":{"arguments":[{"id":3731,"name":"oldFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"11912:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3732,"name":"newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"11920:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3730,"name":"FeeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"11901:10:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11901:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3734,"nodeType":"EmitStatement","src":"11896:31:12"}]},"documentation":{"id":3700,"nodeType":"StructuredDocumentation","src":"11418:126:12","text":" @dev Allows the owner to set the fee percentage\n @param newFee The new fee in basis points (100 = 1%)"},"functionSelector":"69fe0e2d","id":3736,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3705,"name":"OWNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"11599:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3706,"kind":"modifierInvocation","modifierName":{"id":3704,"name":"onlyRole","nameLocations":["11590:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"11590:8:12"},"nodeType":"ModifierInvocation","src":"11590:20:12"}],"name":"setFee","nameLocation":"11558:6:12","nodeType":"FunctionDefinition","parameters":{"id":3703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3702,"mutability":"mutable","name":"newFee","nameLocation":"11573:6:12","nodeType":"VariableDeclaration","scope":3736,"src":"11565:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"11565:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11564:16:12"},"returnParameters":{"id":3707,"nodeType":"ParameterList","parameters":[],"src":"11611:0:12"},"scope":3798,"src":"11549:385:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3768,"nodeType":"Block","src":"12164:347:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3746,"name":"newFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"12182:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12201:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3747,"name":"address","nodeType":"ElementaryTypeName","src":"12201:7:12","typeDescriptions":{}}},"id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12201:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12182:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642066656520726563697069656e74","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12213:23:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361","typeString":"literal_string \"Invalid fee recipient\""},"value":"Invalid fee recipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361","typeString":"literal_string \"Invalid fee recipient\""}],"id":3745,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12174:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12174:63:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3754,"nodeType":"ExpressionStatement","src":"12174:63:12"},{"assignments":[3756],"declarations":[{"constant":false,"id":3756,"mutability":"mutable","name":"oldFeeRecipient","nameLocation":"12310:15:12","nodeType":"VariableDeclaration","scope":3768,"src":"12302:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3755,"name":"address","nodeType":"ElementaryTypeName","src":"12302:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3758,"initialValue":{"id":3757,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"12328:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12302:38:12"},{"expression":{"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3759,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"12350:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3760,"name":"newFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"12365:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12350:30:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3762,"nodeType":"ExpressionStatement","src":"12350:30:12"},{"eventCall":{"arguments":[{"id":3764,"name":"oldFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"12471:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3765,"name":"newFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"12488:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3763,"name":"FeeRecipientUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"12451:19:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12451:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3767,"nodeType":"EmitStatement","src":"12446:58:12"}]},"documentation":{"id":3737,"nodeType":"StructuredDocumentation","src":"11940:125:12","text":" @dev Allows the owner to set the fee recipient\n @param newFeeRecipient The new fee recipient address"},"functionSelector":"e74b981b","id":3769,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3742,"name":"OWNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"12152:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3743,"kind":"modifierInvocation","modifierName":{"id":3741,"name":"onlyRole","nameLocations":["12143:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"12143:8:12"},"nodeType":"ModifierInvocation","src":"12143:20:12"}],"name":"setFeeRecipient","nameLocation":"12079:15:12","nodeType":"FunctionDefinition","parameters":{"id":3740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"newFeeRecipient","nameLocation":"12112:15:12","nodeType":"VariableDeclaration","scope":3769,"src":"12104:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3738,"name":"address","nodeType":"ElementaryTypeName","src":"12104:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12094:39:12"},"returnParameters":{"id":3744,"nodeType":"ParameterList","parameters":[],"src":"12164:0:12"},"scope":3798,"src":"12070:441:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3786,"nodeType":"Block","src":"12692:71:12","statements":[{"expression":{"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3778,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"12702:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3779,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"12711:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12702:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3781,"nodeType":"ExpressionStatement","src":"12702:16:12"},{"eventCall":{"arguments":[{"id":3783,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"12748:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3782,"name":"EmergencyPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"12733:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12733:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3785,"nodeType":"EmitStatement","src":"12728:28:12"}]},"documentation":{"id":3770,"nodeType":"StructuredDocumentation","src":"12517:107:12","text":" @dev Toggles the paused state of the contract\n @param _paused The new paused state"},"functionSelector":"16c38b3c","id":3787,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3775,"name":"OWNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"12680:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3776,"kind":"modifierInvocation","modifierName":{"id":3774,"name":"onlyRole","nameLocations":["12671:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"12671:8:12"},"nodeType":"ModifierInvocation","src":"12671:20:12"}],"name":"setPaused","nameLocation":"12638:9:12","nodeType":"FunctionDefinition","parameters":{"id":3773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"_paused","nameLocation":"12653:7:12","nodeType":"VariableDeclaration","scope":3787,"src":"12648:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3771,"name":"bool","nodeType":"ElementaryTypeName","src":"12648:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12647:14:12"},"returnParameters":{"id":3777,"nodeType":"ParameterList","parameters":[],"src":"12692:0:12"},"scope":3798,"src":"12629:134:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3791,"nodeType":"Block","src":"12859:2:12","statements":[]},"documentation":{"id":3788,"nodeType":"StructuredDocumentation","src":"12769:58:12","text":" @dev Allows the contract to receive ETH"},"id":3792,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3789,"nodeType":"ParameterList","parameters":[],"src":"12839:2:12"},"returnParameters":{"id":3790,"nodeType":"ParameterList","parameters":[],"src":"12859:0:12"},"scope":3798,"src":"12832:29:12","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3796,"nodeType":"Block","src":"12941:2:12","statements":[]},"documentation":{"id":3793,"nodeType":"StructuredDocumentation","src":"12867:41:12","text":" @dev Fallback function"},"id":3797,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3794,"nodeType":"ParameterList","parameters":[],"src":"12921:2:12"},"returnParameters":{"id":3795,"nodeType":"ParameterList","parameters":[],"src":"12941:0:12"},"scope":3798,"src":"12913:30:12","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":3799,"src":"678:12267:12","usedErrors":[],"usedEvents":[327,336,345,3011,3017,3023,3031,3041,3045,3055,3059]}],"src":"32:12914:12"},"id":12}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e891c8fb05719433e16375831f12709b19b640434c9ab01ceb51e1dd655ea05664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 SWAP2 0xC8 0xFB SDIV PUSH18 0x9433E16375831F12709B19B640434C9AB01C 0xEB MLOAD 0xE1 0xDD PUSH6 0x5EA05664736F PUSH13 0x63430008140033000000000000 ","sourceMap":"220:2559:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e891c8fb05719433e16375831f12709b19b640434c9ab01ceb51e1dd655ea05664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 SWAP2 0xC8 0xFB SDIV PUSH18 0x9433E16375831F12709B19B640434C9AB01C 0xEB MLOAD 0xE1 0xDD PUSH6 0x5EA05664736F PUSH13 0x63430008140033000000000000 ","sourceMap":"220:2559:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d99a32605a869928147a151cb92cf0d23f54dabf9aadbcd1242c95b399536e764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D SWAP10 LOG3 0x26 SDIV 0xA8 PUSH10 0x928147A151CB92CF0D23 CREATE2 0x4D 0xAB 0xF9 0xAA 0xDB 0xCD SLT TIMESTAMP 0xC9 JUMPDEST CODECOPY SWAP6 CALLDATASIZE 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"802:8819:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;802:8819:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d99a32605a869928147a151cb92cf0d23f54dabf9aadbcd1242c95b399536e764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D SWAP10 LOG3 0x26 SDIV 0xA8 PUSH10 0x928147A151CB92CF0D23 CREATE2 0x4D 0xAB 0xF9 0xAA 0xDB 0xCD SLT TIMESTAMP 0xC9 JUMPDEST CODECOPY SWAP6 CALLDATASIZE 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"802:8819:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates merkle trees that are safe against this attack out of the box.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220481abea61186592bdc34fec815b3ae2c599bbe6a7106183652ae677ccd4f207c64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE BYTE 0xBE 0xA6 GT DUP7 MSIZE 0x2B 0xDC CALLVALUE INVALID 0xC8 ISZERO 0xB3 0xAE 0x2C MSIZE SWAP12 0xBE PUSH11 0x7106183652AE677CCD4F20 PUSH29 0x64736F6C63430008140033000000000000000000000000000000000000 ","sourceMap":"202:12582:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220481abea61186592bdc34fec815b3ae2c599bbe6a7106183652ae677ccd4f207c64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE BYTE 0xBE 0xA6 GT DUP7 MSIZE 0x2B 0xDC CALLVALUE INVALID 0xC8 ISZERO 0xB3 0xAE 0x2C MSIZE SWAP12 0xBE PUSH11 0x7106183652AE677CCD4F20 PUSH29 0x64736F6C63430008140033000000000000000000000000000000000000 ","sourceMap":"202:12582:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122030defb6a28adcd0bb73947cc2a43eddaf6e1cf86d55d9dfab6d84e594d9ac73d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0xDE 0xFB PUSH11 0x28ADCD0BB73947CC2A43ED 0xDA 0xF6 0xE1 0xCF DUP7 0xD5 0x5D SWAP14 STATICCALL 0xB6 0xD8 0x4E MSIZE 0x4D SWAP11 0xC7 RETURNDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"215:1047:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122030defb6a28adcd0bb73947cc2a43eddaf6e1cf86d55d9dfab6d84e594d9ac73d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0xDE 0xFB PUSH11 0x28ADCD0BB73947CC2A43ED 0xDA 0xF6 0xE1 0xCF DUP7 0xD5 0x5D SWAP14 STATICCALL 0xB6 0xD8 0x4E MSIZE 0x4D SWAP11 0xC7 RETURNDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"215:1047:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122089f848b19839ade6d5531f3f1a133645bac0cd1533568994d003f838a31ca22464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0xF8 BASEFEE 0xB1 SWAP9 CODECOPY 0xAD 0xE6 0xD5 MSTORE8 0x1F EXTCODEHASH BYTE SGT CALLDATASIZE GASLIMIT 0xBA 0xC0 0xCD ISZERO CALLER JUMP DUP10 SWAP5 0xD0 SUB 0xF8 CODESIZE LOG3 SHR LOG2 0x24 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1329:11630:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1329:11630:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122089f848b19839ade6d5531f3f1a133645bac0cd1533568994d003f838a31ca22464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0xF8 BASEFEE 0xB1 SWAP9 CODECOPY 0xAD 0xE6 0xD5 MSTORE8 0x1F EXTCODEHASH BYTE SGT CALLDATASIZE GASLIMIT 0xBA 0xC0 0xCD ISZERO CALLER JUMP DUP10 SWAP5 0xD0 SUB 0xF8 CODESIZE LOG3 SHR LOG2 0x24 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1329:11630:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"contracts/MixerMerkleRoot.sol":{"MixerMerkleRoot":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"depositId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"DepositCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"depositId","type":"bytes32"}],"name":"DepositDeleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"isPaused","type":"bool"}],"name":"EmergencyPause","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"depositId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"releaseTime","type":"uint256"}],"name":"EtherTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldRecipient","type":"address"},{"indexed":true,"internalType":"address","name":"newRecipient","type":"address"}],"name":"FeeRecipientUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldFee","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newFee","type":"uint256"}],"name":"FeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"depositId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"oldRoot","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"newRoot","type":"bytes32"}],"name":"MerkleRootUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"depositId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"releaseTime","type":"uint256"}],"name":"WithdrawalExecuted","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OWNER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"depositId","type":"bytes32"}],"name":"deleteDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"depositId","type":"bytes32"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"depositId","type":"bytes32"}],"name":"emergencyWithdrawToUser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"depositId","type":"bytes32"}],"name":"getDeposit","outputs":[{"components":[{"internalType":"bytes32","name":"depositId","type":"bytes32"},{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct MixerMerkleRoot.Deposit","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getDepositIdAt","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"depositId","type":"bytes32"},{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"releaseTime","type":"uint256"}],"name":"hasUserWithdrawn","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"}],"name":"recoverERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"recoverEth","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newFee","type":"uint256"}],"name":"setFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newFeeRecipient","type":"address"}],"name":"setFeeRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_paused","type":"bool"}],"name":"setPaused","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"depositId","type":"bytes32"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"releaseTime","type":"uint256"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"shouldTransferEther","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalDeposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"depositId","type":"bytes32"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"releaseTime","type":"uint256"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"transferEther","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_3109":{"entryPoint":null,"id":3109,"parameterSlots":1,"returnSlots":0},"@_407":{"entryPoint":null,"id":407,"parameterSlots":0,"returnSlots":0},"@_grantRole_283":{"entryPoint":288,"id":283,"parameterSlots":2,"returnSlots":0},"@_msgSender_543":{"entryPoint":null,"id":543,"parameterSlots":0,"returnSlots":1},"@hasRole_79":{"entryPoint":null,"id":79,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":449,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:663:13","statements":[{"nodeType":"YulBlock","src":"6:3:13","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:13","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:13"},"nodeType":"YulFunctionCall","src":"143:12:13"},"nodeType":"YulExpressionStatement","src":"143:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:13"},"nodeType":"YulFunctionCall","src":"112:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:13"},"nodeType":"YulFunctionCall","src":"108:32:13"},"nodeType":"YulIf","src":"105:52:13"},{"nodeType":"YulVariableDeclaration","src":"166:29:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:13"},"nodeType":"YulFunctionCall","src":"179:16:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:13"},"nodeType":"YulFunctionCall","src":"260:12:13"},"nodeType":"YulExpressionStatement","src":"260:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:13","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:13"},"nodeType":"YulFunctionCall","src":"239:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:13"},"nodeType":"YulFunctionCall","src":"235:19:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:13"},"nodeType":"YulFunctionCall","src":"224:31:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:13"},"nodeType":"YulFunctionCall","src":"214:42:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:13"},"nodeType":"YulFunctionCall","src":"207:50:13"},"nodeType":"YulIf","src":"204:70:13"},{"nodeType":"YulAssignment","src":"283:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:13"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:13","type":""}],"src":"14:290:13"},{"body":{"nodeType":"YulBlock","src":"483:178:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"500:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"511:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"493:6:13"},"nodeType":"YulFunctionCall","src":"493:21:13"},"nodeType":"YulExpressionStatement","src":"493:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"534:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"545:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"530:3:13"},"nodeType":"YulFunctionCall","src":"530:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"550:2:13","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"523:6:13"},"nodeType":"YulFunctionCall","src":"523:30:13"},"nodeType":"YulExpressionStatement","src":"523:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"573:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"584:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"569:3:13"},"nodeType":"YulFunctionCall","src":"569:18:13"},{"hexValue":"41646d696e2063616e6e6f74206265207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"589:30:13","type":"","value":"Admin cannot be zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"562:6:13"},"nodeType":"YulFunctionCall","src":"562:58:13"},"nodeType":"YulExpressionStatement","src":"562:58:13"},{"nodeType":"YulAssignment","src":"629:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"641:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"652:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"637:3:13"},"nodeType":"YulFunctionCall","src":"637:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"629:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"460:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"474:4:13","type":""}],"src":"309:352:13"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Admin cannot be zero address\")\n        tail := add(headStart, 96)\n    }\n}","id":13,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405260646007556008805460ff191690553480156200002057600080fd5b50604051620022ec380380620022ec8339810160408190526200004391620001c1565b600180556001600160a01b038116620000a25760405162461bcd60e51b815260206004820152601c60248201527f41646d696e2063616e6e6f74206265207a65726f206164647265737300000000604482015260640160405180910390fd5b620000af60003362000120565b620000db7fb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e3362000120565b620001077fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217758262000120565b50600280546001600160a01b03191633179055620001f3565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620001bd576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556200017c3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600060208284031215620001d457600080fd5b81516001600160a01b0381168114620001ec57600080fd5b9392505050565b6120e980620002036000396000f3fe6080604052600436106101485760003560e01c806301ffc9a71461015157806316c38b3c14610186578063248a9ca3146101a65780632f2ff15d146101d457806334bafb60146101f457806336568abe146102145780633cbf725c1461023457806346904840146102815780635c975abb146102ae57806369fe0e2d146102c857806375b238fc146102e85780637a86983f1461030a5780637d88209714610355578063886f039a1461036a57806391d148541461038a578063a217fddf146103aa578063a46d1b13146103bf578063a54191e2146103df578063b214faa5146103ff578063b75f5e6014610412578063bc063e1a14610432578063bf301d8414610448578063ced72f8714610468578063d547741f1461047d578063ddca3f431461049d578063e58378bb146104b3578063e72c5717146104d5578063e74b981b146104f557005b3661014f57005b005b34801561015d57600080fd5b5061017161016c366004611b54565b610515565b60405190151581526020015b60405180910390f35b34801561019257600080fd5b5061014f6101a1366004611b8c565b61054c565b3480156101b257600080fd5b506101c66101c1366004611ba9565b6105ac565b60405190815260200161017d565b3480156101e057600080fd5b5061014f6101ef366004611bd7565b6105c1565b34801561020057600080fd5b5061014f61020f366004611c52565b6105e2565b34801561022057600080fd5b5061014f61022f366004611bd7565b61089a565b34801561024057600080fd5b5061017161024f366004611cc4565b60009283526003602090815260408085206001600160a01b039490941685529281528284209184525290205460ff1690565b34801561028d57600080fd5b506002546102a1906001600160a01b031681565b60405161017d9190611cfc565b3480156102ba57600080fd5b506008546101719060ff1681565b3480156102d457600080fd5b5061014f6102e3366004611ba9565b610918565b3480156102f457600080fd5b506101c660008051602061207483398151915281565b34801561031657600080fd5b5061032a610325366004611ba9565b610a18565b60408051825181526020808401516001600160a01b031690820152918101519082015260600161017d565b34801561036157600080fd5b506101c6610ace565b34801561037657600080fd5b5061014f610385366004611d10565b610adf565b34801561039657600080fd5b506101716103a5366004611bd7565b610c1f565b3480156103b657600080fd5b506101c6600081565b3480156103cb57600080fd5b5061014f6103da366004611ba9565b610c48565b3480156103eb57600080fd5b5061014f6103fa366004611ba9565b610e2c565b61014f61040d366004611ba9565b610ec8565b34801561041e57600080fd5b506101c661042d366004611ba9565b61115a565b34801561043e57600080fd5b506101c66103e881565b34801561045457600080fd5b50610171610463366004611c52565b6111b5565b34801561047457600080fd5b506007546101c6565b34801561048957600080fd5b5061014f610498366004611bd7565b6113d0565b3480156104a957600080fd5b506101c660075481565b3480156104bf57600080fd5b506101c660008051602061205483398151915281565b3480156104e157600080fd5b5061014f6104f0366004611d3e565b6113ec565b34801561050157600080fd5b5061014f610510366004611d6a565b6114f7565b60006001600160e01b03198216637965db0b60e01b148061054657506301ffc9a760e01b6001600160e01b03198316145b92915050565b600080516020612054833981519152610564816115b0565b6008805460ff19168315159081179091556040519081527fb80d1ae5628c2af91424c54c87acfd15016be4bebeef0425b328238702f348319060200160405180910390a15050565b60009081526020819052604090206001015490565b6105ca826105ac565b6105d3816115b0565b6105dd83836115ba565b505050565b6000805160206120748339815191526105fa816115b0565b61060261163e565b60085460ff161561062e5760405162461bcd60e51b815260040161062590611d87565b60405180910390fd5b610639600588611697565b6106555760405162461bcd60e51b815260040161062590611db3565b60008781526004602081905260408083209051632fcc076160e21b8152909291309163bf301d8491610693918d918d918d918d918d918d9101611de6565b602060405180830381865afa1580156106b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d49190611e47565b9050806107235760405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964207769746864726177616c20636f6e646974696f6e730000006044820152606401610625565b60008981526003602090815260408083206001600160a01b038c16845282528083208984529091528120805460ff191660011790556002830154610768908990611e7a565b9050806000036107c35760008a81526004602052604081208181556001810180546001600160a01b0319169055600201556107a460058b6116aa565b506040518a9060008051602061209483398151915290600090a26107cb565b600283018190555b60408051898152602081018990526001600160a01b038b16918c917ff459faee68c663908ff1a63dbe00219bea7dc9c03f866771eb43feefe2ef6527910160405180910390a36000896001600160a01b03168960405160006040518083038185875af1925050503d806000811461085e576040519150601f19603f3d011682016040523d82523d6000602084013e610863565b606091505b50509050806108845760405162461bcd60e51b815260040161062590611e8d565b5050505061089160018055565b50505050505050565b6001600160a01b038116331461090a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610625565b61091482826116b6565b5050565b600080516020612054833981519152610930816115b0565b600082116109805760405162461bcd60e51b815260206004820152601d60248201527f466565206d7573742062652067726561746572207468616e207a65726f0000006044820152606401610625565b6103e88211156109d25760405162461bcd60e51b815260206004820152601f60248201527f4665652063616e6e6f7420657863656564206d6178696d756d202831302529006044820152606401610625565b600780549083905560408051828152602081018590527f528d9479e9f9889a87a3c30c7f7ba537e5e59c4c85a37733b16e57c62df61302910160405180910390a1505050565b6040805160608101825260008082526020820181905291810191909152610a40600583611697565b610a8c5760405162461bcd60e51b815260206004820152601d60248201527f517565727920666f72206e6f6e6578697374656e74206465706f7369740000006044820152606401610625565b5060009081526004602090815260409182902082516060810184528154815260018201546001600160a01b031692810192909252600201549181019190915290565b6000610ada600561171b565b905090565b600080516020612054833981519152610af7816115b0565b6040516370a0823160e01b81526000906001600160a01b038516906370a0823190610b26903090600401611cfc565b602060405180830381865afa158015610b43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b679190611eb6565b905060008111610ba55760405162461bcd60e51b81526020600482015260096024820152684e6f20746f6b656e7360b81b6044820152606401610625565b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820183905285169063a9059cbb906044016020604051808303816000875af1158015610bf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c189190611e47565b5050505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600080516020612054833981519152610c60816115b0565b610c6861163e565b610c73600583611697565b610c8f5760405162461bcd60e51b815260040161062590611db3565b60008281526004602090815260409182902082516060810184528154815260018201546001600160a01b031692810183905260029091015492810192909252610d0e5760405162461bcd60e51b815260206004820152601160248201527011195c1bdcda5d081b9bdd08199bdd5b99607a1b6044820152606401610625565b604080820151602080840151600087815260049092529281208181556001810180546001600160a01b03191690556002015590610d4c6005866116aa565b5060408051838152600060208201526001600160a01b0383169187917f049e2797daee2aadd15e6edee0f05ed19e022b55665ff1c33d22b70e89652b46910160405180910390a3604051859060008051602061209483398151915290600090a26000816001600160a01b03168360405160006040518083038185875af1925050503d8060008114610df9576040519150601f19603f3d011682016040523d82523d6000602084013e610dfe565b606091505b5050905080610e1f5760405162461bcd60e51b815260040161062590611e8d565b5050505061091460018055565b600080516020612054833981519152610e44816115b0565b610e4c61163e565b610e57600583611697565b610e735760405162461bcd60e51b815260040161062590611db3565b60008281526004602052604081208181556001810180546001600160a01b031916905560020155610ea56005836116aa565b50604051829060008051602061209483398151915290600090a261091460018055565b610ed061163e565b60085460ff1615610ef35760405162461bcd60e51b815260040161062590611d87565b60003411610f545760405162461bcd60e51b815260206004820152602860248201527f4465706f73697420616d6f756e74206d7573742062652067726561746572207460448201526768616e207a65726f60c01b6064820152608401610625565b80610f975760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a590813595c9adb19481c9bdbdd606a1b6044820152606401610625565b610fa2600582611697565b15610feb5760405162461bcd60e51b81526020600482015260196024820152784465706f73697420494420616c72656164792065786973747360381b6044820152606401610625565b600061271060075434610ffe9190611ecf565b6110089190611ee6565b905060006110168234611e7a565b604080516060810182528581523360208083019182528284018581526000898152600490925293902091518255516001820180546001600160a01b0319166001600160a01b039092169190911790559051600290910155905061107a600584611725565b50604051818152339084907f2fc7f61216f4b9da63724a7ccba484452205b7cf651334640e3cd112017860069060200160405180910390a36002546040516000916001600160a01b03169084908381818185875af1925050503d80600081146110ff576040519150601f19603f3d011682016040523d82523d6000602084013e611104565b606091505b505090508061114b5760405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606401610625565b50505061115760018055565b50565b6000611166600561171b565b82106111aa5760405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610625565b610546600583611731565b60006111c2600588611697565b6111de5760405162461bcd60e51b815260040161062590611db3565b600087815260046020908152604080832090516001600160601b031960608b901b169281019290925260348201889052605482018790529190607401604051602081830303815290604052805190602001209050611272858580806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250508554915084905061173d565b6112b55760405162461bcd60e51b815260206004820152601460248201527324b73b30b634b21036b2b935b63290383937b7b360611b6044820152606401610625565b60008981526003602090815260408083206001600160a01b038c168452825280832089845290915290205460ff16156113245760405162461bcd60e51b815260206004820152601160248201527020b63932b0b23c903bb4ba34323930bbb760791b6044820152606401610625565b4286111561136f5760405162461bcd60e51b815260206004820152601860248201527714995b19585cd9481d1a5b59481b9bdd081c995858da195960421b6044820152606401610625565b86826002015410156113c15760405162461bcd60e51b815260206004820152601b60248201527a125b9cdd59999a58da595b9d0819195c1bdcda5d08185b5bdd5b9d602a1b6044820152606401610625565b50600198975050505050505050565b6113d9826105ac565b6113e2816115b0565b6105dd83836116b6565b600080516020612054833981519152611404816115b0565b478061143b5760405162461bcd60e51b815260206004820152600660248201526509cde408aa8960d31b6044820152606401610625565b808311156114845760405162461bcd60e51b8152602060048201526016602482015275416d6f756e7420657863656564732062616c616e636560501b6044820152606401610625565b6000846001600160a01b03168260405160006040518083038185875af1925050503d80600081146114d1576040519150601f19603f3d011682016040523d82523d6000602084013e6114d6565b606091505b5050905080610c185760405162461bcd60e51b815260040161062590611e8d565b60008051602061205483398151915261150f816115b0565b6001600160a01b03821661155d5760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a5908199959481c9958da5c1a595b9d605a1b6044820152606401610625565b600280546001600160a01b038481166001600160a01b0319831681179093556040519116919082907faaebcf1bfa00580e41d966056b48521fa9f202645c86d4ddf28113e617c1b1d390600090a3505050565b6111578133611753565b6115c48282610c1f565b610914576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556115fa3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6002600154036116905760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610625565b6002600155565b60006116a383836117ac565b9392505050565b60006116a383836117c4565b6116c08282610c1f565b15610914576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610546825490565b60006116a383836118b7565b60006116a38383611901565b60008261174a858461192b565b14949350505050565b61175d8282610c1f565b6109145761176a81611978565b61177583602061198a565b604051602001611786929190611f2c565b60408051601f198184030181529082905262461bcd60e51b825261062591600401611f9b565b60009081526001919091016020526040902054151590565b600081815260018301602052604081205480156118ad5760006117e8600183611e7a565b85549091506000906117fc90600190611e7a565b905081811461186157600086600001828154811061181c5761181c611fce565b906000526020600020015490508087600001848154811061183f5761183f611fce565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061187257611872611fe4565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610546565b6000915050610546565b60006118c383836117ac565b6118f957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610546565b506000610546565b600082600001828154811061191857611918611fce565b9060005260206000200154905092915050565b600081815b84518110156119705761195c8286838151811061194f5761194f611fce565b6020026020010151611b25565b91508061196881611ffa565b915050611930565b509392505050565b60606105466001600160a01b03831660145b60606000611999836002611ecf565b6119a4906002612013565b6001600160401b038111156119bb576119bb612026565b6040519080825280601f01601f1916602001820160405280156119e5576020820181803683370190505b509050600360fc1b81600081518110611a0057611a00611fce565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611a2f57611a2f611fce565b60200101906001600160f81b031916908160001a9053506000611a53846002611ecf565b611a5e906001612013565b90505b6001811115611ad6576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611a9257611a92611fce565b1a60f81b828281518110611aa857611aa8611fce565b60200101906001600160f81b031916908160001a90535060049490941c93611acf8161203c565b9050611a61565b5083156116a35760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610625565b6000818310611b415760008281526020849052604090206116a3565b60008381526020839052604090206116a3565b600060208284031215611b6657600080fd5b81356001600160e01b0319811681146116a357600080fd5b801515811461115757600080fd5b600060208284031215611b9e57600080fd5b81356116a381611b7e565b600060208284031215611bbb57600080fd5b5035919050565b6001600160a01b038116811461115757600080fd5b60008060408385031215611bea57600080fd5b823591506020830135611bfc81611bc2565b809150509250929050565b60008083601f840112611c1957600080fd5b5081356001600160401b03811115611c3057600080fd5b6020830191508360208260051b8501011115611c4b57600080fd5b9250929050565b60008060008060008060a08789031215611c6b57600080fd5b863595506020870135611c7d81611bc2565b9450604087013593506060870135925060808701356001600160401b03811115611ca657600080fd5b611cb289828a01611c07565b979a9699509497509295939492505050565b600080600060608486031215611cd957600080fd5b833592506020840135611ceb81611bc2565b929592945050506040919091013590565b6001600160a01b0391909116815260200190565b60008060408385031215611d2357600080fd5b8235611d2e81611bc2565b91506020830135611bfc81611bc2565b60008060408385031215611d5157600080fd5b8235611d5c81611bc2565b946020939093013593505050565b600060208284031215611d7c57600080fd5b81356116a381611bc2565b60208082526012908201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b604082015260600190565b60208082526019908201527811195c1bdcda5d08125108191bd95cc81b9bdd08195e1a5cdd603a1b604082015260600190565b8681526001600160a01b0386166020820152604081018590526060810184905260a060808201819052810182905260006001600160fb1b03831115611e2a57600080fd5b8260051b808560c08501379190910160c001979650505050505050565b600060208284031215611e5957600080fd5b81516116a381611b7e565b634e487b7160e01b600052601160045260246000fd5b8181038181111561054657610546611e64565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b600060208284031215611ec857600080fd5b5051919050565b808202811582820484141761054657610546611e64565b600082611f0357634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015611f23578181015183820152602001611f0b565b50506000910152565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351611f5e816017850160208801611f08565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611f8f816028840160208801611f08565b01602801949350505050565b6020815260008251806020840152611fba816040850160208701611f08565b601f01601f19169190910160400192915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60006001820161200c5761200c611e64565b5060010190565b8082018082111561054657610546611e64565b634e487b7160e01b600052604160045260246000fd5b60008161204b5761204b611e64565b50600019019056feb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214ea49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775c01be8cccf858504feb9ca3c65b0e2340a99d0935173883cee33e762f4a2904ea2646970667358221220b6404325ca8e1127f73297a2d63204156b37fc9f49d7168753f8c2dd3642838264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x7 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x22EC CODESIZE SUB DUP1 PUSH3 0x22EC DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x43 SWAP2 PUSH3 0x1C1 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646D696E2063616E6E6F74206265207A65726F206164647265737300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xAF PUSH1 0x0 CALLER PUSH3 0x120 JUMP JUMPDEST PUSH3 0xDB PUSH32 0xB19546DFF01E856FB3F010C267A7B1C60363CF8A4664E21CC89C26224620214E CALLER PUSH3 0x120 JUMP JUMPDEST PUSH3 0x107 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP3 PUSH3 0x120 JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH3 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x1BD JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x17C CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x20E9 DUP1 PUSH3 0x203 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x148 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x34BAFB60 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x3CBF725C EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x69FE0E2D EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x7A86983F EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x7D882097 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0x886F039A EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xA46D1B13 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xA54191E2 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xB214FAA5 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xB75F5E60 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0xBF301D84 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xCED72F87 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xE58378BB EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0xE72C5717 EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0x4F5 JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0x14F JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x1B54 JUMP JUMPDEST PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0x1C52 JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP6 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP5 KECCAK256 SWAP2 DUP5 MSTORE MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x2A1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1CFC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x171 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2074 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE SWAP2 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x17D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0xACE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x385 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D10 JUMP JUMPDEST PUSH2 0xADF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0xC1F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xC48 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xE2C JUMP JUMPDEST PUSH2 0x14F PUSH2 0x40D CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xEC8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x42D CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x115A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x3E8 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x463 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C52 JUMP JUMPDEST PUSH2 0x11B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x1C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x498 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0x13D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x4F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x13EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x501 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x510 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D6A JUMP JUMPDEST PUSH2 0x14F7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x546 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x564 DUP2 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xB80D1AE5628C2AF91424C54C87ACFD15016BE4BEBEEF0425B328238702F34831 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5CA DUP3 PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x5D3 DUP2 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x5DD DUP4 DUP4 PUSH2 0x15BA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2074 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x5FA DUP2 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x602 PUSH2 0x163E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x62E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x639 PUSH1 0x5 DUP9 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH4 0x2FCC0761 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 SWAP3 SWAP2 ADDRESS SWAP2 PUSH4 0xBF301D84 SWAP2 PUSH2 0x693 SWAP2 DUP14 SWAP2 DUP14 SWAP2 DUP14 SWAP2 DUP14 SWAP2 DUP14 SWAP2 DUP14 SWAP2 ADD PUSH2 0x1DE6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6D4 SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x723 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207769746864726177616C20636F6E646974696F6E73000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH2 0x768 SWAP1 DUP10 SWAP1 PUSH2 0x1E7A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x7C3 JUMPI PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x2 ADD SSTORE PUSH2 0x7A4 PUSH1 0x5 DUP12 PUSH2 0x16AA JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP11 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2094 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x2 DUP4 ADD DUP2 SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP2 DUP13 SWAP2 PUSH32 0xF459FAEE68C663908FF1A63DBE00219BEA7DC9C03F866771EB43FEEFE2EF6527 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x85E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x863 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x884 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST POP POP POP POP PUSH2 0x891 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x625 JUMP JUMPDEST PUSH2 0x914 DUP3 DUP3 PUSH2 0x16B6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x930 DUP2 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x980 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565206D7573742062652067726561746572207468616E207A65726F000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH2 0x3E8 DUP3 GT ISZERO PUSH2 0x9D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652063616E6E6F7420657863656564206D6178696D756D20283130252900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x528D9479E9F9889A87A3C30C7F7BA537E5E59C4C85A37733B16E57C62DF61302 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xA40 PUSH1 0x5 DUP4 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0xA8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x517565727920666F72206E6F6E6578697374656E74206465706F736974000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADA PUSH1 0x5 PUSH2 0x171B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xAF7 DUP2 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xB26 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1CFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB43 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB67 SWAP2 SWAP1 PUSH2 0x1EB6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xBA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x4E6F20746F6B656E73 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP6 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC18 SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xC60 DUP2 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0xC68 PUSH2 0x163E JUMP JUMPDEST PUSH2 0xC73 PUSH1 0x5 DUP4 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0xC8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0xD0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x11195C1BDCDA5D081B9BDD08199BDD5B99 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 ADD MLOAD PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP3 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x2 ADD SSTORE SWAP1 PUSH2 0xD4C PUSH1 0x5 DUP7 PUSH2 0x16AA JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP8 SWAP2 PUSH32 0x49E2797DAEE2AADD15E6EDEE0F05ED19E022B55665FF1C33D22B70E89652B46 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2094 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDF9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xE1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST POP POP POP POP PUSH2 0x914 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xE44 DUP2 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0xE4C PUSH2 0x163E JUMP JUMPDEST PUSH2 0xE57 PUSH1 0x5 DUP4 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0xE73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x2 ADD SSTORE PUSH2 0xEA5 PUSH1 0x5 DUP4 PUSH2 0x16AA JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2094 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0x914 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0xED0 PUSH2 0x163E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xEF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0xF54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x68616E207A65726F PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x625 JUMP JUMPDEST DUP1 PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A590813595C9ADB19481C9BDBDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH2 0xFA2 PUSH1 0x5 DUP3 PUSH2 0x1697 JUMP JUMPDEST ISZERO PUSH2 0xFEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x4465706F73697420494420616C726561647920657869737473 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x7 SLOAD CALLVALUE PUSH2 0xFFE SWAP2 SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH2 0x1008 SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1016 DUP3 CALLVALUE PUSH2 0x1E7A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE CALLER PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP3 DUP5 ADD DUP6 DUP2 MSTORE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP4 SWAP1 KECCAK256 SWAP2 MLOAD DUP3 SSTORE MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE SWAP1 POP PUSH2 0x107A PUSH1 0x5 DUP5 PUSH2 0x1725 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 DUP5 SWAP1 PUSH32 0x2FC7F61216F4B9DA63724A7CCBA484452205B7CF651334640E3CD11201786006 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10FF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x114B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST POP POP POP PUSH2 0x1157 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1166 PUSH1 0x5 PUSH2 0x171B JUMP JUMPDEST DUP3 LT PUSH2 0x11AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH2 0x546 PUSH1 0x5 DUP4 PUSH2 0x1731 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C2 PUSH1 0x5 DUP9 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0x11DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP12 SWAP1 SHL AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x34 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x54 DUP3 ADD DUP8 SWAP1 MSTORE SWAP2 SWAP1 PUSH1 0x74 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1272 DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP DUP6 SLOAD SWAP2 POP DUP5 SWAP1 POP PUSH2 0x173D JUMP JUMPDEST PUSH2 0x12B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24B73B30B634B21036B2B935B63290383937B7B3 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1324 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x20B63932B0B23C903BB4BA34323930BBB7 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST TIMESTAMP DUP7 GT ISZERO PUSH2 0x136F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x14995B19585CD9481D1A5B59481B9BDD081C995858DA1959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST DUP7 DUP3 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x13C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x125B9CDD59999A58DA595B9D0819195C1BDCDA5D08185B5BDD5B9D PUSH1 0x2A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST POP PUSH1 0x1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x13D9 DUP3 PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x13E2 DUP2 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x5DD DUP4 DUP4 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1404 DUP2 PUSH2 0x15B0 JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x143B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x9CDE408AA89 PUSH1 0xD3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST DUP1 DUP4 GT ISZERO PUSH2 0x1484 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x416D6F756E7420657863656564732062616C616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14D1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x150F DUP2 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x155D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9D985B1A5908199959481C9958DA5C1A595B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0xAAEBCF1BFA00580E41D966056B48521FA9F202645C86D4DDF28113E617C1B1D3 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1157 DUP2 CALLER PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x15C4 DUP3 DUP3 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x914 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x15FA CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1690 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A3 DUP4 DUP4 PUSH2 0x17AC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A3 DUP4 DUP4 PUSH2 0x17C4 JUMP JUMPDEST PUSH2 0x16C0 DUP3 DUP3 PUSH2 0xC1F JUMP JUMPDEST ISZERO PUSH2 0x914 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x546 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A3 DUP4 DUP4 PUSH2 0x18B7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A3 DUP4 DUP4 PUSH2 0x1901 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x174A DUP6 DUP5 PUSH2 0x192B JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x175D DUP3 DUP3 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x914 JUMPI PUSH2 0x176A DUP2 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x1775 DUP4 PUSH1 0x20 PUSH2 0x198A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1786 SWAP3 SWAP2 SWAP1 PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x625 SWAP2 PUSH1 0x4 ADD PUSH2 0x1F9B JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x18AD JUMPI PUSH1 0x0 PUSH2 0x17E8 PUSH1 0x1 DUP4 PUSH2 0x1E7A JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x17FC SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1E7A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1861 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x181C JUMPI PUSH2 0x181C PUSH2 0x1FCE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x183F JUMPI PUSH2 0x183F PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1872 JUMPI PUSH2 0x1872 PUSH2 0x1FE4 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x546 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x546 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C3 DUP4 DUP4 PUSH2 0x17AC JUMP JUMPDEST PUSH2 0x18F9 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x546 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x546 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1918 JUMPI PUSH2 0x1918 PUSH2 0x1FCE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1970 JUMPI PUSH2 0x195C DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x194F JUMPI PUSH2 0x194F PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1B25 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x1968 DUP2 PUSH2 0x1FFA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1930 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x546 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1999 DUP4 PUSH1 0x2 PUSH2 0x1ECF JUMP JUMPDEST PUSH2 0x19A4 SWAP1 PUSH1 0x2 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x19BB JUMPI PUSH2 0x19BB PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19E5 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1A00 JUMPI PUSH2 0x1A00 PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1A2F JUMPI PUSH2 0x1A2F PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1A53 DUP5 PUSH1 0x2 PUSH2 0x1ECF JUMP JUMPDEST PUSH2 0x1A5E SWAP1 PUSH1 0x1 PUSH2 0x2013 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1AD6 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1A92 JUMPI PUSH2 0x1A92 PUSH2 0x1FCE JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1AA8 JUMPI PUSH2 0x1AA8 PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1ACF DUP2 PUSH2 0x203C JUMP JUMPDEST SWAP1 POP PUSH2 0x1A61 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x16A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1B41 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x16A3 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x16A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x16A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16A3 DUP2 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1BFC DUP2 PUSH2 0x1BC2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1C19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1C4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1C6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x1C7D DUP2 PUSH2 0x1BC2 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1CA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CB2 DUP10 DUP3 DUP11 ADD PUSH2 0x1C07 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1CEB DUP2 PUSH2 0x1BC2 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1D2E DUP2 PUSH2 0x1BC2 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1BFC DUP2 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1D5C DUP2 PUSH2 0x1BC2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16A3 DUP2 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x10DBDB9D1C9858DD081A5CC81C185D5CD959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH25 0x11195C1BDCDA5D08125108191BD95CC81B9BDD08195E1A5CDD PUSH1 0x3A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT ISZERO PUSH2 0x1E2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x5 SHL DUP1 DUP6 PUSH1 0xC0 DUP6 ADD CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD PUSH1 0xC0 ADD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x16A3 DUP2 PUSH2 0x1B7E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x546 JUMPI PUSH2 0x546 PUSH2 0x1E64 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x546 JUMPI PUSH2 0x546 PUSH2 0x1E64 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F03 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F23 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F0B JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH23 0x20B1B1B2B9B9A1B7B73A3937B61D1030B1B1B7BAB73A1 PUSH1 0x4D SHL DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1F5E DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1F08 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1F8F DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1F08 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1FBA DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1F08 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x200C JUMPI PUSH2 0x200C PUSH2 0x1E64 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x546 JUMPI PUSH2 0x546 PUSH2 0x1E64 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x204B JUMPI PUSH2 0x204B PUSH2 0x1E64 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID 0xB1 SWAP6 CHAINID 0xDF CREATE 0x1E DUP6 PUSH16 0xB3F010C267A7B1C60363CF8A4664E21C 0xC8 SWAP13 0x26 0x22 CHAINID KECCAK256 0x21 0x4E LOG4 SWAP9 SMOD KECCAK256 0x5C 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xC01BE8CCCF858504FEB9CA3C65B0E2340A99D0935173 DUP9 EXTCODECOPY 0xEE CALLER 0xE7 PUSH3 0xF4A290 0x4E LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 BLOCKHASH NUMBER 0x25 0xCA DUP15 GT 0x27 0xF7 ORIGIN SWAP8 LOG2 0xD6 ORIGIN DIV ISZERO PUSH12 0x37FC9F49D7168753F8C2DD36 TIMESTAMP DUP4 DUP3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"678:12267:12:-:0;;;1500:3;1479:24;;1551:26;;;-1:-1:-1;;1551:26:12;;;2700:388;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:2;1821:22;;-1:-1:-1;;;;;2745:19:12;;2737:60;;;;-1:-1:-1;;;2737:60:12;;511:2:13;2737:60:12;;;493:21:13;550:2;530:18;;;523:30;589;569:18;;;562:58;637:18;;2737:60:12;;;;;;;;2870:42;2198:4:0;2901:10:12;2870;:42::i;:::-;2922:34;866:23;2945:10;2922;:34::i;:::-;2966:29;932:23;2989:5;2966:10;:29::i;:::-;-1:-1:-1;3006:12:12;:25;;-1:-1:-1;;;;;;3006:25:12;3021:10;3006:25;;;678:12267;;7587:233:0;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:0;;;;;;;;;;;;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:0;;;;;;;;;:36;;-1:-1:-1;;7708:36:0;7740:4;7708:36;;;7790:12;734:10:4;;655:96;7790:12:0;-1:-1:-1;;;;;7763:40:0;7781:7;-1:-1:-1;;;;;7763:40:0;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;14:290:13:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:13;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:13:o;309:352::-;678:12267:12;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ADMIN_ROLE_2969":{"entryPoint":null,"id":2969,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_27":{"entryPoint":null,"id":27,"parameterSlots":0,"returnSlots":0},"@MAX_FEE_2972":{"entryPoint":null,"id":2972,"parameterSlots":0,"returnSlots":0},"@OWNER_ROLE_2964":{"entryPoint":null,"id":2964,"parameterSlots":0,"returnSlots":0},"@_3792":{"entryPoint":null,"id":3792,"parameterSlots":0,"returnSlots":0},"@_3797":{"entryPoint":null,"id":3797,"parameterSlots":0,"returnSlots":0},"@_add_2378":{"entryPoint":6327,"id":2378,"parameterSlots":2,"returnSlots":1},"@_at_2512":{"entryPoint":6401,"id":2512,"parameterSlots":2,"returnSlots":1},"@_checkRole_131":{"entryPoint":5971,"id":131,"parameterSlots":2,"returnSlots":0},"@_checkRole_92":{"entryPoint":5552,"id":92,"parameterSlots":1,"returnSlots":0},"@_contains_2481":{"entryPoint":6060,"id":2481,"parameterSlots":2,"returnSlots":1},"@_efficientHash_1317":{"entryPoint":null,"id":1317,"parameterSlots":2,"returnSlots":1},"@_grantRole_283":{"entryPoint":5562,"id":283,"parameterSlots":2,"returnSlots":0},"@_hashPair_1306":{"entryPoint":6949,"id":1306,"parameterSlots":2,"returnSlots":1},"@_length_2495":{"entryPoint":null,"id":2495,"parameterSlots":1,"returnSlots":1},"@_msgSender_543":{"entryPoint":null,"id":543,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_441":{"entryPoint":null,"id":441,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_433":{"entryPoint":5694,"id":433,"parameterSlots":0,"returnSlots":0},"@_remove_2462":{"entryPoint":6084,"id":2462,"parameterSlots":2,"returnSlots":1},"@_revokeRole_314":{"entryPoint":5814,"id":314,"parameterSlots":2,"returnSlots":0},"@add_2548":{"entryPoint":5925,"id":2548,"parameterSlots":2,"returnSlots":1},"@at_2617":{"entryPoint":5937,"id":2617,"parameterSlots":2,"returnSlots":1},"@contains_2584":{"entryPoint":5783,"id":2584,"parameterSlots":2,"returnSlots":1},"@deleteDeposit_3614":{"entryPoint":3628,"id":3614,"parameterSlots":1,"returnSlots":0},"@deposit_3270":{"entryPoint":3784,"id":3270,"parameterSlots":1,"returnSlots":0},"@emergencyWithdrawToUser_3579":{"entryPoint":3144,"id":3579,"parameterSlots":1,"returnSlots":0},"@feeRecipient_2974":{"entryPoint":null,"id":2974,"parameterSlots":0,"returnSlots":0},"@fee_3000":{"entryPoint":null,"id":3000,"parameterSlots":0,"returnSlots":0},"@getDepositIdAt_3152":{"entryPoint":4442,"id":3152,"parameterSlots":1,"returnSlots":1},"@getDeposit_3174":{"entryPoint":2584,"id":3174,"parameterSlots":1,"returnSlots":1},"@getFee_3118":{"entryPoint":null,"id":3118,"parameterSlots":0,"returnSlots":1},"@getRoleAdmin_146":{"entryPoint":1452,"id":146,"parameterSlots":1,"returnSlots":1},"@grantRole_166":{"entryPoint":1473,"id":166,"parameterSlots":2,"returnSlots":0},"@hasRole_79":{"entryPoint":3103,"id":79,"parameterSlots":2,"returnSlots":1},"@hasUserWithdrawn_3291":{"entryPoint":null,"id":3291,"parameterSlots":3,"returnSlots":1},"@length_2599":{"entryPoint":5915,"id":2599,"parameterSlots":1,"returnSlots":1},"@paused_3003":{"entryPoint":null,"id":3003,"parameterSlots":0,"returnSlots":0},"@processProof_875":{"entryPoint":6443,"id":875,"parameterSlots":2,"returnSlots":1},"@recoverERC20_3651":{"entryPoint":2783,"id":3651,"parameterSlots":2,"returnSlots":0},"@recoverEth_3699":{"entryPoint":5100,"id":3699,"parameterSlots":2,"returnSlots":0},"@remove_2566":{"entryPoint":5802,"id":2566,"parameterSlots":2,"returnSlots":1},"@renounceRole_209":{"entryPoint":2202,"id":209,"parameterSlots":2,"returnSlots":0},"@revokeRole_186":{"entryPoint":5072,"id":186,"parameterSlots":2,"returnSlots":0},"@setFeeRecipient_3769":{"entryPoint":5367,"id":3769,"parameterSlots":1,"returnSlots":0},"@setFee_3736":{"entryPoint":2328,"id":3736,"parameterSlots":1,"returnSlots":0},"@setPaused_3787":{"entryPoint":1356,"id":3787,"parameterSlots":1,"returnSlots":0},"@shouldTransferEther_3376":{"entryPoint":4533,"id":3376,"parameterSlots":6,"returnSlots":1},"@supportsInterface_1341":{"entryPoint":null,"id":1341,"parameterSlots":1,"returnSlots":1},"@supportsInterface_60":{"entryPoint":1301,"id":60,"parameterSlots":1,"returnSlots":1},"@toHexString_744":{"entryPoint":6538,"id":744,"parameterSlots":2,"returnSlots":1},"@toHexString_764":{"entryPoint":6520,"id":764,"parameterSlots":1,"returnSlots":1},"@totalDeposits_3129":{"entryPoint":2766,"id":3129,"parameterSlots":0,"returnSlots":1},"@transferEther_3495":{"entryPoint":1506,"id":3495,"parameterSlots":6,"returnSlots":0},"@verify_814":{"entryPoint":5949,"id":814,"parameterSlots":3,"returnSlots":1},"abi_decode_array_bytes32_dyn_calldata":{"entryPoint":7175,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":7530,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7486,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool":{"entryPoint":7052,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":7751,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":7081,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":7127,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_address_payablet_uint256t_uint256t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":7250,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_bytes32t_addresst_uint256":{"entryPoint":7364,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_addresst_uint256t_uint256t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_bytes4":{"entryPoint":6996,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20_$531t_address":{"entryPoint":7440,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":7862,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7980,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7420,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_payable_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_calldata_ptr__to_t_bytes32_t_address_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7654,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8091,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0039e6735521f7b0196953e89f27cc371edc6bb5fb4f18631ddb74873dea7271__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_004c0fa1591e755bd6bc2a320c434e2cacca3ce858e00934e976ba0265b4cd87__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_18ba671663cc149608333373fe3daaddc64eb144864b7962cfeb52050b5de2ce__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1ae725630e89b25bfdaf595445b8423bd80e9df92ceecb6d061610f2a2e3182c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1bf4c4e730d5ee6cec86008d2bfd433f0c42d1b0ac13b55ae99ee97c360662b0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24ad9e456a2ce0106486031801792ed30a6c347256d2d81e2b2aae7dcd707129__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7821,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_31fb24c45e8e227fef562a8d72702323ba8cefa50ca38edc5e93f5cd45b26b93__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4ea48790db13e4ee9ddfd7285660e5d12af98045629460d48a74e53124125a3d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6b293b0896b22dc3a03a4f229b72f78da937962c6081a958fe0adeeb67107219__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_98697925fb039aaca86dc4adabe52515e4418e1e556d3a371cdce8ced9b902f6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9e0b6a3c3c2892dcc46975fd4747d409a6200f0f6763c4000ee1783c7e6b5410__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a87c9e0d3eefbac0f3a8e33df8ba206353d61a7c4bcb58b89c11ac8e66ce6d56__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7603,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cacadcc73db8e6395c114dc30f0bb9c982ee87d348a2924baa79be69e3bb4687__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_daf265deba315b0f69699516857cd04e6131e8f2cb52a70455d08357d6058605__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7559,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Deposit_$2981_memory_ptr__to_t_struct$_Deposit_$2981_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8211,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":7910,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":7887,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7802,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":7944,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":8252,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":8186,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7780,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":8164,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":8142,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8230,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":7106,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":7038,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:20019:13","statements":[{"nodeType":"YulBlock","src":"6:3:13","statements":[]},{"body":{"nodeType":"YulBlock","src":"83:217:13","statements":[{"body":{"nodeType":"YulBlock","src":"129:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"138:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"141:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:13"},"nodeType":"YulFunctionCall","src":"131:12:13"},"nodeType":"YulExpressionStatement","src":"131:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"104:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"113:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:13"},"nodeType":"YulFunctionCall","src":"100:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"125:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"96:3:13"},"nodeType":"YulFunctionCall","src":"96:32:13"},"nodeType":"YulIf","src":"93:52:13"},{"nodeType":"YulVariableDeclaration","src":"154:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"180:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"167:12:13"},"nodeType":"YulFunctionCall","src":"167:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"158:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"254:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"266:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"256:6:13"},"nodeType":"YulFunctionCall","src":"256:12:13"},"nodeType":"YulExpressionStatement","src":"256:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"234:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"239:10:13","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"230:3:13"},"nodeType":"YulFunctionCall","src":"230:20:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"219:3:13"},"nodeType":"YulFunctionCall","src":"219:32:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"209:2:13"},"nodeType":"YulFunctionCall","src":"209:43:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"202:6:13"},"nodeType":"YulFunctionCall","src":"202:51:13"},"nodeType":"YulIf","src":"199:71:13"},{"nodeType":"YulAssignment","src":"279:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"289:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"279:6:13"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"60:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"72:6:13","type":""}],"src":"14:286:13"},{"body":{"nodeType":"YulBlock","src":"400:92:13","statements":[{"nodeType":"YulAssignment","src":"410:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"433:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"418:3:13"},"nodeType":"YulFunctionCall","src":"418:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"410:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"452:9:13"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"470:6:13"},"nodeType":"YulFunctionCall","src":"470:14:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"463:6:13"},"nodeType":"YulFunctionCall","src":"463:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"445:6:13"},"nodeType":"YulFunctionCall","src":"445:41:13"},"nodeType":"YulExpressionStatement","src":"445:41:13"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"369:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"380:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"391:4:13","type":""}],"src":"305:187:13"},{"body":{"nodeType":"YulBlock","src":"539:76:13","statements":[{"body":{"nodeType":"YulBlock","src":"593:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"602:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"605:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"595:6:13"},"nodeType":"YulFunctionCall","src":"595:12:13"},"nodeType":"YulExpressionStatement","src":"595:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"562:5:13"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"583:5:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"576:6:13"},"nodeType":"YulFunctionCall","src":"576:13:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"569:6:13"},"nodeType":"YulFunctionCall","src":"569:21:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"559:2:13"},"nodeType":"YulFunctionCall","src":"559:32:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"552:6:13"},"nodeType":"YulFunctionCall","src":"552:40:13"},"nodeType":"YulIf","src":"549:60:13"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"528:5:13","type":""}],"src":"497:118:13"},{"body":{"nodeType":"YulBlock","src":"687:174:13","statements":[{"body":{"nodeType":"YulBlock","src":"733:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"742:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"745:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"735:6:13"},"nodeType":"YulFunctionCall","src":"735:12:13"},"nodeType":"YulExpressionStatement","src":"735:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"708:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"717:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"704:3:13"},"nodeType":"YulFunctionCall","src":"704:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"729:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"700:3:13"},"nodeType":"YulFunctionCall","src":"700:32:13"},"nodeType":"YulIf","src":"697:52:13"},{"nodeType":"YulVariableDeclaration","src":"758:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"784:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"771:12:13"},"nodeType":"YulFunctionCall","src":"771:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"762:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"825:5:13"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"803:21:13"},"nodeType":"YulFunctionCall","src":"803:28:13"},"nodeType":"YulExpressionStatement","src":"803:28:13"},{"nodeType":"YulAssignment","src":"840:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"850:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"840:6:13"}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"653:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"664:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"676:6:13","type":""}],"src":"620:241:13"},{"body":{"nodeType":"YulBlock","src":"936:110:13","statements":[{"body":{"nodeType":"YulBlock","src":"982:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"991:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"994:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"984:6:13"},"nodeType":"YulFunctionCall","src":"984:12:13"},"nodeType":"YulExpressionStatement","src":"984:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"957:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"966:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"953:3:13"},"nodeType":"YulFunctionCall","src":"953:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"978:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"949:3:13"},"nodeType":"YulFunctionCall","src":"949:32:13"},"nodeType":"YulIf","src":"946:52:13"},{"nodeType":"YulAssignment","src":"1007:33:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1030:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1017:12:13"},"nodeType":"YulFunctionCall","src":"1017:23:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1007:6:13"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"902:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"913:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"925:6:13","type":""}],"src":"866:180:13"},{"body":{"nodeType":"YulBlock","src":"1152:76:13","statements":[{"nodeType":"YulAssignment","src":"1162:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1174:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1185:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1170:3:13"},"nodeType":"YulFunctionCall","src":"1170:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1162:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1204:9:13"},{"name":"value0","nodeType":"YulIdentifier","src":"1215:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1197:6:13"},"nodeType":"YulFunctionCall","src":"1197:25:13"},"nodeType":"YulExpressionStatement","src":"1197:25:13"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1121:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:13","type":""}],"src":"1051:177:13"},{"body":{"nodeType":"YulBlock","src":"1278:86:13","statements":[{"body":{"nodeType":"YulBlock","src":"1342:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1351:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1354:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1344:6:13"},"nodeType":"YulFunctionCall","src":"1344:12:13"},"nodeType":"YulExpressionStatement","src":"1344:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1301:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1312:5:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1327:3:13","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1332:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1323:3:13"},"nodeType":"YulFunctionCall","src":"1323:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"1336:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1319:3:13"},"nodeType":"YulFunctionCall","src":"1319:19:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1308:3:13"},"nodeType":"YulFunctionCall","src":"1308:31:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1298:2:13"},"nodeType":"YulFunctionCall","src":"1298:42:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1291:6:13"},"nodeType":"YulFunctionCall","src":"1291:50:13"},"nodeType":"YulIf","src":"1288:70:13"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1267:5:13","type":""}],"src":"1233:131:13"},{"body":{"nodeType":"YulBlock","src":"1456:228:13","statements":[{"body":{"nodeType":"YulBlock","src":"1502:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1511:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1514:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1504:6:13"},"nodeType":"YulFunctionCall","src":"1504:12:13"},"nodeType":"YulExpressionStatement","src":"1504:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1477:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"1486:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1473:3:13"},"nodeType":"YulFunctionCall","src":"1473:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"1498:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1469:3:13"},"nodeType":"YulFunctionCall","src":"1469:32:13"},"nodeType":"YulIf","src":"1466:52:13"},{"nodeType":"YulAssignment","src":"1527:33:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1550:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1537:12:13"},"nodeType":"YulFunctionCall","src":"1537:23:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1527:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"1569:45:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1599:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1610:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:13"},"nodeType":"YulFunctionCall","src":"1595:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1582:12:13"},"nodeType":"YulFunctionCall","src":"1582:32:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1573:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1648:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1623:24:13"},"nodeType":"YulFunctionCall","src":"1623:31:13"},"nodeType":"YulExpressionStatement","src":"1623:31:13"},{"nodeType":"YulAssignment","src":"1663:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"1673:5:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1663:6:13"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1414:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1425:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1437:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1445:6:13","type":""}],"src":"1369:315:13"},{"body":{"nodeType":"YulBlock","src":"1773:283:13","statements":[{"body":{"nodeType":"YulBlock","src":"1822:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1831:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1834:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1824:6:13"},"nodeType":"YulFunctionCall","src":"1824:12:13"},"nodeType":"YulExpressionStatement","src":"1824:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1801:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1809:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1797:3:13"},"nodeType":"YulFunctionCall","src":"1797:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"1816:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1793:3:13"},"nodeType":"YulFunctionCall","src":"1793:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1786:6:13"},"nodeType":"YulFunctionCall","src":"1786:35:13"},"nodeType":"YulIf","src":"1783:55:13"},{"nodeType":"YulAssignment","src":"1847:30:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1870:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1857:12:13"},"nodeType":"YulFunctionCall","src":"1857:20:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1847:6:13"}]},{"body":{"nodeType":"YulBlock","src":"1920:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1929:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1932:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1922:6:13"},"nodeType":"YulFunctionCall","src":"1922:12:13"},"nodeType":"YulExpressionStatement","src":"1922:12:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1892:6:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1908:2:13","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1912:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1904:3:13"},"nodeType":"YulFunctionCall","src":"1904:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"1916:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1900:3:13"},"nodeType":"YulFunctionCall","src":"1900:18:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1889:2:13"},"nodeType":"YulFunctionCall","src":"1889:30:13"},"nodeType":"YulIf","src":"1886:50:13"},{"nodeType":"YulAssignment","src":"1945:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1961:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1969:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1957:3:13"},"nodeType":"YulFunctionCall","src":"1957:17:13"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1945:8:13"}]},{"body":{"nodeType":"YulBlock","src":"2034:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2043:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2046:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2036:6:13"},"nodeType":"YulFunctionCall","src":"2036:12:13"},"nodeType":"YulExpressionStatement","src":"2036:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1997:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2009:1:13","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"2012:6:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2005:3:13"},"nodeType":"YulFunctionCall","src":"2005:14:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1993:3:13"},"nodeType":"YulFunctionCall","src":"1993:27:13"},{"kind":"number","nodeType":"YulLiteral","src":"2022:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1989:3:13"},"nodeType":"YulFunctionCall","src":"1989:38:13"},{"name":"end","nodeType":"YulIdentifier","src":"2029:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1986:2:13"},"nodeType":"YulFunctionCall","src":"1986:47:13"},"nodeType":"YulIf","src":"1983:67:13"}]},"name":"abi_decode_array_bytes32_dyn_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1736:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"1744:3:13","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1752:8:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"1762:6:13","type":""}],"src":"1689:367:13"},{"body":{"nodeType":"YulBlock","src":"2242:605:13","statements":[{"body":{"nodeType":"YulBlock","src":"2289:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2298:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2301:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2291:6:13"},"nodeType":"YulFunctionCall","src":"2291:12:13"},"nodeType":"YulExpressionStatement","src":"2291:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2263:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"2272:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2259:3:13"},"nodeType":"YulFunctionCall","src":"2259:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"2284:3:13","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2255:3:13"},"nodeType":"YulFunctionCall","src":"2255:33:13"},"nodeType":"YulIf","src":"2252:53:13"},{"nodeType":"YulAssignment","src":"2314:33:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2337:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2324:12:13"},"nodeType":"YulFunctionCall","src":"2324:23:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2314:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"2356:45:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2386:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2397:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2382:3:13"},"nodeType":"YulFunctionCall","src":"2382:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2369:12:13"},"nodeType":"YulFunctionCall","src":"2369:32:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2360:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2435:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2410:24:13"},"nodeType":"YulFunctionCall","src":"2410:31:13"},"nodeType":"YulExpressionStatement","src":"2410:31:13"},{"nodeType":"YulAssignment","src":"2450:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"2460:5:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2450:6:13"}]},{"nodeType":"YulAssignment","src":"2474:42:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2501:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2512:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2497:3:13"},"nodeType":"YulFunctionCall","src":"2497:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2484:12:13"},"nodeType":"YulFunctionCall","src":"2484:32:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2474:6:13"}]},{"nodeType":"YulAssignment","src":"2525:42:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2552:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2563:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2548:3:13"},"nodeType":"YulFunctionCall","src":"2548:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2535:12:13"},"nodeType":"YulFunctionCall","src":"2535:32:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2525:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"2576:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2607:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2618:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2603:3:13"},"nodeType":"YulFunctionCall","src":"2603:19:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2590:12:13"},"nodeType":"YulFunctionCall","src":"2590:33:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2580:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2666:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2675:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2678:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2668:6:13"},"nodeType":"YulFunctionCall","src":"2668:12:13"},"nodeType":"YulExpressionStatement","src":"2668:12:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2654:2:13","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2658:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2650:3:13"},"nodeType":"YulFunctionCall","src":"2650:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"2662:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2646:3:13"},"nodeType":"YulFunctionCall","src":"2646:18:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2635:2:13"},"nodeType":"YulFunctionCall","src":"2635:30:13"},"nodeType":"YulIf","src":"2632:50:13"},{"nodeType":"YulVariableDeclaration","src":"2691:96:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2759:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2770:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2755:3:13"},"nodeType":"YulFunctionCall","src":"2755:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2779:7:13"}],"functionName":{"name":"abi_decode_array_bytes32_dyn_calldata","nodeType":"YulIdentifier","src":"2717:37:13"},"nodeType":"YulFunctionCall","src":"2717:70:13"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"2695:8:13","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"2705:8:13","type":""}]},{"nodeType":"YulAssignment","src":"2796:18:13","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"2806:8:13"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2796:6:13"}]},{"nodeType":"YulAssignment","src":"2823:18:13","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"2833:8:13"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2823:6:13"}]}]},"name":"abi_decode_tuple_t_bytes32t_address_payablet_uint256t_uint256t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2168:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2179:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2191:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2199:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2207:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2215:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2223:6:13","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2231:6:13","type":""}],"src":"2061:786:13"},{"body":{"nodeType":"YulBlock","src":"2956:279:13","statements":[{"body":{"nodeType":"YulBlock","src":"3002:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3011:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3014:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3004:6:13"},"nodeType":"YulFunctionCall","src":"3004:12:13"},"nodeType":"YulExpressionStatement","src":"3004:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2977:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"2986:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2973:3:13"},"nodeType":"YulFunctionCall","src":"2973:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"2998:2:13","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2969:3:13"},"nodeType":"YulFunctionCall","src":"2969:32:13"},"nodeType":"YulIf","src":"2966:52:13"},{"nodeType":"YulAssignment","src":"3027:33:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3050:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3037:12:13"},"nodeType":"YulFunctionCall","src":"3037:23:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3027:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"3069:45:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3099:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3110:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3095:3:13"},"nodeType":"YulFunctionCall","src":"3095:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3082:12:13"},"nodeType":"YulFunctionCall","src":"3082:32:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3073:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3148:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3123:24:13"},"nodeType":"YulFunctionCall","src":"3123:31:13"},"nodeType":"YulExpressionStatement","src":"3123:31:13"},{"nodeType":"YulAssignment","src":"3163:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"3173:5:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3163:6:13"}]},{"nodeType":"YulAssignment","src":"3187:42:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3214:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3225:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3210:3:13"},"nodeType":"YulFunctionCall","src":"3210:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3197:12:13"},"nodeType":"YulFunctionCall","src":"3197:32:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3187:6:13"}]}]},"name":"abi_decode_tuple_t_bytes32t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2906:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2917:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2929:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2937:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2945:6:13","type":""}],"src":"2852:383:13"},{"body":{"nodeType":"YulBlock","src":"3341:102:13","statements":[{"nodeType":"YulAssignment","src":"3351:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3363:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3374:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3359:3:13"},"nodeType":"YulFunctionCall","src":"3359:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3351:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3393:9:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3408:6:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3424:3:13","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3429:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3420:3:13"},"nodeType":"YulFunctionCall","src":"3420:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"3433:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3416:3:13"},"nodeType":"YulFunctionCall","src":"3416:19:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3404:3:13"},"nodeType":"YulFunctionCall","src":"3404:32:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3386:6:13"},"nodeType":"YulFunctionCall","src":"3386:51:13"},"nodeType":"YulExpressionStatement","src":"3386:51:13"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3310:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3321:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3332:4:13","type":""}],"src":"3240:203:13"},{"body":{"nodeType":"YulBlock","src":"3518:110:13","statements":[{"body":{"nodeType":"YulBlock","src":"3564:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3573:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3576:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3566:6:13"},"nodeType":"YulFunctionCall","src":"3566:12:13"},"nodeType":"YulExpressionStatement","src":"3566:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3539:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3535:3:13"},"nodeType":"YulFunctionCall","src":"3535:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"3560:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3531:3:13"},"nodeType":"YulFunctionCall","src":"3531:32:13"},"nodeType":"YulIf","src":"3528:52:13"},{"nodeType":"YulAssignment","src":"3589:33:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3612:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3599:12:13"},"nodeType":"YulFunctionCall","src":"3599:23:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3589:6:13"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3484:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3495:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3507:6:13","type":""}],"src":"3448:180:13"},{"body":{"nodeType":"YulBlock","src":"3784:235:13","statements":[{"nodeType":"YulAssignment","src":"3794:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3806:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3817:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3802:3:13"},"nodeType":"YulFunctionCall","src":"3802:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3794:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3836:9:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3853:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3847:5:13"},"nodeType":"YulFunctionCall","src":"3847:13:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3829:6:13"},"nodeType":"YulFunctionCall","src":"3829:32:13"},"nodeType":"YulExpressionStatement","src":"3829:32:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3881:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3892:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3877:3:13"},"nodeType":"YulFunctionCall","src":"3877:20:13"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3913:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3921:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3909:3:13"},"nodeType":"YulFunctionCall","src":"3909:17:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3903:5:13"},"nodeType":"YulFunctionCall","src":"3903:24:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3937:3:13","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3942:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3933:3:13"},"nodeType":"YulFunctionCall","src":"3933:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"3946:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3929:3:13"},"nodeType":"YulFunctionCall","src":"3929:19:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3899:3:13"},"nodeType":"YulFunctionCall","src":"3899:50:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3870:6:13"},"nodeType":"YulFunctionCall","src":"3870:80:13"},"nodeType":"YulExpressionStatement","src":"3870:80:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3970:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3981:4:13","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3966:3:13"},"nodeType":"YulFunctionCall","src":"3966:20:13"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3998:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4006:4:13","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3994:3:13"},"nodeType":"YulFunctionCall","src":"3994:17:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3988:5:13"},"nodeType":"YulFunctionCall","src":"3988:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3959:6:13"},"nodeType":"YulFunctionCall","src":"3959:54:13"},"nodeType":"YulExpressionStatement","src":"3959:54:13"}]},"name":"abi_encode_tuple_t_struct$_Deposit_$2981_memory_ptr__to_t_struct$_Deposit_$2981_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3753:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3764:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3775:4:13","type":""}],"src":"3633:386:13"},{"body":{"nodeType":"YulBlock","src":"4125:76:13","statements":[{"nodeType":"YulAssignment","src":"4135:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4147:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4158:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4143:3:13"},"nodeType":"YulFunctionCall","src":"4143:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4135:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4177:9:13"},{"name":"value0","nodeType":"YulIdentifier","src":"4188:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4170:6:13"},"nodeType":"YulFunctionCall","src":"4170:25:13"},"nodeType":"YulExpressionStatement","src":"4170:25:13"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4094:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4105:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4116:4:13","type":""}],"src":"4024:177:13"},{"body":{"nodeType":"YulBlock","src":"4307:301:13","statements":[{"body":{"nodeType":"YulBlock","src":"4353:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4362:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4365:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4355:6:13"},"nodeType":"YulFunctionCall","src":"4355:12:13"},"nodeType":"YulExpressionStatement","src":"4355:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4328:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"4337:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4324:3:13"},"nodeType":"YulFunctionCall","src":"4324:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"4349:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4320:3:13"},"nodeType":"YulFunctionCall","src":"4320:32:13"},"nodeType":"YulIf","src":"4317:52:13"},{"nodeType":"YulVariableDeclaration","src":"4378:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4404:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4391:12:13"},"nodeType":"YulFunctionCall","src":"4391:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4382:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4448:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4423:24:13"},"nodeType":"YulFunctionCall","src":"4423:31:13"},"nodeType":"YulExpressionStatement","src":"4423:31:13"},{"nodeType":"YulAssignment","src":"4463:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"4473:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4463:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"4487:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4519:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4530:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4515:3:13"},"nodeType":"YulFunctionCall","src":"4515:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4502:12:13"},"nodeType":"YulFunctionCall","src":"4502:32:13"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"4491:7:13","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4568:7:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4543:24:13"},"nodeType":"YulFunctionCall","src":"4543:33:13"},"nodeType":"YulExpressionStatement","src":"4543:33:13"},{"nodeType":"YulAssignment","src":"4585:17:13","value":{"name":"value_1","nodeType":"YulIdentifier","src":"4595:7:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4585:6:13"}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$531t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4265:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4276:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4288:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4296:6:13","type":""}],"src":"4206:402:13"},{"body":{"nodeType":"YulBlock","src":"4786:605:13","statements":[{"body":{"nodeType":"YulBlock","src":"4833:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4842:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4845:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4835:6:13"},"nodeType":"YulFunctionCall","src":"4835:12:13"},"nodeType":"YulExpressionStatement","src":"4835:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4807:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"4816:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4803:3:13"},"nodeType":"YulFunctionCall","src":"4803:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"4828:3:13","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4799:3:13"},"nodeType":"YulFunctionCall","src":"4799:33:13"},"nodeType":"YulIf","src":"4796:53:13"},{"nodeType":"YulAssignment","src":"4858:33:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4881:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4868:12:13"},"nodeType":"YulFunctionCall","src":"4868:23:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4858:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"4900:45:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4930:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4941:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4926:3:13"},"nodeType":"YulFunctionCall","src":"4926:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4913:12:13"},"nodeType":"YulFunctionCall","src":"4913:32:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4904:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4979:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4954:24:13"},"nodeType":"YulFunctionCall","src":"4954:31:13"},"nodeType":"YulExpressionStatement","src":"4954:31:13"},{"nodeType":"YulAssignment","src":"4994:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"5004:5:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4994:6:13"}]},{"nodeType":"YulAssignment","src":"5018:42:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5045:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5056:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5041:3:13"},"nodeType":"YulFunctionCall","src":"5041:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5028:12:13"},"nodeType":"YulFunctionCall","src":"5028:32:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5018:6:13"}]},{"nodeType":"YulAssignment","src":"5069:42:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5096:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5107:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5092:3:13"},"nodeType":"YulFunctionCall","src":"5092:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5079:12:13"},"nodeType":"YulFunctionCall","src":"5079:32:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5069:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"5120:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5151:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5162:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5147:3:13"},"nodeType":"YulFunctionCall","src":"5147:19:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5134:12:13"},"nodeType":"YulFunctionCall","src":"5134:33:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5124:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5210:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5219:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5222:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5212:6:13"},"nodeType":"YulFunctionCall","src":"5212:12:13"},"nodeType":"YulExpressionStatement","src":"5212:12:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5182:6:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5198:2:13","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"5202:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5194:3:13"},"nodeType":"YulFunctionCall","src":"5194:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"5206:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5190:3:13"},"nodeType":"YulFunctionCall","src":"5190:18:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5179:2:13"},"nodeType":"YulFunctionCall","src":"5179:30:13"},"nodeType":"YulIf","src":"5176:50:13"},{"nodeType":"YulVariableDeclaration","src":"5235:96:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5303:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"5314:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5299:3:13"},"nodeType":"YulFunctionCall","src":"5299:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5323:7:13"}],"functionName":{"name":"abi_decode_array_bytes32_dyn_calldata","nodeType":"YulIdentifier","src":"5261:37:13"},"nodeType":"YulFunctionCall","src":"5261:70:13"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"5239:8:13","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"5249:8:13","type":""}]},{"nodeType":"YulAssignment","src":"5340:18:13","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"5350:8:13"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5340:6:13"}]},{"nodeType":"YulAssignment","src":"5367:18:13","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"5377:8:13"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"5367:6:13"}]}]},"name":"abi_decode_tuple_t_bytes32t_addresst_uint256t_uint256t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4712:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4723:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4735:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4743:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4751:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4759:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4767:6:13","type":""},{"name":"value5","nodeType":"YulTypedName","src":"4775:6:13","type":""}],"src":"4613:778:13"},{"body":{"nodeType":"YulBlock","src":"5483:228:13","statements":[{"body":{"nodeType":"YulBlock","src":"5529:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5538:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5541:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5531:6:13"},"nodeType":"YulFunctionCall","src":"5531:12:13"},"nodeType":"YulExpressionStatement","src":"5531:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5504:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"5513:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5500:3:13"},"nodeType":"YulFunctionCall","src":"5500:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"5525:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5496:3:13"},"nodeType":"YulFunctionCall","src":"5496:32:13"},"nodeType":"YulIf","src":"5493:52:13"},{"nodeType":"YulVariableDeclaration","src":"5554:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5580:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5567:12:13"},"nodeType":"YulFunctionCall","src":"5567:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5558:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5624:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5599:24:13"},"nodeType":"YulFunctionCall","src":"5599:31:13"},"nodeType":"YulExpressionStatement","src":"5599:31:13"},{"nodeType":"YulAssignment","src":"5639:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"5649:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5639:6:13"}]},{"nodeType":"YulAssignment","src":"5663:42:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5690:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5701:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5686:3:13"},"nodeType":"YulFunctionCall","src":"5686:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5673:12:13"},"nodeType":"YulFunctionCall","src":"5673:32:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5663:6:13"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5441:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5452:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5464:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5472:6:13","type":""}],"src":"5396:315:13"},{"body":{"nodeType":"YulBlock","src":"5786:177:13","statements":[{"body":{"nodeType":"YulBlock","src":"5832:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5841:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5844:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5834:6:13"},"nodeType":"YulFunctionCall","src":"5834:12:13"},"nodeType":"YulExpressionStatement","src":"5834:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5807:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"5816:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5803:3:13"},"nodeType":"YulFunctionCall","src":"5803:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"5828:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5799:3:13"},"nodeType":"YulFunctionCall","src":"5799:32:13"},"nodeType":"YulIf","src":"5796:52:13"},{"nodeType":"YulVariableDeclaration","src":"5857:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5883:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5870:12:13"},"nodeType":"YulFunctionCall","src":"5870:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5861:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5927:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5902:24:13"},"nodeType":"YulFunctionCall","src":"5902:31:13"},"nodeType":"YulExpressionStatement","src":"5902:31:13"},{"nodeType":"YulAssignment","src":"5942:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"5952:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5942:6:13"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5752:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5763:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5775:6:13","type":""}],"src":"5716:247:13"},{"body":{"nodeType":"YulBlock","src":"6142:168:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6159:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6170:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6152:6:13"},"nodeType":"YulFunctionCall","src":"6152:21:13"},"nodeType":"YulExpressionStatement","src":"6152:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6193:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6204:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6189:3:13"},"nodeType":"YulFunctionCall","src":"6189:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"6209:2:13","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6182:6:13"},"nodeType":"YulFunctionCall","src":"6182:30:13"},"nodeType":"YulExpressionStatement","src":"6182:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6232:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6243:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6228:3:13"},"nodeType":"YulFunctionCall","src":"6228:18:13"},{"hexValue":"436f6e747261637420697320706175736564","kind":"string","nodeType":"YulLiteral","src":"6248:20:13","type":"","value":"Contract is paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6221:6:13"},"nodeType":"YulFunctionCall","src":"6221:48:13"},"nodeType":"YulExpressionStatement","src":"6221:48:13"},{"nodeType":"YulAssignment","src":"6278:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6290:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6301:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6286:3:13"},"nodeType":"YulFunctionCall","src":"6286:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6278:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6119:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6133:4:13","type":""}],"src":"5968:342:13"},{"body":{"nodeType":"YulBlock","src":"6489:175:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6506:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6517:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6499:6:13"},"nodeType":"YulFunctionCall","src":"6499:21:13"},"nodeType":"YulExpressionStatement","src":"6499:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6540:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6551:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6536:3:13"},"nodeType":"YulFunctionCall","src":"6536:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"6556:2:13","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6529:6:13"},"nodeType":"YulFunctionCall","src":"6529:30:13"},"nodeType":"YulExpressionStatement","src":"6529:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6579:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6590:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6575:3:13"},"nodeType":"YulFunctionCall","src":"6575:18:13"},{"hexValue":"4465706f73697420494420646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"6595:27:13","type":"","value":"Deposit ID does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6568:6:13"},"nodeType":"YulFunctionCall","src":"6568:55:13"},"nodeType":"YulExpressionStatement","src":"6568:55:13"},{"nodeType":"YulAssignment","src":"6632:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6644:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6655:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6640:3:13"},"nodeType":"YulFunctionCall","src":"6640:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6632:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_a87c9e0d3eefbac0f3a8e33df8ba206353d61a7c4bcb58b89c11ac8e66ce6d56__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6466:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6480:4:13","type":""}],"src":"6315:349:13"},{"body":{"nodeType":"YulBlock","src":"6950:485:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6967:9:13"},{"name":"value0","nodeType":"YulIdentifier","src":"6978:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6960:6:13"},"nodeType":"YulFunctionCall","src":"6960:25:13"},"nodeType":"YulExpressionStatement","src":"6960:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7005:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7016:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7001:3:13"},"nodeType":"YulFunctionCall","src":"7001:18:13"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7025:6:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7041:3:13","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7046:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7037:3:13"},"nodeType":"YulFunctionCall","src":"7037:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"7050:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7033:3:13"},"nodeType":"YulFunctionCall","src":"7033:19:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7021:3:13"},"nodeType":"YulFunctionCall","src":"7021:32:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6994:6:13"},"nodeType":"YulFunctionCall","src":"6994:60:13"},"nodeType":"YulExpressionStatement","src":"6994:60:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7074:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7085:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7070:3:13"},"nodeType":"YulFunctionCall","src":"7070:18:13"},{"name":"value2","nodeType":"YulIdentifier","src":"7090:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7063:6:13"},"nodeType":"YulFunctionCall","src":"7063:34:13"},"nodeType":"YulExpressionStatement","src":"7063:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7117:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7128:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7113:3:13"},"nodeType":"YulFunctionCall","src":"7113:18:13"},{"name":"value3","nodeType":"YulIdentifier","src":"7133:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7106:6:13"},"nodeType":"YulFunctionCall","src":"7106:34:13"},"nodeType":"YulExpressionStatement","src":"7106:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7160:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7171:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7156:3:13"},"nodeType":"YulFunctionCall","src":"7156:19:13"},{"kind":"number","nodeType":"YulLiteral","src":"7177:3:13","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7149:6:13"},"nodeType":"YulFunctionCall","src":"7149:32:13"},"nodeType":"YulExpressionStatement","src":"7149:32:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7201:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7212:3:13","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7197:3:13"},"nodeType":"YulFunctionCall","src":"7197:19:13"},{"name":"value5","nodeType":"YulIdentifier","src":"7218:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7190:6:13"},"nodeType":"YulFunctionCall","src":"7190:35:13"},"nodeType":"YulExpressionStatement","src":"7190:35:13"},{"body":{"nodeType":"YulBlock","src":"7269:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7278:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7281:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7271:6:13"},"nodeType":"YulFunctionCall","src":"7271:12:13"},"nodeType":"YulExpressionStatement","src":"7271:12:13"}]},"condition":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"7240:6:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7256:3:13","type":"","value":"251"},{"kind":"number","nodeType":"YulLiteral","src":"7261:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7252:3:13"},"nodeType":"YulFunctionCall","src":"7252:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"7265:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7248:3:13"},"nodeType":"YulFunctionCall","src":"7248:19:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7237:2:13"},"nodeType":"YulFunctionCall","src":"7237:31:13"},"nodeType":"YulIf","src":"7234:51:13"},{"nodeType":"YulVariableDeclaration","src":"7294:28:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7312:1:13","type":"","value":"5"},{"name":"value5","nodeType":"YulIdentifier","src":"7315:6:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7308:3:13"},"nodeType":"YulFunctionCall","src":"7308:14:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7298:6:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7348:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7359:3:13","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7344:3:13"},"nodeType":"YulFunctionCall","src":"7344:19:13"},{"name":"value4","nodeType":"YulIdentifier","src":"7365:6:13"},{"name":"length","nodeType":"YulIdentifier","src":"7373:6:13"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7331:12:13"},"nodeType":"YulFunctionCall","src":"7331:49:13"},"nodeType":"YulExpressionStatement","src":"7331:49:13"},{"nodeType":"YulAssignment","src":"7389:40:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7405:9:13"},{"name":"length","nodeType":"YulIdentifier","src":"7416:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7401:3:13"},"nodeType":"YulFunctionCall","src":"7401:22:13"},{"kind":"number","nodeType":"YulLiteral","src":"7425:3:13","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7397:3:13"},"nodeType":"YulFunctionCall","src":"7397:32:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7389:4:13"}]}]},"name":"abi_encode_tuple_t_bytes32_t_address_payable_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_calldata_ptr__to_t_bytes32_t_address_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6879:9:13","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6890:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6898:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6906:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6914:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6922:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6930:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6941:4:13","type":""}],"src":"6669:766:13"},{"body":{"nodeType":"YulBlock","src":"7518:167:13","statements":[{"body":{"nodeType":"YulBlock","src":"7564:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7573:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7576:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7566:6:13"},"nodeType":"YulFunctionCall","src":"7566:12:13"},"nodeType":"YulExpressionStatement","src":"7566:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7539:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"7548:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7535:3:13"},"nodeType":"YulFunctionCall","src":"7535:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"7560:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7531:3:13"},"nodeType":"YulFunctionCall","src":"7531:32:13"},"nodeType":"YulIf","src":"7528:52:13"},{"nodeType":"YulVariableDeclaration","src":"7589:29:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7608:9:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7602:5:13"},"nodeType":"YulFunctionCall","src":"7602:16:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7593:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7649:5:13"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"7627:21:13"},"nodeType":"YulFunctionCall","src":"7627:28:13"},"nodeType":"YulExpressionStatement","src":"7627:28:13"},{"nodeType":"YulAssignment","src":"7664:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"7674:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7664:6:13"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7484:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7495:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7507:6:13","type":""}],"src":"7440:245:13"},{"body":{"nodeType":"YulBlock","src":"7864:179:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7881:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7892:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7874:6:13"},"nodeType":"YulFunctionCall","src":"7874:21:13"},"nodeType":"YulExpressionStatement","src":"7874:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7915:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7926:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7911:3:13"},"nodeType":"YulFunctionCall","src":"7911:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"7931:2:13","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7904:6:13"},"nodeType":"YulFunctionCall","src":"7904:30:13"},"nodeType":"YulExpressionStatement","src":"7904:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7954:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7965:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7950:3:13"},"nodeType":"YulFunctionCall","src":"7950:18:13"},{"hexValue":"496e76616c6964207769746864726177616c20636f6e646974696f6e73","kind":"string","nodeType":"YulLiteral","src":"7970:31:13","type":"","value":"Invalid withdrawal conditions"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7943:6:13"},"nodeType":"YulFunctionCall","src":"7943:59:13"},"nodeType":"YulExpressionStatement","src":"7943:59:13"},{"nodeType":"YulAssignment","src":"8011:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8023:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8034:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8019:3:13"},"nodeType":"YulFunctionCall","src":"8019:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8011:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_1bf4c4e730d5ee6cec86008d2bfd433f0c42d1b0ac13b55ae99ee97c360662b0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7841:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7855:4:13","type":""}],"src":"7690:353:13"},{"body":{"nodeType":"YulBlock","src":"8080:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8097:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8104:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8109:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8100:3:13"},"nodeType":"YulFunctionCall","src":"8100:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8090:6:13"},"nodeType":"YulFunctionCall","src":"8090:31:13"},"nodeType":"YulExpressionStatement","src":"8090:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8137:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8140:4:13","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8130:6:13"},"nodeType":"YulFunctionCall","src":"8130:15:13"},"nodeType":"YulExpressionStatement","src":"8130:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8161:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8164:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8154:6:13"},"nodeType":"YulFunctionCall","src":"8154:15:13"},"nodeType":"YulExpressionStatement","src":"8154:15:13"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8048:127:13"},{"body":{"nodeType":"YulBlock","src":"8229:79:13","statements":[{"nodeType":"YulAssignment","src":"8239:17:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8251:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"8254:1:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8247:3:13"},"nodeType":"YulFunctionCall","src":"8247:9:13"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"8239:4:13"}]},{"body":{"nodeType":"YulBlock","src":"8280:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8282:16:13"},"nodeType":"YulFunctionCall","src":"8282:18:13"},"nodeType":"YulExpressionStatement","src":"8282:18:13"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"8271:4:13"},{"name":"x","nodeType":"YulIdentifier","src":"8277:1:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8268:2:13"},"nodeType":"YulFunctionCall","src":"8268:11:13"},"nodeType":"YulIf","src":"8265:37:13"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8211:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"8214:1:13","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"8220:4:13","type":""}],"src":"8180:128:13"},{"body":{"nodeType":"YulBlock","src":"8442:119:13","statements":[{"nodeType":"YulAssignment","src":"8452:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8464:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8475:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8460:3:13"},"nodeType":"YulFunctionCall","src":"8460:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8452:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8494:9:13"},{"name":"value0","nodeType":"YulIdentifier","src":"8505:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8487:6:13"},"nodeType":"YulFunctionCall","src":"8487:25:13"},"nodeType":"YulExpressionStatement","src":"8487:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8532:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8543:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8528:3:13"},"nodeType":"YulFunctionCall","src":"8528:18:13"},{"name":"value1","nodeType":"YulIdentifier","src":"8548:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8521:6:13"},"nodeType":"YulFunctionCall","src":"8521:34:13"},"nodeType":"YulExpressionStatement","src":"8521:34:13"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8403:9:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8414:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8422:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8433:4:13","type":""}],"src":"8313:248:13"},{"body":{"nodeType":"YulBlock","src":"8757:14:13","statements":[{"nodeType":"YulAssignment","src":"8759:10:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"8766:3:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8759:3:13"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8741:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8749:3:13","type":""}],"src":"8566:205:13"},{"body":{"nodeType":"YulBlock","src":"8950:165:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8967:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8978:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8960:6:13"},"nodeType":"YulFunctionCall","src":"8960:21:13"},"nodeType":"YulExpressionStatement","src":"8960:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9001:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9012:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8997:3:13"},"nodeType":"YulFunctionCall","src":"8997:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"9017:2:13","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8990:6:13"},"nodeType":"YulFunctionCall","src":"8990:30:13"},"nodeType":"YulExpressionStatement","src":"8990:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9040:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9051:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9036:3:13"},"nodeType":"YulFunctionCall","src":"9036:18:13"},{"hexValue":"5472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"9056:17:13","type":"","value":"Transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9029:6:13"},"nodeType":"YulFunctionCall","src":"9029:45:13"},"nodeType":"YulExpressionStatement","src":"9029:45:13"},{"nodeType":"YulAssignment","src":"9083:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9095:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9106:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9091:3:13"},"nodeType":"YulFunctionCall","src":"9091:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9083:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8927:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8941:4:13","type":""}],"src":"8776:339:13"},{"body":{"nodeType":"YulBlock","src":"9294:237:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9311:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9322:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9304:6:13"},"nodeType":"YulFunctionCall","src":"9304:21:13"},"nodeType":"YulExpressionStatement","src":"9304:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9345:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9356:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9341:3:13"},"nodeType":"YulFunctionCall","src":"9341:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"9361:2:13","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9334:6:13"},"nodeType":"YulFunctionCall","src":"9334:30:13"},"nodeType":"YulExpressionStatement","src":"9334:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9384:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9395:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9380:3:13"},"nodeType":"YulFunctionCall","src":"9380:18:13"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"9400:34:13","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9373:6:13"},"nodeType":"YulFunctionCall","src":"9373:62:13"},"nodeType":"YulExpressionStatement","src":"9373:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9455:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9466:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9451:3:13"},"nodeType":"YulFunctionCall","src":"9451:18:13"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"9471:17:13","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9444:6:13"},"nodeType":"YulFunctionCall","src":"9444:45:13"},"nodeType":"YulExpressionStatement","src":"9444:45:13"},{"nodeType":"YulAssignment","src":"9498:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9510:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9521:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9506:3:13"},"nodeType":"YulFunctionCall","src":"9506:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9498:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9271:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9285:4:13","type":""}],"src":"9120:411:13"},{"body":{"nodeType":"YulBlock","src":"9710:179:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9727:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9738:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9720:6:13"},"nodeType":"YulFunctionCall","src":"9720:21:13"},"nodeType":"YulExpressionStatement","src":"9720:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9761:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9772:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9757:3:13"},"nodeType":"YulFunctionCall","src":"9757:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"9777:2:13","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9750:6:13"},"nodeType":"YulFunctionCall","src":"9750:30:13"},"nodeType":"YulExpressionStatement","src":"9750:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9800:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9811:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9796:3:13"},"nodeType":"YulFunctionCall","src":"9796:18:13"},{"hexValue":"466565206d7573742062652067726561746572207468616e207a65726f","kind":"string","nodeType":"YulLiteral","src":"9816:31:13","type":"","value":"Fee must be greater than zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9789:6:13"},"nodeType":"YulFunctionCall","src":"9789:59:13"},"nodeType":"YulExpressionStatement","src":"9789:59:13"},{"nodeType":"YulAssignment","src":"9857:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9869:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9880:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9865:3:13"},"nodeType":"YulFunctionCall","src":"9865:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9857:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_daf265deba315b0f69699516857cd04e6131e8f2cb52a70455d08357d6058605__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9687:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9701:4:13","type":""}],"src":"9536:353:13"},{"body":{"nodeType":"YulBlock","src":"10068:181:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10085:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10096:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10078:6:13"},"nodeType":"YulFunctionCall","src":"10078:21:13"},"nodeType":"YulExpressionStatement","src":"10078:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10119:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10130:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10115:3:13"},"nodeType":"YulFunctionCall","src":"10115:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"10135:2:13","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10108:6:13"},"nodeType":"YulFunctionCall","src":"10108:30:13"},"nodeType":"YulExpressionStatement","src":"10108:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10158:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10169:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10154:3:13"},"nodeType":"YulFunctionCall","src":"10154:18:13"},{"hexValue":"4665652063616e6e6f7420657863656564206d6178696d756d202831302529","kind":"string","nodeType":"YulLiteral","src":"10174:33:13","type":"","value":"Fee cannot exceed maximum (10%)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10147:6:13"},"nodeType":"YulFunctionCall","src":"10147:61:13"},"nodeType":"YulExpressionStatement","src":"10147:61:13"},{"nodeType":"YulAssignment","src":"10217:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10229:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10240:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10225:3:13"},"nodeType":"YulFunctionCall","src":"10225:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10217:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_31fb24c45e8e227fef562a8d72702323ba8cefa50ca38edc5e93f5cd45b26b93__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10045:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10059:4:13","type":""}],"src":"9894:355:13"},{"body":{"nodeType":"YulBlock","src":"10428:179:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10445:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10456:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10438:6:13"},"nodeType":"YulFunctionCall","src":"10438:21:13"},"nodeType":"YulExpressionStatement","src":"10438:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10479:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10490:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10475:3:13"},"nodeType":"YulFunctionCall","src":"10475:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"10495:2:13","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10468:6:13"},"nodeType":"YulFunctionCall","src":"10468:30:13"},"nodeType":"YulExpressionStatement","src":"10468:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10518:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10529:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10514:3:13"},"nodeType":"YulFunctionCall","src":"10514:18:13"},{"hexValue":"517565727920666f72206e6f6e6578697374656e74206465706f736974","kind":"string","nodeType":"YulLiteral","src":"10534:31:13","type":"","value":"Query for nonexistent deposit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10507:6:13"},"nodeType":"YulFunctionCall","src":"10507:59:13"},"nodeType":"YulExpressionStatement","src":"10507:59:13"},{"nodeType":"YulAssignment","src":"10575:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10587:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10598:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10583:3:13"},"nodeType":"YulFunctionCall","src":"10583:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10575:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_cacadcc73db8e6395c114dc30f0bb9c982ee87d348a2924baa79be69e3bb4687__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10405:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10419:4:13","type":""}],"src":"10254:353:13"},{"body":{"nodeType":"YulBlock","src":"10693:103:13","statements":[{"body":{"nodeType":"YulBlock","src":"10739:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10748:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10751:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10741:6:13"},"nodeType":"YulFunctionCall","src":"10741:12:13"},"nodeType":"YulExpressionStatement","src":"10741:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10714:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"10723:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10710:3:13"},"nodeType":"YulFunctionCall","src":"10710:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"10735:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10706:3:13"},"nodeType":"YulFunctionCall","src":"10706:32:13"},"nodeType":"YulIf","src":"10703:52:13"},{"nodeType":"YulAssignment","src":"10764:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10780:9:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10774:5:13"},"nodeType":"YulFunctionCall","src":"10774:16:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10764:6:13"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10659:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10670:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10682:6:13","type":""}],"src":"10612:184:13"},{"body":{"nodeType":"YulBlock","src":"10975:158:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10992:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11003:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10985:6:13"},"nodeType":"YulFunctionCall","src":"10985:21:13"},"nodeType":"YulExpressionStatement","src":"10985:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11026:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11037:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11022:3:13"},"nodeType":"YulFunctionCall","src":"11022:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"11042:1:13","type":"","value":"9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11015:6:13"},"nodeType":"YulFunctionCall","src":"11015:29:13"},"nodeType":"YulExpressionStatement","src":"11015:29:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11064:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11075:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11060:3:13"},"nodeType":"YulFunctionCall","src":"11060:18:13"},{"hexValue":"4e6f20746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"11080:11:13","type":"","value":"No tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11053:6:13"},"nodeType":"YulFunctionCall","src":"11053:39:13"},"nodeType":"YulExpressionStatement","src":"11053:39:13"},{"nodeType":"YulAssignment","src":"11101:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11113:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11124:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11109:3:13"},"nodeType":"YulFunctionCall","src":"11109:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11101:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10952:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10966:4:13","type":""}],"src":"10801:332:13"},{"body":{"nodeType":"YulBlock","src":"11267:145:13","statements":[{"nodeType":"YulAssignment","src":"11277:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11289:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11300:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11285:3:13"},"nodeType":"YulFunctionCall","src":"11285:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11277:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11319:9:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11334:6:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11350:3:13","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11355:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11346:3:13"},"nodeType":"YulFunctionCall","src":"11346:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"11359:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11342:3:13"},"nodeType":"YulFunctionCall","src":"11342:19:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11330:3:13"},"nodeType":"YulFunctionCall","src":"11330:32:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11312:6:13"},"nodeType":"YulFunctionCall","src":"11312:51:13"},"nodeType":"YulExpressionStatement","src":"11312:51:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11383:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11394:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11379:3:13"},"nodeType":"YulFunctionCall","src":"11379:18:13"},{"name":"value1","nodeType":"YulIdentifier","src":"11399:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11372:6:13"},"nodeType":"YulFunctionCall","src":"11372:34:13"},"nodeType":"YulExpressionStatement","src":"11372:34:13"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11228:9:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11239:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11247:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11258:4:13","type":""}],"src":"11138:274:13"},{"body":{"nodeType":"YulBlock","src":"11591:167:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11608:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11619:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11601:6:13"},"nodeType":"YulFunctionCall","src":"11601:21:13"},"nodeType":"YulExpressionStatement","src":"11601:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11642:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11653:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11638:3:13"},"nodeType":"YulFunctionCall","src":"11638:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"11658:2:13","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11631:6:13"},"nodeType":"YulFunctionCall","src":"11631:30:13"},"nodeType":"YulExpressionStatement","src":"11631:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11681:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11692:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11677:3:13"},"nodeType":"YulFunctionCall","src":"11677:18:13"},{"hexValue":"4465706f736974206e6f7420666f756e64","kind":"string","nodeType":"YulLiteral","src":"11697:19:13","type":"","value":"Deposit not found"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11670:6:13"},"nodeType":"YulFunctionCall","src":"11670:47:13"},"nodeType":"YulExpressionStatement","src":"11670:47:13"},{"nodeType":"YulAssignment","src":"11726:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11738:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11749:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11734:3:13"},"nodeType":"YulFunctionCall","src":"11734:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11726:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_18ba671663cc149608333373fe3daaddc64eb144864b7962cfeb52050b5de2ce__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11568:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11582:4:13","type":""}],"src":"11417:341:13"},{"body":{"nodeType":"YulBlock","src":"11900:119:13","statements":[{"nodeType":"YulAssignment","src":"11910:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11922:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11933:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11918:3:13"},"nodeType":"YulFunctionCall","src":"11918:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11910:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11952:9:13"},{"name":"value0","nodeType":"YulIdentifier","src":"11963:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11945:6:13"},"nodeType":"YulFunctionCall","src":"11945:25:13"},"nodeType":"YulExpressionStatement","src":"11945:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11990:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12001:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11986:3:13"},"nodeType":"YulFunctionCall","src":"11986:18:13"},{"name":"value1","nodeType":"YulIdentifier","src":"12006:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11979:6:13"},"nodeType":"YulFunctionCall","src":"11979:34:13"},"nodeType":"YulExpressionStatement","src":"11979:34:13"}]},"name":"abi_encode_tuple_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11861:9:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11872:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11880:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11891:4:13","type":""}],"src":"11763:256:13"},{"body":{"nodeType":"YulBlock","src":"12198:230:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12215:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12226:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12208:6:13"},"nodeType":"YulFunctionCall","src":"12208:21:13"},"nodeType":"YulExpressionStatement","src":"12208:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12249:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12260:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12245:3:13"},"nodeType":"YulFunctionCall","src":"12245:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"12265:2:13","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12238:6:13"},"nodeType":"YulFunctionCall","src":"12238:30:13"},"nodeType":"YulExpressionStatement","src":"12238:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12288:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12299:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12284:3:13"},"nodeType":"YulFunctionCall","src":"12284:18:13"},{"hexValue":"4465706f73697420616d6f756e74206d75737420626520677265617465722074","kind":"string","nodeType":"YulLiteral","src":"12304:34:13","type":"","value":"Deposit amount must be greater t"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12277:6:13"},"nodeType":"YulFunctionCall","src":"12277:62:13"},"nodeType":"YulExpressionStatement","src":"12277:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12359:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12370:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12355:3:13"},"nodeType":"YulFunctionCall","src":"12355:18:13"},{"hexValue":"68616e207a65726f","kind":"string","nodeType":"YulLiteral","src":"12375:10:13","type":"","value":"han zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12348:6:13"},"nodeType":"YulFunctionCall","src":"12348:38:13"},"nodeType":"YulExpressionStatement","src":"12348:38:13"},{"nodeType":"YulAssignment","src":"12395:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12407:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12418:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12403:3:13"},"nodeType":"YulFunctionCall","src":"12403:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12395:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12175:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12189:4:13","type":""}],"src":"12024:404:13"},{"body":{"nodeType":"YulBlock","src":"12607:169:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12624:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12635:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12617:6:13"},"nodeType":"YulFunctionCall","src":"12617:21:13"},"nodeType":"YulExpressionStatement","src":"12617:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12658:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12669:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12654:3:13"},"nodeType":"YulFunctionCall","src":"12654:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"12674:2:13","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12647:6:13"},"nodeType":"YulFunctionCall","src":"12647:30:13"},"nodeType":"YulExpressionStatement","src":"12647:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12697:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12708:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12693:3:13"},"nodeType":"YulFunctionCall","src":"12693:18:13"},{"hexValue":"496e76616c6964204d65726b6c6520726f6f74","kind":"string","nodeType":"YulLiteral","src":"12713:21:13","type":"","value":"Invalid Merkle root"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12686:6:13"},"nodeType":"YulFunctionCall","src":"12686:49:13"},"nodeType":"YulExpressionStatement","src":"12686:49:13"},{"nodeType":"YulAssignment","src":"12744:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12756:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12767:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12752:3:13"},"nodeType":"YulFunctionCall","src":"12752:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12744:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_24ad9e456a2ce0106486031801792ed30a6c347256d2d81e2b2aae7dcd707129__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12584:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12598:4:13","type":""}],"src":"12433:343:13"},{"body":{"nodeType":"YulBlock","src":"12955:175:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12972:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12983:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12965:6:13"},"nodeType":"YulFunctionCall","src":"12965:21:13"},"nodeType":"YulExpressionStatement","src":"12965:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13006:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13017:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13002:3:13"},"nodeType":"YulFunctionCall","src":"13002:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"13022:2:13","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12995:6:13"},"nodeType":"YulFunctionCall","src":"12995:30:13"},"nodeType":"YulExpressionStatement","src":"12995:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13045:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13056:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13041:3:13"},"nodeType":"YulFunctionCall","src":"13041:18:13"},{"hexValue":"4465706f73697420494420616c726561647920657869737473","kind":"string","nodeType":"YulLiteral","src":"13061:27:13","type":"","value":"Deposit ID already exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13034:6:13"},"nodeType":"YulFunctionCall","src":"13034:55:13"},"nodeType":"YulExpressionStatement","src":"13034:55:13"},{"nodeType":"YulAssignment","src":"13098:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13110:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13121:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13106:3:13"},"nodeType":"YulFunctionCall","src":"13106:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13098:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_004c0fa1591e755bd6bc2a320c434e2cacca3ce858e00934e976ba0265b4cd87__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12932:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12946:4:13","type":""}],"src":"12781:349:13"},{"body":{"nodeType":"YulBlock","src":"13187:116:13","statements":[{"nodeType":"YulAssignment","src":"13197:20:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13212:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"13215:1:13"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13208:3:13"},"nodeType":"YulFunctionCall","src":"13208:9:13"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"13197:7:13"}]},{"body":{"nodeType":"YulBlock","src":"13275:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13277:16:13"},"nodeType":"YulFunctionCall","src":"13277:18:13"},"nodeType":"YulExpressionStatement","src":"13277:18:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13246:1:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13239:6:13"},"nodeType":"YulFunctionCall","src":"13239:9:13"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13253:1:13"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"13260:7:13"},{"name":"x","nodeType":"YulIdentifier","src":"13269:1:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"13256:3:13"},"nodeType":"YulFunctionCall","src":"13256:15:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13250:2:13"},"nodeType":"YulFunctionCall","src":"13250:22:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"13236:2:13"},"nodeType":"YulFunctionCall","src":"13236:37:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13229:6:13"},"nodeType":"YulFunctionCall","src":"13229:45:13"},"nodeType":"YulIf","src":"13226:71:13"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13166:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"13169:1:13","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"13175:7:13","type":""}],"src":"13135:168:13"},{"body":{"nodeType":"YulBlock","src":"13354:171:13","statements":[{"body":{"nodeType":"YulBlock","src":"13385:111:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13406:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13413:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"13418:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13409:3:13"},"nodeType":"YulFunctionCall","src":"13409:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13399:6:13"},"nodeType":"YulFunctionCall","src":"13399:31:13"},"nodeType":"YulExpressionStatement","src":"13399:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13450:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13453:4:13","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13443:6:13"},"nodeType":"YulFunctionCall","src":"13443:15:13"},"nodeType":"YulExpressionStatement","src":"13443:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13478:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13481:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13471:6:13"},"nodeType":"YulFunctionCall","src":"13471:15:13"},"nodeType":"YulExpressionStatement","src":"13471:15:13"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13374:1:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13367:6:13"},"nodeType":"YulFunctionCall","src":"13367:9:13"},"nodeType":"YulIf","src":"13364:132:13"},{"nodeType":"YulAssignment","src":"13505:14:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13514:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"13517:1:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"13510:3:13"},"nodeType":"YulFunctionCall","src":"13510:9:13"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"13505:1:13"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13339:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"13342:1:13","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"13348:1:13","type":""}],"src":"13308:217:13"},{"body":{"nodeType":"YulBlock","src":"13704:169:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13721:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13732:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13714:6:13"},"nodeType":"YulFunctionCall","src":"13714:21:13"},"nodeType":"YulExpressionStatement","src":"13714:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13755:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13766:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13751:3:13"},"nodeType":"YulFunctionCall","src":"13751:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"13771:2:13","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13744:6:13"},"nodeType":"YulFunctionCall","src":"13744:30:13"},"nodeType":"YulExpressionStatement","src":"13744:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13794:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13805:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13790:3:13"},"nodeType":"YulFunctionCall","src":"13790:18:13"},{"hexValue":"466565207472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"13810:21:13","type":"","value":"Fee transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13783:6:13"},"nodeType":"YulFunctionCall","src":"13783:49:13"},"nodeType":"YulExpressionStatement","src":"13783:49:13"},{"nodeType":"YulAssignment","src":"13841:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13853:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13864:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13849:3:13"},"nodeType":"YulFunctionCall","src":"13849:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13841:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13681:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13695:4:13","type":""}],"src":"13530:343:13"},{"body":{"nodeType":"YulBlock","src":"14052:169:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14069:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14080:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14062:6:13"},"nodeType":"YulFunctionCall","src":"14062:21:13"},"nodeType":"YulExpressionStatement","src":"14062:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14103:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14114:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14099:3:13"},"nodeType":"YulFunctionCall","src":"14099:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"14119:2:13","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14092:6:13"},"nodeType":"YulFunctionCall","src":"14092:30:13"},"nodeType":"YulExpressionStatement","src":"14092:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14142:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14153:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14138:3:13"},"nodeType":"YulFunctionCall","src":"14138:18:13"},{"hexValue":"496e646578206f7574206f6620626f756e6473","kind":"string","nodeType":"YulLiteral","src":"14158:21:13","type":"","value":"Index out of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14131:6:13"},"nodeType":"YulFunctionCall","src":"14131:49:13"},"nodeType":"YulExpressionStatement","src":"14131:49:13"},{"nodeType":"YulAssignment","src":"14189:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14201:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14212:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14197:3:13"},"nodeType":"YulFunctionCall","src":"14197:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14189:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14029:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14043:4:13","type":""}],"src":"13878:343:13"},{"body":{"nodeType":"YulBlock","src":"14401:176:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14418:3:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14431:2:13","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"14435:6:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14427:3:13"},"nodeType":"YulFunctionCall","src":"14427:15:13"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14456:2:13","type":"","value":"96"},{"kind":"number","nodeType":"YulLiteral","src":"14460:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14452:3:13"},"nodeType":"YulFunctionCall","src":"14452:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"14464:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14448:3:13"},"nodeType":"YulFunctionCall","src":"14448:18:13"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14444:3:13"},"nodeType":"YulFunctionCall","src":"14444:23:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14423:3:13"},"nodeType":"YulFunctionCall","src":"14423:45:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14411:6:13"},"nodeType":"YulFunctionCall","src":"14411:58:13"},"nodeType":"YulExpressionStatement","src":"14411:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14489:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"14494:2:13","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14485:3:13"},"nodeType":"YulFunctionCall","src":"14485:12:13"},{"name":"value1","nodeType":"YulIdentifier","src":"14499:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14478:6:13"},"nodeType":"YulFunctionCall","src":"14478:28:13"},"nodeType":"YulExpressionStatement","src":"14478:28:13"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14526:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"14531:2:13","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14522:3:13"},"nodeType":"YulFunctionCall","src":"14522:12:13"},{"name":"value2","nodeType":"YulIdentifier","src":"14536:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14515:6:13"},"nodeType":"YulFunctionCall","src":"14515:28:13"},"nodeType":"YulExpressionStatement","src":"14515:28:13"},{"nodeType":"YulAssignment","src":"14552:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14563:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"14568:2:13","type":"","value":"84"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14559:3:13"},"nodeType":"YulFunctionCall","src":"14559:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14552:3:13"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14361:3:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14366:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14374:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14382:6:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14393:3:13","type":""}],"src":"14226:351:13"},{"body":{"nodeType":"YulBlock","src":"14756:170:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14773:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14784:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14766:6:13"},"nodeType":"YulFunctionCall","src":"14766:21:13"},"nodeType":"YulExpressionStatement","src":"14766:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14807:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14818:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14803:3:13"},"nodeType":"YulFunctionCall","src":"14803:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"14823:2:13","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14796:6:13"},"nodeType":"YulFunctionCall","src":"14796:30:13"},"nodeType":"YulExpressionStatement","src":"14796:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14846:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14857:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14842:3:13"},"nodeType":"YulFunctionCall","src":"14842:18:13"},{"hexValue":"496e76616c6964206d65726b6c652070726f6f66","kind":"string","nodeType":"YulLiteral","src":"14862:22:13","type":"","value":"Invalid merkle proof"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14835:6:13"},"nodeType":"YulFunctionCall","src":"14835:50:13"},"nodeType":"YulExpressionStatement","src":"14835:50:13"},{"nodeType":"YulAssignment","src":"14894:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14906:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14917:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14902:3:13"},"nodeType":"YulFunctionCall","src":"14902:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14894:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_9e0b6a3c3c2892dcc46975fd4747d409a6200f0f6763c4000ee1783c7e6b5410__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14733:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14747:4:13","type":""}],"src":"14582:344:13"},{"body":{"nodeType":"YulBlock","src":"15105:167:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15122:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15133:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15115:6:13"},"nodeType":"YulFunctionCall","src":"15115:21:13"},"nodeType":"YulExpressionStatement","src":"15115:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15156:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15167:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15152:3:13"},"nodeType":"YulFunctionCall","src":"15152:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"15172:2:13","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15145:6:13"},"nodeType":"YulFunctionCall","src":"15145:30:13"},"nodeType":"YulExpressionStatement","src":"15145:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15195:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15206:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15191:3:13"},"nodeType":"YulFunctionCall","src":"15191:18:13"},{"hexValue":"416c72656164792077697468647261776e","kind":"string","nodeType":"YulLiteral","src":"15211:19:13","type":"","value":"Already withdrawn"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15184:6:13"},"nodeType":"YulFunctionCall","src":"15184:47:13"},"nodeType":"YulExpressionStatement","src":"15184:47:13"},{"nodeType":"YulAssignment","src":"15240:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15252:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15263:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15248:3:13"},"nodeType":"YulFunctionCall","src":"15248:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15240:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_6b293b0896b22dc3a03a4f229b72f78da937962c6081a958fe0adeeb67107219__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15082:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15096:4:13","type":""}],"src":"14931:341:13"},{"body":{"nodeType":"YulBlock","src":"15451:174:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15468:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15479:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15461:6:13"},"nodeType":"YulFunctionCall","src":"15461:21:13"},"nodeType":"YulExpressionStatement","src":"15461:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15502:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15513:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15498:3:13"},"nodeType":"YulFunctionCall","src":"15498:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"15518:2:13","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15491:6:13"},"nodeType":"YulFunctionCall","src":"15491:30:13"},"nodeType":"YulExpressionStatement","src":"15491:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15541:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15552:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15537:3:13"},"nodeType":"YulFunctionCall","src":"15537:18:13"},{"hexValue":"52656c656173652074696d65206e6f742072656163686564","kind":"string","nodeType":"YulLiteral","src":"15557:26:13","type":"","value":"Release time not reached"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15530:6:13"},"nodeType":"YulFunctionCall","src":"15530:54:13"},"nodeType":"YulExpressionStatement","src":"15530:54:13"},{"nodeType":"YulAssignment","src":"15593:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15605:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15616:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15601:3:13"},"nodeType":"YulFunctionCall","src":"15601:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15593:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_98697925fb039aaca86dc4adabe52515e4418e1e556d3a371cdce8ced9b902f6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15428:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15442:4:13","type":""}],"src":"15277:348:13"},{"body":{"nodeType":"YulBlock","src":"15804:177:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15821:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15832:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15814:6:13"},"nodeType":"YulFunctionCall","src":"15814:21:13"},"nodeType":"YulExpressionStatement","src":"15814:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15855:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15866:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15851:3:13"},"nodeType":"YulFunctionCall","src":"15851:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"15871:2:13","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15844:6:13"},"nodeType":"YulFunctionCall","src":"15844:30:13"},"nodeType":"YulExpressionStatement","src":"15844:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15894:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15905:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15890:3:13"},"nodeType":"YulFunctionCall","src":"15890:18:13"},{"hexValue":"496e73756666696369656e74206465706f73697420616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"15910:29:13","type":"","value":"Insufficient deposit amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15883:6:13"},"nodeType":"YulFunctionCall","src":"15883:57:13"},"nodeType":"YulExpressionStatement","src":"15883:57:13"},{"nodeType":"YulAssignment","src":"15949:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15961:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15972:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15957:3:13"},"nodeType":"YulFunctionCall","src":"15957:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15949:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_4ea48790db13e4ee9ddfd7285660e5d12af98045629460d48a74e53124125a3d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15781:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15795:4:13","type":""}],"src":"15630:351:13"},{"body":{"nodeType":"YulBlock","src":"16160:155:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16177:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16188:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16170:6:13"},"nodeType":"YulFunctionCall","src":"16170:21:13"},"nodeType":"YulExpressionStatement","src":"16170:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16211:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16222:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16207:3:13"},"nodeType":"YulFunctionCall","src":"16207:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"16227:1:13","type":"","value":"6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16200:6:13"},"nodeType":"YulFunctionCall","src":"16200:29:13"},"nodeType":"YulExpressionStatement","src":"16200:29:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16249:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16260:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16245:3:13"},"nodeType":"YulFunctionCall","src":"16245:18:13"},{"hexValue":"4e6f20455448","kind":"string","nodeType":"YulLiteral","src":"16265:8:13","type":"","value":"No ETH"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16238:6:13"},"nodeType":"YulFunctionCall","src":"16238:36:13"},"nodeType":"YulExpressionStatement","src":"16238:36:13"},{"nodeType":"YulAssignment","src":"16283:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16295:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16306:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16291:3:13"},"nodeType":"YulFunctionCall","src":"16291:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16283:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_1ae725630e89b25bfdaf595445b8423bd80e9df92ceecb6d061610f2a2e3182c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16137:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16151:4:13","type":""}],"src":"15986:329:13"},{"body":{"nodeType":"YulBlock","src":"16494:172:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16511:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16522:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16504:6:13"},"nodeType":"YulFunctionCall","src":"16504:21:13"},"nodeType":"YulExpressionStatement","src":"16504:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16545:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16556:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16541:3:13"},"nodeType":"YulFunctionCall","src":"16541:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"16561:2:13","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16534:6:13"},"nodeType":"YulFunctionCall","src":"16534:30:13"},"nodeType":"YulExpressionStatement","src":"16534:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16584:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16595:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16580:3:13"},"nodeType":"YulFunctionCall","src":"16580:18:13"},{"hexValue":"416d6f756e7420657863656564732062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"16600:24:13","type":"","value":"Amount exceeds balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16573:6:13"},"nodeType":"YulFunctionCall","src":"16573:52:13"},"nodeType":"YulExpressionStatement","src":"16573:52:13"},{"nodeType":"YulAssignment","src":"16634:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16646:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16657:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16642:3:13"},"nodeType":"YulFunctionCall","src":"16642:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16634:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_0039e6735521f7b0196953e89f27cc371edc6bb5fb4f18631ddb74873dea7271__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16471:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16485:4:13","type":""}],"src":"16320:346:13"},{"body":{"nodeType":"YulBlock","src":"16845:171:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16862:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16873:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16855:6:13"},"nodeType":"YulFunctionCall","src":"16855:21:13"},"nodeType":"YulExpressionStatement","src":"16855:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16896:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16907:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16892:3:13"},"nodeType":"YulFunctionCall","src":"16892:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"16912:2:13","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16885:6:13"},"nodeType":"YulFunctionCall","src":"16885:30:13"},"nodeType":"YulExpressionStatement","src":"16885:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16935:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16946:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16931:3:13"},"nodeType":"YulFunctionCall","src":"16931:18:13"},{"hexValue":"496e76616c69642066656520726563697069656e74","kind":"string","nodeType":"YulLiteral","src":"16951:23:13","type":"","value":"Invalid fee recipient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16924:6:13"},"nodeType":"YulFunctionCall","src":"16924:51:13"},"nodeType":"YulExpressionStatement","src":"16924:51:13"},{"nodeType":"YulAssignment","src":"16984:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16996:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17007:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16992:3:13"},"nodeType":"YulFunctionCall","src":"16992:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16984:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16822:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16836:4:13","type":""}],"src":"16671:345:13"},{"body":{"nodeType":"YulBlock","src":"17195:181:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17212:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17223:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17205:6:13"},"nodeType":"YulFunctionCall","src":"17205:21:13"},"nodeType":"YulExpressionStatement","src":"17205:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17246:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17257:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17242:3:13"},"nodeType":"YulFunctionCall","src":"17242:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"17262:2:13","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17235:6:13"},"nodeType":"YulFunctionCall","src":"17235:30:13"},"nodeType":"YulExpressionStatement","src":"17235:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17285:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17296:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17281:3:13"},"nodeType":"YulFunctionCall","src":"17281:18:13"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"17301:33:13","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17274:6:13"},"nodeType":"YulFunctionCall","src":"17274:61:13"},"nodeType":"YulExpressionStatement","src":"17274:61:13"},{"nodeType":"YulAssignment","src":"17344:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17356:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17367:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17352:3:13"},"nodeType":"YulFunctionCall","src":"17352:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17344:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17172:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17186:4:13","type":""}],"src":"17021:355:13"},{"body":{"nodeType":"YulBlock","src":"17447:184:13","statements":[{"nodeType":"YulVariableDeclaration","src":"17457:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"17466:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17461:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"17526:63:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17551:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"17556:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17547:3:13"},"nodeType":"YulFunctionCall","src":"17547:11:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17570:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"17575:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17566:3:13"},"nodeType":"YulFunctionCall","src":"17566:11:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17560:5:13"},"nodeType":"YulFunctionCall","src":"17560:18:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17540:6:13"},"nodeType":"YulFunctionCall","src":"17540:39:13"},"nodeType":"YulExpressionStatement","src":"17540:39:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17487:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"17490:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17484:2:13"},"nodeType":"YulFunctionCall","src":"17484:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17498:19:13","statements":[{"nodeType":"YulAssignment","src":"17500:15:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17509:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"17512:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17505:3:13"},"nodeType":"YulFunctionCall","src":"17505:10:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17500:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"17480:3:13","statements":[]},"src":"17476:113:13"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17609:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"17614:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17605:3:13"},"nodeType":"YulFunctionCall","src":"17605:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"17623:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17598:6:13"},"nodeType":"YulFunctionCall","src":"17598:27:13"},"nodeType":"YulExpressionStatement","src":"17598:27:13"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17425:3:13","type":""},{"name":"dst","nodeType":"YulTypedName","src":"17430:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"17435:6:13","type":""}],"src":"17381:250:13"},{"body":{"nodeType":"YulBlock","src":"18025:423:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18042:3:13"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"18047:25:13","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18035:6:13"},"nodeType":"YulFunctionCall","src":"18035:38:13"},"nodeType":"YulExpressionStatement","src":"18035:38:13"},{"nodeType":"YulVariableDeclaration","src":"18082:27:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18102:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18096:5:13"},"nodeType":"YulFunctionCall","src":"18096:13:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18086:6:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18157:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"18165:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18153:3:13"},"nodeType":"YulFunctionCall","src":"18153:17:13"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18176:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"18181:2:13","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18172:3:13"},"nodeType":"YulFunctionCall","src":"18172:12:13"},{"name":"length","nodeType":"YulIdentifier","src":"18186:6:13"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"18118:34:13"},"nodeType":"YulFunctionCall","src":"18118:75:13"},"nodeType":"YulExpressionStatement","src":"18118:75:13"},{"nodeType":"YulVariableDeclaration","src":"18202:26:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18216:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"18221:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18212:3:13"},"nodeType":"YulFunctionCall","src":"18212:16:13"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18206:2:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"18248:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"18252:2:13","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18244:3:13"},"nodeType":"YulFunctionCall","src":"18244:11:13"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"18257:19:13","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18237:6:13"},"nodeType":"YulFunctionCall","src":"18237:40:13"},"nodeType":"YulExpressionStatement","src":"18237:40:13"},{"nodeType":"YulVariableDeclaration","src":"18286:29:13","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18308:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18302:5:13"},"nodeType":"YulFunctionCall","src":"18302:13:13"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"18290:8:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18363:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"18371:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18359:3:13"},"nodeType":"YulFunctionCall","src":"18359:17:13"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"18382:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"18386:2:13","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18378:3:13"},"nodeType":"YulFunctionCall","src":"18378:11:13"},{"name":"length_1","nodeType":"YulIdentifier","src":"18391:8:13"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"18324:34:13"},"nodeType":"YulFunctionCall","src":"18324:76:13"},"nodeType":"YulExpressionStatement","src":"18324:76:13"},{"nodeType":"YulAssignment","src":"18409:33:13","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"18424:2:13"},{"name":"length_1","nodeType":"YulIdentifier","src":"18428:8:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18420:3:13"},"nodeType":"YulFunctionCall","src":"18420:17:13"},{"kind":"number","nodeType":"YulLiteral","src":"18439:2:13","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18416:3:13"},"nodeType":"YulFunctionCall","src":"18416:26:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18409:3:13"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17993:3:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17998:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18006:6:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18017:3:13","type":""}],"src":"17636:812:13"},{"body":{"nodeType":"YulBlock","src":"18574:275:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18591:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18602:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18584:6:13"},"nodeType":"YulFunctionCall","src":"18584:21:13"},"nodeType":"YulExpressionStatement","src":"18584:21:13"},{"nodeType":"YulVariableDeclaration","src":"18614:27:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18634:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18628:5:13"},"nodeType":"YulFunctionCall","src":"18628:13:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18618:6:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18661:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18672:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18657:3:13"},"nodeType":"YulFunctionCall","src":"18657:18:13"},{"name":"length","nodeType":"YulIdentifier","src":"18677:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18650:6:13"},"nodeType":"YulFunctionCall","src":"18650:34:13"},"nodeType":"YulExpressionStatement","src":"18650:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18732:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"18740:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18728:3:13"},"nodeType":"YulFunctionCall","src":"18728:15:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18749:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18760:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18745:3:13"},"nodeType":"YulFunctionCall","src":"18745:18:13"},{"name":"length","nodeType":"YulIdentifier","src":"18765:6:13"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"18693:34:13"},"nodeType":"YulFunctionCall","src":"18693:79:13"},"nodeType":"YulExpressionStatement","src":"18693:79:13"},{"nodeType":"YulAssignment","src":"18781:62:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18797:9:13"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18816:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"18824:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18812:3:13"},"nodeType":"YulFunctionCall","src":"18812:15:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18833:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18829:3:13"},"nodeType":"YulFunctionCall","src":"18829:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18808:3:13"},"nodeType":"YulFunctionCall","src":"18808:29:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18793:3:13"},"nodeType":"YulFunctionCall","src":"18793:45:13"},{"kind":"number","nodeType":"YulLiteral","src":"18840:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18789:3:13"},"nodeType":"YulFunctionCall","src":"18789:54:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18781:4:13"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18543:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18554:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18565:4:13","type":""}],"src":"18453:396:13"},{"body":{"nodeType":"YulBlock","src":"18886:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18903:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18910:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"18915:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18906:3:13"},"nodeType":"YulFunctionCall","src":"18906:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18896:6:13"},"nodeType":"YulFunctionCall","src":"18896:31:13"},"nodeType":"YulExpressionStatement","src":"18896:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18943:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18946:4:13","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18936:6:13"},"nodeType":"YulFunctionCall","src":"18936:15:13"},"nodeType":"YulExpressionStatement","src":"18936:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18967:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18970:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18960:6:13"},"nodeType":"YulFunctionCall","src":"18960:15:13"},"nodeType":"YulExpressionStatement","src":"18960:15:13"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"18854:127:13"},{"body":{"nodeType":"YulBlock","src":"19018:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19035:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19042:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"19047:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19038:3:13"},"nodeType":"YulFunctionCall","src":"19038:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19028:6:13"},"nodeType":"YulFunctionCall","src":"19028:31:13"},"nodeType":"YulExpressionStatement","src":"19028:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19075:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19078:4:13","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19068:6:13"},"nodeType":"YulFunctionCall","src":"19068:15:13"},"nodeType":"YulExpressionStatement","src":"19068:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19099:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19102:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19092:6:13"},"nodeType":"YulFunctionCall","src":"19092:15:13"},"nodeType":"YulExpressionStatement","src":"19092:15:13"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"18986:127:13"},{"body":{"nodeType":"YulBlock","src":"19165:88:13","statements":[{"body":{"nodeType":"YulBlock","src":"19196:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19198:16:13"},"nodeType":"YulFunctionCall","src":"19198:18:13"},"nodeType":"YulExpressionStatement","src":"19198:18:13"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19181:5:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19192:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19188:3:13"},"nodeType":"YulFunctionCall","src":"19188:6:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19178:2:13"},"nodeType":"YulFunctionCall","src":"19178:17:13"},"nodeType":"YulIf","src":"19175:43:13"},{"nodeType":"YulAssignment","src":"19227:20:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19238:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"19245:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19234:3:13"},"nodeType":"YulFunctionCall","src":"19234:13:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19227:3:13"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19147:5:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19157:3:13","type":""}],"src":"19118:135:13"},{"body":{"nodeType":"YulBlock","src":"19306:77:13","statements":[{"nodeType":"YulAssignment","src":"19316:16:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19327:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"19330:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19323:3:13"},"nodeType":"YulFunctionCall","src":"19323:9:13"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"19316:3:13"}]},{"body":{"nodeType":"YulBlock","src":"19355:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19357:16:13"},"nodeType":"YulFunctionCall","src":"19357:18:13"},"nodeType":"YulExpressionStatement","src":"19357:18:13"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19347:1:13"},{"name":"sum","nodeType":"YulIdentifier","src":"19350:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19344:2:13"},"nodeType":"YulFunctionCall","src":"19344:10:13"},"nodeType":"YulIf","src":"19341:36:13"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19289:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"19292:1:13","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"19298:3:13","type":""}],"src":"19258:125:13"},{"body":{"nodeType":"YulBlock","src":"19420:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19437:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19444:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"19449:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19440:3:13"},"nodeType":"YulFunctionCall","src":"19440:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19430:6:13"},"nodeType":"YulFunctionCall","src":"19430:31:13"},"nodeType":"YulExpressionStatement","src":"19430:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19477:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19480:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19470:6:13"},"nodeType":"YulFunctionCall","src":"19470:15:13"},"nodeType":"YulExpressionStatement","src":"19470:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19501:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19504:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19494:6:13"},"nodeType":"YulFunctionCall","src":"19494:15:13"},"nodeType":"YulExpressionStatement","src":"19494:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"19388:127:13"},{"body":{"nodeType":"YulBlock","src":"19567:89:13","statements":[{"body":{"nodeType":"YulBlock","src":"19594:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19596:16:13"},"nodeType":"YulFunctionCall","src":"19596:18:13"},"nodeType":"YulExpressionStatement","src":"19596:18:13"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19587:5:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19580:6:13"},"nodeType":"YulFunctionCall","src":"19580:13:13"},"nodeType":"YulIf","src":"19577:39:13"},{"nodeType":"YulAssignment","src":"19625:25:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19636:5:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19647:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19643:3:13"},"nodeType":"YulFunctionCall","src":"19643:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19632:3:13"},"nodeType":"YulFunctionCall","src":"19632:18:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19625:3:13"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19549:5:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19559:3:13","type":""}],"src":"19520:136:13"},{"body":{"nodeType":"YulBlock","src":"19835:182:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19852:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19863:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19845:6:13"},"nodeType":"YulFunctionCall","src":"19845:21:13"},"nodeType":"YulExpressionStatement","src":"19845:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19886:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19897:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19882:3:13"},"nodeType":"YulFunctionCall","src":"19882:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"19902:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19875:6:13"},"nodeType":"YulFunctionCall","src":"19875:30:13"},"nodeType":"YulExpressionStatement","src":"19875:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19925:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19936:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19921:3:13"},"nodeType":"YulFunctionCall","src":"19921:18:13"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"19941:34:13","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19914:6:13"},"nodeType":"YulFunctionCall","src":"19914:62:13"},"nodeType":"YulExpressionStatement","src":"19914:62:13"},{"nodeType":"YulAssignment","src":"19985:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19997:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"20008:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19993:3:13"},"nodeType":"YulFunctionCall","src":"19993:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19985:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19812:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19826:4:13","type":""}],"src":"19661:356:13"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_array_bytes32_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address_payablet_uint256t_uint256t_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_array_bytes32_dyn_calldata(add(headStart, offset), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_struct$_Deposit_$2981_memory_ptr__to_t_struct$_Deposit_$2981_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$531t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_uint256t_uint256t_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_array_bytes32_dyn_calldata(add(headStart, offset), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Contract is paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a87c9e0d3eefbac0f3a8e33df8ba206353d61a7c4bcb58b89c11ac8e66ce6d56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Deposit ID does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_payable_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_calldata_ptr__to_t_bytes32_t_address_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        mstore(add(headStart, 160), value5)\n        if gt(value5, sub(shl(251, 1), 1)) { revert(0, 0) }\n        let length := shl(5, value5)\n        calldatacopy(add(headStart, 192), value4, length)\n        tail := add(add(headStart, length), 192)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_1bf4c4e730d5ee6cec86008d2bfd433f0c42d1b0ac13b55ae99ee97c360662b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Invalid withdrawal conditions\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_daf265deba315b0f69699516857cd04e6131e8f2cb52a70455d08357d6058605__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Fee must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_31fb24c45e8e227fef562a8d72702323ba8cefa50ca38edc5e93f5cd45b26b93__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Fee cannot exceed maximum (10%)\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cacadcc73db8e6395c114dc30f0bb9c982ee87d348a2924baa79be69e3bb4687__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Query for nonexistent deposit\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"No tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_18ba671663cc149608333373fe3daaddc64eb144864b7962cfeb52050b5de2ce__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Deposit not found\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Deposit amount must be greater t\")\n        mstore(add(headStart, 96), \"han zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24ad9e456a2ce0106486031801792ed30a6c347256d2d81e2b2aae7dcd707129__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid Merkle root\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_004c0fa1591e755bd6bc2a320c434e2cacca3ce858e00934e976ba0265b4cd87__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Deposit ID already exists\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Fee transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Index out of bounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(sub(shl(96, 1), 1))))\n        mstore(add(pos, 20), value1)\n        mstore(add(pos, 52), value2)\n        end := add(pos, 84)\n    }\n    function abi_encode_tuple_t_stringliteral_9e0b6a3c3c2892dcc46975fd4747d409a6200f0f6763c4000ee1783c7e6b5410__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid merkle proof\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6b293b0896b22dc3a03a4f229b72f78da937962c6081a958fe0adeeb67107219__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Already withdrawn\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_98697925fb039aaca86dc4adabe52515e4418e1e556d3a371cdce8ced9b902f6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Release time not reached\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4ea48790db13e4ee9ddfd7285660e5d12af98045629460d48a74e53124125a3d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Insufficient deposit amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1ae725630e89b25bfdaf595445b8423bd80e9df92ceecb6d061610f2a2e3182c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 6)\n        mstore(add(headStart, 64), \"No ETH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0039e6735521f7b0196953e89f27cc371edc6bb5fb4f18631ddb74873dea7271__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Amount exceeds balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid fee recipient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106101485760003560e01c806301ffc9a71461015157806316c38b3c14610186578063248a9ca3146101a65780632f2ff15d146101d457806334bafb60146101f457806336568abe146102145780633cbf725c1461023457806346904840146102815780635c975abb146102ae57806369fe0e2d146102c857806375b238fc146102e85780637a86983f1461030a5780637d88209714610355578063886f039a1461036a57806391d148541461038a578063a217fddf146103aa578063a46d1b13146103bf578063a54191e2146103df578063b214faa5146103ff578063b75f5e6014610412578063bc063e1a14610432578063bf301d8414610448578063ced72f8714610468578063d547741f1461047d578063ddca3f431461049d578063e58378bb146104b3578063e72c5717146104d5578063e74b981b146104f557005b3661014f57005b005b34801561015d57600080fd5b5061017161016c366004611b54565b610515565b60405190151581526020015b60405180910390f35b34801561019257600080fd5b5061014f6101a1366004611b8c565b61054c565b3480156101b257600080fd5b506101c66101c1366004611ba9565b6105ac565b60405190815260200161017d565b3480156101e057600080fd5b5061014f6101ef366004611bd7565b6105c1565b34801561020057600080fd5b5061014f61020f366004611c52565b6105e2565b34801561022057600080fd5b5061014f61022f366004611bd7565b61089a565b34801561024057600080fd5b5061017161024f366004611cc4565b60009283526003602090815260408085206001600160a01b039490941685529281528284209184525290205460ff1690565b34801561028d57600080fd5b506002546102a1906001600160a01b031681565b60405161017d9190611cfc565b3480156102ba57600080fd5b506008546101719060ff1681565b3480156102d457600080fd5b5061014f6102e3366004611ba9565b610918565b3480156102f457600080fd5b506101c660008051602061207483398151915281565b34801561031657600080fd5b5061032a610325366004611ba9565b610a18565b60408051825181526020808401516001600160a01b031690820152918101519082015260600161017d565b34801561036157600080fd5b506101c6610ace565b34801561037657600080fd5b5061014f610385366004611d10565b610adf565b34801561039657600080fd5b506101716103a5366004611bd7565b610c1f565b3480156103b657600080fd5b506101c6600081565b3480156103cb57600080fd5b5061014f6103da366004611ba9565b610c48565b3480156103eb57600080fd5b5061014f6103fa366004611ba9565b610e2c565b61014f61040d366004611ba9565b610ec8565b34801561041e57600080fd5b506101c661042d366004611ba9565b61115a565b34801561043e57600080fd5b506101c66103e881565b34801561045457600080fd5b50610171610463366004611c52565b6111b5565b34801561047457600080fd5b506007546101c6565b34801561048957600080fd5b5061014f610498366004611bd7565b6113d0565b3480156104a957600080fd5b506101c660075481565b3480156104bf57600080fd5b506101c660008051602061205483398151915281565b3480156104e157600080fd5b5061014f6104f0366004611d3e565b6113ec565b34801561050157600080fd5b5061014f610510366004611d6a565b6114f7565b60006001600160e01b03198216637965db0b60e01b148061054657506301ffc9a760e01b6001600160e01b03198316145b92915050565b600080516020612054833981519152610564816115b0565b6008805460ff19168315159081179091556040519081527fb80d1ae5628c2af91424c54c87acfd15016be4bebeef0425b328238702f348319060200160405180910390a15050565b60009081526020819052604090206001015490565b6105ca826105ac565b6105d3816115b0565b6105dd83836115ba565b505050565b6000805160206120748339815191526105fa816115b0565b61060261163e565b60085460ff161561062e5760405162461bcd60e51b815260040161062590611d87565b60405180910390fd5b610639600588611697565b6106555760405162461bcd60e51b815260040161062590611db3565b60008781526004602081905260408083209051632fcc076160e21b8152909291309163bf301d8491610693918d918d918d918d918d918d9101611de6565b602060405180830381865afa1580156106b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d49190611e47565b9050806107235760405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964207769746864726177616c20636f6e646974696f6e730000006044820152606401610625565b60008981526003602090815260408083206001600160a01b038c16845282528083208984529091528120805460ff191660011790556002830154610768908990611e7a565b9050806000036107c35760008a81526004602052604081208181556001810180546001600160a01b0319169055600201556107a460058b6116aa565b506040518a9060008051602061209483398151915290600090a26107cb565b600283018190555b60408051898152602081018990526001600160a01b038b16918c917ff459faee68c663908ff1a63dbe00219bea7dc9c03f866771eb43feefe2ef6527910160405180910390a36000896001600160a01b03168960405160006040518083038185875af1925050503d806000811461085e576040519150601f19603f3d011682016040523d82523d6000602084013e610863565b606091505b50509050806108845760405162461bcd60e51b815260040161062590611e8d565b5050505061089160018055565b50505050505050565b6001600160a01b038116331461090a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610625565b61091482826116b6565b5050565b600080516020612054833981519152610930816115b0565b600082116109805760405162461bcd60e51b815260206004820152601d60248201527f466565206d7573742062652067726561746572207468616e207a65726f0000006044820152606401610625565b6103e88211156109d25760405162461bcd60e51b815260206004820152601f60248201527f4665652063616e6e6f7420657863656564206d6178696d756d202831302529006044820152606401610625565b600780549083905560408051828152602081018590527f528d9479e9f9889a87a3c30c7f7ba537e5e59c4c85a37733b16e57c62df61302910160405180910390a1505050565b6040805160608101825260008082526020820181905291810191909152610a40600583611697565b610a8c5760405162461bcd60e51b815260206004820152601d60248201527f517565727920666f72206e6f6e6578697374656e74206465706f7369740000006044820152606401610625565b5060009081526004602090815260409182902082516060810184528154815260018201546001600160a01b031692810192909252600201549181019190915290565b6000610ada600561171b565b905090565b600080516020612054833981519152610af7816115b0565b6040516370a0823160e01b81526000906001600160a01b038516906370a0823190610b26903090600401611cfc565b602060405180830381865afa158015610b43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b679190611eb6565b905060008111610ba55760405162461bcd60e51b81526020600482015260096024820152684e6f20746f6b656e7360b81b6044820152606401610625565b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820183905285169063a9059cbb906044016020604051808303816000875af1158015610bf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c189190611e47565b5050505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600080516020612054833981519152610c60816115b0565b610c6861163e565b610c73600583611697565b610c8f5760405162461bcd60e51b815260040161062590611db3565b60008281526004602090815260409182902082516060810184528154815260018201546001600160a01b031692810183905260029091015492810192909252610d0e5760405162461bcd60e51b815260206004820152601160248201527011195c1bdcda5d081b9bdd08199bdd5b99607a1b6044820152606401610625565b604080820151602080840151600087815260049092529281208181556001810180546001600160a01b03191690556002015590610d4c6005866116aa565b5060408051838152600060208201526001600160a01b0383169187917f049e2797daee2aadd15e6edee0f05ed19e022b55665ff1c33d22b70e89652b46910160405180910390a3604051859060008051602061209483398151915290600090a26000816001600160a01b03168360405160006040518083038185875af1925050503d8060008114610df9576040519150601f19603f3d011682016040523d82523d6000602084013e610dfe565b606091505b5050905080610e1f5760405162461bcd60e51b815260040161062590611e8d565b5050505061091460018055565b600080516020612054833981519152610e44816115b0565b610e4c61163e565b610e57600583611697565b610e735760405162461bcd60e51b815260040161062590611db3565b60008281526004602052604081208181556001810180546001600160a01b031916905560020155610ea56005836116aa565b50604051829060008051602061209483398151915290600090a261091460018055565b610ed061163e565b60085460ff1615610ef35760405162461bcd60e51b815260040161062590611d87565b60003411610f545760405162461bcd60e51b815260206004820152602860248201527f4465706f73697420616d6f756e74206d7573742062652067726561746572207460448201526768616e207a65726f60c01b6064820152608401610625565b80610f975760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a590813595c9adb19481c9bdbdd606a1b6044820152606401610625565b610fa2600582611697565b15610feb5760405162461bcd60e51b81526020600482015260196024820152784465706f73697420494420616c72656164792065786973747360381b6044820152606401610625565b600061271060075434610ffe9190611ecf565b6110089190611ee6565b905060006110168234611e7a565b604080516060810182528581523360208083019182528284018581526000898152600490925293902091518255516001820180546001600160a01b0319166001600160a01b039092169190911790559051600290910155905061107a600584611725565b50604051818152339084907f2fc7f61216f4b9da63724a7ccba484452205b7cf651334640e3cd112017860069060200160405180910390a36002546040516000916001600160a01b03169084908381818185875af1925050503d80600081146110ff576040519150601f19603f3d011682016040523d82523d6000602084013e611104565b606091505b505090508061114b5760405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606401610625565b50505061115760018055565b50565b6000611166600561171b565b82106111aa5760405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610625565b610546600583611731565b60006111c2600588611697565b6111de5760405162461bcd60e51b815260040161062590611db3565b600087815260046020908152604080832090516001600160601b031960608b901b169281019290925260348201889052605482018790529190607401604051602081830303815290604052805190602001209050611272858580806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250508554915084905061173d565b6112b55760405162461bcd60e51b815260206004820152601460248201527324b73b30b634b21036b2b935b63290383937b7b360611b6044820152606401610625565b60008981526003602090815260408083206001600160a01b038c168452825280832089845290915290205460ff16156113245760405162461bcd60e51b815260206004820152601160248201527020b63932b0b23c903bb4ba34323930bbb760791b6044820152606401610625565b4286111561136f5760405162461bcd60e51b815260206004820152601860248201527714995b19585cd9481d1a5b59481b9bdd081c995858da195960421b6044820152606401610625565b86826002015410156113c15760405162461bcd60e51b815260206004820152601b60248201527a125b9cdd59999a58da595b9d0819195c1bdcda5d08185b5bdd5b9d602a1b6044820152606401610625565b50600198975050505050505050565b6113d9826105ac565b6113e2816115b0565b6105dd83836116b6565b600080516020612054833981519152611404816115b0565b478061143b5760405162461bcd60e51b815260206004820152600660248201526509cde408aa8960d31b6044820152606401610625565b808311156114845760405162461bcd60e51b8152602060048201526016602482015275416d6f756e7420657863656564732062616c616e636560501b6044820152606401610625565b6000846001600160a01b03168260405160006040518083038185875af1925050503d80600081146114d1576040519150601f19603f3d011682016040523d82523d6000602084013e6114d6565b606091505b5050905080610c185760405162461bcd60e51b815260040161062590611e8d565b60008051602061205483398151915261150f816115b0565b6001600160a01b03821661155d5760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a5908199959481c9958da5c1a595b9d605a1b6044820152606401610625565b600280546001600160a01b038481166001600160a01b0319831681179093556040519116919082907faaebcf1bfa00580e41d966056b48521fa9f202645c86d4ddf28113e617c1b1d390600090a3505050565b6111578133611753565b6115c48282610c1f565b610914576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556115fa3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6002600154036116905760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610625565b6002600155565b60006116a383836117ac565b9392505050565b60006116a383836117c4565b6116c08282610c1f565b15610914576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610546825490565b60006116a383836118b7565b60006116a38383611901565b60008261174a858461192b565b14949350505050565b61175d8282610c1f565b6109145761176a81611978565b61177583602061198a565b604051602001611786929190611f2c565b60408051601f198184030181529082905262461bcd60e51b825261062591600401611f9b565b60009081526001919091016020526040902054151590565b600081815260018301602052604081205480156118ad5760006117e8600183611e7a565b85549091506000906117fc90600190611e7a565b905081811461186157600086600001828154811061181c5761181c611fce565b906000526020600020015490508087600001848154811061183f5761183f611fce565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061187257611872611fe4565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610546565b6000915050610546565b60006118c383836117ac565b6118f957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610546565b506000610546565b600082600001828154811061191857611918611fce565b9060005260206000200154905092915050565b600081815b84518110156119705761195c8286838151811061194f5761194f611fce565b6020026020010151611b25565b91508061196881611ffa565b915050611930565b509392505050565b60606105466001600160a01b03831660145b60606000611999836002611ecf565b6119a4906002612013565b6001600160401b038111156119bb576119bb612026565b6040519080825280601f01601f1916602001820160405280156119e5576020820181803683370190505b509050600360fc1b81600081518110611a0057611a00611fce565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611a2f57611a2f611fce565b60200101906001600160f81b031916908160001a9053506000611a53846002611ecf565b611a5e906001612013565b90505b6001811115611ad6576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611a9257611a92611fce565b1a60f81b828281518110611aa857611aa8611fce565b60200101906001600160f81b031916908160001a90535060049490941c93611acf8161203c565b9050611a61565b5083156116a35760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610625565b6000818310611b415760008281526020849052604090206116a3565b60008381526020839052604090206116a3565b600060208284031215611b6657600080fd5b81356001600160e01b0319811681146116a357600080fd5b801515811461115757600080fd5b600060208284031215611b9e57600080fd5b81356116a381611b7e565b600060208284031215611bbb57600080fd5b5035919050565b6001600160a01b038116811461115757600080fd5b60008060408385031215611bea57600080fd5b823591506020830135611bfc81611bc2565b809150509250929050565b60008083601f840112611c1957600080fd5b5081356001600160401b03811115611c3057600080fd5b6020830191508360208260051b8501011115611c4b57600080fd5b9250929050565b60008060008060008060a08789031215611c6b57600080fd5b863595506020870135611c7d81611bc2565b9450604087013593506060870135925060808701356001600160401b03811115611ca657600080fd5b611cb289828a01611c07565b979a9699509497509295939492505050565b600080600060608486031215611cd957600080fd5b833592506020840135611ceb81611bc2565b929592945050506040919091013590565b6001600160a01b0391909116815260200190565b60008060408385031215611d2357600080fd5b8235611d2e81611bc2565b91506020830135611bfc81611bc2565b60008060408385031215611d5157600080fd5b8235611d5c81611bc2565b946020939093013593505050565b600060208284031215611d7c57600080fd5b81356116a381611bc2565b60208082526012908201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b604082015260600190565b60208082526019908201527811195c1bdcda5d08125108191bd95cc81b9bdd08195e1a5cdd603a1b604082015260600190565b8681526001600160a01b0386166020820152604081018590526060810184905260a060808201819052810182905260006001600160fb1b03831115611e2a57600080fd5b8260051b808560c08501379190910160c001979650505050505050565b600060208284031215611e5957600080fd5b81516116a381611b7e565b634e487b7160e01b600052601160045260246000fd5b8181038181111561054657610546611e64565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b600060208284031215611ec857600080fd5b5051919050565b808202811582820484141761054657610546611e64565b600082611f0357634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015611f23578181015183820152602001611f0b565b50506000910152565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351611f5e816017850160208801611f08565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611f8f816028840160208801611f08565b01602801949350505050565b6020815260008251806020840152611fba816040850160208701611f08565b601f01601f19169190910160400192915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60006001820161200c5761200c611e64565b5060010190565b8082018082111561054657610546611e64565b634e487b7160e01b600052604160045260246000fd5b60008161204b5761204b611e64565b50600019019056feb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214ea49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775c01be8cccf858504feb9ca3c65b0e2340a99d0935173883cee33e762f4a2904ea2646970667358221220b6404325ca8e1127f73297a2d63204156b37fc9f49d7168753f8c2dd3642838264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x148 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x34BAFB60 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x3CBF725C EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x69FE0E2D EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x7A86983F EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x7D882097 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0x886F039A EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xA46D1B13 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xA54191E2 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xB214FAA5 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xB75F5E60 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0xBF301D84 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xCED72F87 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xE58378BB EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0xE72C5717 EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0x4F5 JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0x14F JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x1B54 JUMP JUMPDEST PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0x1C52 JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP6 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP5 KECCAK256 SWAP2 DUP5 MSTORE MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x2A1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1CFC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x171 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2074 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE SWAP2 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x17D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0xACE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x385 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D10 JUMP JUMPDEST PUSH2 0xADF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0xC1F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xC48 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xE2C JUMP JUMPDEST PUSH2 0x14F PUSH2 0x40D CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xEC8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x42D CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x115A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x3E8 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x463 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C52 JUMP JUMPDEST PUSH2 0x11B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x1C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x498 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0x13D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x4F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x13EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x501 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x510 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D6A JUMP JUMPDEST PUSH2 0x14F7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x546 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x564 DUP2 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xB80D1AE5628C2AF91424C54C87ACFD15016BE4BEBEEF0425B328238702F34831 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5CA DUP3 PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x5D3 DUP2 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x5DD DUP4 DUP4 PUSH2 0x15BA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2074 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x5FA DUP2 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x602 PUSH2 0x163E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x62E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x639 PUSH1 0x5 DUP9 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH4 0x2FCC0761 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 SWAP3 SWAP2 ADDRESS SWAP2 PUSH4 0xBF301D84 SWAP2 PUSH2 0x693 SWAP2 DUP14 SWAP2 DUP14 SWAP2 DUP14 SWAP2 DUP14 SWAP2 DUP14 SWAP2 DUP14 SWAP2 ADD PUSH2 0x1DE6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6D4 SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x723 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207769746864726177616C20636F6E646974696F6E73000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH2 0x768 SWAP1 DUP10 SWAP1 PUSH2 0x1E7A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x7C3 JUMPI PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x2 ADD SSTORE PUSH2 0x7A4 PUSH1 0x5 DUP12 PUSH2 0x16AA JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP11 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2094 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x2 DUP4 ADD DUP2 SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP2 DUP13 SWAP2 PUSH32 0xF459FAEE68C663908FF1A63DBE00219BEA7DC9C03F866771EB43FEEFE2EF6527 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x85E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x863 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x884 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST POP POP POP POP PUSH2 0x891 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x625 JUMP JUMPDEST PUSH2 0x914 DUP3 DUP3 PUSH2 0x16B6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x930 DUP2 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x980 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565206D7573742062652067726561746572207468616E207A65726F000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH2 0x3E8 DUP3 GT ISZERO PUSH2 0x9D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652063616E6E6F7420657863656564206D6178696D756D20283130252900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x528D9479E9F9889A87A3C30C7F7BA537E5E59C4C85A37733B16E57C62DF61302 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xA40 PUSH1 0x5 DUP4 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0xA8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x517565727920666F72206E6F6E6578697374656E74206465706F736974000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADA PUSH1 0x5 PUSH2 0x171B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xAF7 DUP2 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xB26 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1CFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB43 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB67 SWAP2 SWAP1 PUSH2 0x1EB6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xBA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x4E6F20746F6B656E73 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP6 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC18 SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xC60 DUP2 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0xC68 PUSH2 0x163E JUMP JUMPDEST PUSH2 0xC73 PUSH1 0x5 DUP4 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0xC8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0xD0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x11195C1BDCDA5D081B9BDD08199BDD5B99 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 ADD MLOAD PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP3 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x2 ADD SSTORE SWAP1 PUSH2 0xD4C PUSH1 0x5 DUP7 PUSH2 0x16AA JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP8 SWAP2 PUSH32 0x49E2797DAEE2AADD15E6EDEE0F05ED19E022B55665FF1C33D22B70E89652B46 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2094 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDF9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xE1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST POP POP POP POP PUSH2 0x914 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xE44 DUP2 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0xE4C PUSH2 0x163E JUMP JUMPDEST PUSH2 0xE57 PUSH1 0x5 DUP4 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0xE73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x2 ADD SSTORE PUSH2 0xEA5 PUSH1 0x5 DUP4 PUSH2 0x16AA JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2094 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0x914 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0xED0 PUSH2 0x163E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xEF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0xF54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x68616E207A65726F PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x625 JUMP JUMPDEST DUP1 PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A590813595C9ADB19481C9BDBDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH2 0xFA2 PUSH1 0x5 DUP3 PUSH2 0x1697 JUMP JUMPDEST ISZERO PUSH2 0xFEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x4465706F73697420494420616C726561647920657869737473 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x7 SLOAD CALLVALUE PUSH2 0xFFE SWAP2 SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH2 0x1008 SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1016 DUP3 CALLVALUE PUSH2 0x1E7A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE CALLER PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP3 DUP5 ADD DUP6 DUP2 MSTORE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP4 SWAP1 KECCAK256 SWAP2 MLOAD DUP3 SSTORE MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE SWAP1 POP PUSH2 0x107A PUSH1 0x5 DUP5 PUSH2 0x1725 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 DUP5 SWAP1 PUSH32 0x2FC7F61216F4B9DA63724A7CCBA484452205B7CF651334640E3CD11201786006 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10FF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x114B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST POP POP POP PUSH2 0x1157 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1166 PUSH1 0x5 PUSH2 0x171B JUMP JUMPDEST DUP3 LT PUSH2 0x11AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH2 0x546 PUSH1 0x5 DUP4 PUSH2 0x1731 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C2 PUSH1 0x5 DUP9 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0x11DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP12 SWAP1 SHL AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x34 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x54 DUP3 ADD DUP8 SWAP1 MSTORE SWAP2 SWAP1 PUSH1 0x74 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1272 DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP DUP6 SLOAD SWAP2 POP DUP5 SWAP1 POP PUSH2 0x173D JUMP JUMPDEST PUSH2 0x12B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24B73B30B634B21036B2B935B63290383937B7B3 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1324 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x20B63932B0B23C903BB4BA34323930BBB7 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST TIMESTAMP DUP7 GT ISZERO PUSH2 0x136F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x14995B19585CD9481D1A5B59481B9BDD081C995858DA1959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST DUP7 DUP3 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x13C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x125B9CDD59999A58DA595B9D0819195C1BDCDA5D08185B5BDD5B9D PUSH1 0x2A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST POP PUSH1 0x1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x13D9 DUP3 PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x13E2 DUP2 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x5DD DUP4 DUP4 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1404 DUP2 PUSH2 0x15B0 JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x143B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x9CDE408AA89 PUSH1 0xD3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST DUP1 DUP4 GT ISZERO PUSH2 0x1484 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x416D6F756E7420657863656564732062616C616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14D1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x150F DUP2 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x155D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9D985B1A5908199959481C9958DA5C1A595B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0xAAEBCF1BFA00580E41D966056B48521FA9F202645C86D4DDF28113E617C1B1D3 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1157 DUP2 CALLER PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x15C4 DUP3 DUP3 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x914 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x15FA CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1690 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A3 DUP4 DUP4 PUSH2 0x17AC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A3 DUP4 DUP4 PUSH2 0x17C4 JUMP JUMPDEST PUSH2 0x16C0 DUP3 DUP3 PUSH2 0xC1F JUMP JUMPDEST ISZERO PUSH2 0x914 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x546 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A3 DUP4 DUP4 PUSH2 0x18B7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A3 DUP4 DUP4 PUSH2 0x1901 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x174A DUP6 DUP5 PUSH2 0x192B JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x175D DUP3 DUP3 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x914 JUMPI PUSH2 0x176A DUP2 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x1775 DUP4 PUSH1 0x20 PUSH2 0x198A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1786 SWAP3 SWAP2 SWAP1 PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x625 SWAP2 PUSH1 0x4 ADD PUSH2 0x1F9B JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x18AD JUMPI PUSH1 0x0 PUSH2 0x17E8 PUSH1 0x1 DUP4 PUSH2 0x1E7A JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x17FC SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1E7A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1861 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x181C JUMPI PUSH2 0x181C PUSH2 0x1FCE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x183F JUMPI PUSH2 0x183F PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1872 JUMPI PUSH2 0x1872 PUSH2 0x1FE4 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x546 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x546 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C3 DUP4 DUP4 PUSH2 0x17AC JUMP JUMPDEST PUSH2 0x18F9 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x546 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x546 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1918 JUMPI PUSH2 0x1918 PUSH2 0x1FCE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1970 JUMPI PUSH2 0x195C DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x194F JUMPI PUSH2 0x194F PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1B25 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x1968 DUP2 PUSH2 0x1FFA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1930 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x546 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1999 DUP4 PUSH1 0x2 PUSH2 0x1ECF JUMP JUMPDEST PUSH2 0x19A4 SWAP1 PUSH1 0x2 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x19BB JUMPI PUSH2 0x19BB PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19E5 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1A00 JUMPI PUSH2 0x1A00 PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1A2F JUMPI PUSH2 0x1A2F PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1A53 DUP5 PUSH1 0x2 PUSH2 0x1ECF JUMP JUMPDEST PUSH2 0x1A5E SWAP1 PUSH1 0x1 PUSH2 0x2013 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1AD6 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1A92 JUMPI PUSH2 0x1A92 PUSH2 0x1FCE JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1AA8 JUMPI PUSH2 0x1AA8 PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1ACF DUP2 PUSH2 0x203C JUMP JUMPDEST SWAP1 POP PUSH2 0x1A61 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x16A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x625 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1B41 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x16A3 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x16A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x16A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16A3 DUP2 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1BFC DUP2 PUSH2 0x1BC2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1C19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1C4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1C6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x1C7D DUP2 PUSH2 0x1BC2 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1CA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CB2 DUP10 DUP3 DUP11 ADD PUSH2 0x1C07 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1CEB DUP2 PUSH2 0x1BC2 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1D2E DUP2 PUSH2 0x1BC2 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1BFC DUP2 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1D5C DUP2 PUSH2 0x1BC2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16A3 DUP2 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x10DBDB9D1C9858DD081A5CC81C185D5CD959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH25 0x11195C1BDCDA5D08125108191BD95CC81B9BDD08195E1A5CDD PUSH1 0x3A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT ISZERO PUSH2 0x1E2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x5 SHL DUP1 DUP6 PUSH1 0xC0 DUP6 ADD CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD PUSH1 0xC0 ADD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x16A3 DUP2 PUSH2 0x1B7E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x546 JUMPI PUSH2 0x546 PUSH2 0x1E64 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x546 JUMPI PUSH2 0x546 PUSH2 0x1E64 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F03 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F23 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F0B JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH23 0x20B1B1B2B9B9A1B7B73A3937B61D1030B1B1B7BAB73A1 PUSH1 0x4D SHL DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1F5E DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1F08 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1F8F DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1F08 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1FBA DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1F08 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x200C JUMPI PUSH2 0x200C PUSH2 0x1E64 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x546 JUMPI PUSH2 0x546 PUSH2 0x1E64 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x204B JUMPI PUSH2 0x204B PUSH2 0x1E64 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID 0xB1 SWAP6 CHAINID 0xDF CREATE 0x1E DUP6 PUSH16 0xB3F010C267A7B1C60363CF8A4664E21C 0xC8 SWAP13 0x26 0x22 CHAINID KECCAK256 0x21 0x4E LOG4 SWAP9 SMOD KECCAK256 0x5C 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xC01BE8CCCF858504FEB9CA3C65B0E2340A99D0935173 DUP9 EXTCODECOPY 0xEE CALLER 0xE7 PUSH3 0xF4A290 0x4E LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 BLOCKHASH NUMBER 0x25 0xCA DUP15 GT 0x27 0xF7 ORIGIN SWAP8 LOG2 0xD6 ORIGIN DIV ISZERO PUSH12 0x37FC9F49D7168753F8C2DD36 TIMESTAMP DUP4 DUP3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"678:12267:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:0;;;;;;;;;;-1:-1:-1;2732:202:0;;;;;:::i;:::-;;:::i;:::-;;;470:14:13;;463:22;445:41;;433:2;418:18;2732:202:0;;;;;;;;12629:134:12;;;;;;;;;;-1:-1:-1;12629:134:12;;;;;:::i;:::-;;:::i;4504:129:0:-;;;;;;;;;;-1:-1:-1;4504:129:0;;;;;:::i;:::-;;:::i;:::-;;;1197:25:13;;;1185:2;1170:18;4504:129:0;1051:177:13;4929:145:0;;;;;;;;;;-1:-1:-1;4929:145:0;;;;;:::i;:::-;;:::i;7622:1385:12:-;;;;;;;;;;-1:-1:-1;7622:1385:12;;;;;:::i;:::-;;:::i;6038:214:0:-;;;;;;;;;;-1:-1:-1;6038:214:0;;;;;:::i;:::-;;:::i;5555:205:12:-;;;;;;;;;;-1:-1:-1;5555:205:12;;;;;:::i;:::-;5688:4;5711:23;;;:12;:23;;;;;;;;-1:-1:-1;;;;;5711:29:12;;;;;;;;;;;;:42;;;;;;;;;;5555:205;1053:27;;;;;;;;;;-1:-1:-1;1053:27:12;;;;-1:-1:-1;;;;;1053:27:12;;;;;;;;;;:::i;1551:26::-;;;;;;;;;;-1:-1:-1;1551:26:12;;;;;;;;11549:385;;;;;;;;;;-1:-1:-1;11549:385:12;;;;;:::i;:::-;;:::i;895:60::-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;895:60:12;;3836:253;;;;;;;;;;-1:-1:-1;3836:253:12;;;;;:::i;:::-;;:::i;:::-;;;;3847:13:13;;3829:32;;3921:4;3909:17;;;3903:24;-1:-1:-1;;;;;3899:50:13;3877:20;;;3870:80;3994:17;;;3988:24;3966:20;;;3959:54;3817:2;3802:18;3836:253:12;3633:386:13;3310:102:12;;;;;;;;;;;;;:::i;10624:245::-;;;;;;;;;;-1:-1:-1;10624:245:12;;;;;:::i;:::-;;:::i;3021:145:0:-;;;;;;;;;;-1:-1:-1;3021:145:0;;;;;:::i;:::-;;:::i;2153:49::-;;;;;;;;;;-1:-1:-1;2153:49:0;2198:4;2153:49;;9162:757:12;;;;;;;;;;-1:-1:-1;9162:757:12;;;;;:::i;:::-;;:::i;10074:366::-;;;;;;;;;;-1:-1:-1;10074:366:12;;;;;:::i;:::-;;:::i;4251:1048::-;;;;;;:::i;:::-;;:::i;3531:188::-;;;;;;;;;;-1:-1:-1;3531:188:12;;;;;:::i;:::-;;:::i;1008:38::-;;;;;;;;;;;;1042:4;1008:38;;6097:1150;;;;;;;;;;-1:-1:-1;6097:1150:12;;;;;:::i;:::-;;:::i;3162:77::-;;;;;;;;;;-1:-1:-1;3229:3:12;;3162:77;;5354:147:0;;;;;;;;;;-1:-1:-1;5354:147:0;;;;;:::i;:::-;;:::i;1479:24:12:-;;;;;;;;;;;;;;;;829:60;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;829:60:12;;11053:359;;;;;;;;;;-1:-1:-1;11053:359:12;;;;;:::i;:::-;;:::i;12070:441::-;;;;;;;;;;-1:-1:-1;12070:441:12;;;;;:::i;:::-;;:::i;2732:202:0:-;2817:4;-1:-1:-1;;;;;;2840:47:0;;-1:-1:-1;;;2840:47:0;;:87;;-1:-1:-1;;;;;;;;;;937:40:7;;;2891:36:0;2833:94;2732:202;-1:-1:-1;;2732:202:0:o;12629:134:12:-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;12702:6:12::1;:16:::0;;-1:-1:-1;;12702:16:12::1;::::0;::::1;;::::0;;::::1;::::0;;;12733:23:::1;::::0;445:41:13;;;12733:23:12::1;::::0;433:2:13;418:18;12733:23:12::1;;;;;;;12629:134:::0;;:::o;4504:129:0:-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129::o;4929:145::-;5012:18;5025:4;5012:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;7622:1385:12:-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;2261:21:2::1;:19;:21::i;:::-;2527:6:12::2;::::0;::::2;;2526:7;2518:38;;;;-1:-1:-1::0;;;2518:38:12::2;;;;;;;:::i;:::-;;;;;;;;;7881:32:::3;:12;7903:9:::0;7881:21:::3;:32::i;:::-;7873:70;;;;-1:-1:-1::0;;;7873:70:12::3;;;;;;;:::i;:::-;7953:27;7983:19:::0;;;:8:::3;:19;::::0;;;;;;;8035:150;;-1:-1:-1;;;8035:150:12;;7983:19;;7953:27;8035:4:::3;::::0;:24:::3;::::0;:150:::3;::::0;7992:9;;8096;;8119:6;;8139:11;;8164;;;;8035:150:::3;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8013:172;;8203:14;8195:56;;;::::0;-1:-1:-1;;;8195:56:12;;7892:2:13;8195:56:12::3;::::0;::::3;7874:21:13::0;7931:2;7911:18;;;7904:30;7970:31;7950:18;;;7943:59;8019:18;;8195:56:12::3;7690:353:13::0;8195:56:12::3;8350:23;::::0;;;:12:::3;:23;::::0;;;;;;;-1:-1:-1;;;;;8350:34:12;::::3;::::0;;;;;;;:47;;;;;;;;:54;;-1:-1:-1;;8350:54:12::3;8400:4;8350:54;::::0;;8468:18:::3;::::0;::::3;::::0;:27:::3;::::0;8489:6;;8468:27:::3;:::i;:::-;8448:47;;8509:9;8522:1;8509:14:::0;8505:220:::3;;8546:19;::::0;;;:8:::3;:19;::::0;;;;8539:26;;;::::3;::::0;::::3;::::0;;-1:-1:-1;;;;;;8539:26:12::3;::::0;;::::3;;::::0;8579:30:::3;:12;8555:9:::0;8579:19:::3;:30::i;:::-;-1:-1:-1::0;8628:25:12::3;::::0;8643:9;;-1:-1:-1;;;;;;;;;;;8628:25:12;;;::::3;8505:220;;;8684:18;::::0;::::3;:30:::0;;;8505:220:::3;8807:59;::::0;;8487:25:13;;;8543:2;8528:18;;8521:34;;;-1:-1:-1;;;;;8807:59:12;::::3;::::0;8824:9;;8807:59:::3;::::0;8460:18:13;8807:59:12::3;;;;;;;8904:12;8922:9;-1:-1:-1::0;;;;;8922:14:12::3;8944:6;8922:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8903:52;;;8973:7;8965:35;;;;-1:-1:-1::0;;;8965:35:12::3;;;;;;;:::i;:::-;7863:1144;;;;2303:20:2::1;1716:1:::0;2809:22;;2629:209;2303:20:::1;7622:1385:12::0;;;;;;;:::o;6038:214:0:-;-1:-1:-1;;;;;6133:23:0;;734:10:4;6133:23:0;6125:83;;;;-1:-1:-1;;;6125:83:0;;9322:2:13;6125:83:0;;;9304:21:13;9361:2;9341:18;;;9334:30;9400:34;9380:18;;;9373:62;-1:-1:-1;;;9451:18:13;;;9444:45;9506:19;;6125:83:0;9120:411:13;6125:83:0;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;11549:385:12:-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;11638:1:12::1;11629:6;:10;11621:52;;;::::0;-1:-1:-1;;;11621:52:12;;9738:2:13;11621:52:12::1;::::0;::::1;9720:21:13::0;9777:2;9757:18;;;9750:30;9816:31;9796:18;;;9789:59;9865:18;;11621:52:12::1;9536:353:13::0;11621:52:12::1;1042:4;11691:6;:17;;11683:61;;;::::0;-1:-1:-1;;;11683:61:12;;10096:2:13;11683:61:12::1;::::0;::::1;10078:21:13::0;10135:2;10115:18;;;10108:30;10174:33;10154:18;;;10147:61;10225:18;;11683:61:12::1;9894:355:13::0;11683:61:12::1;11816:3;::::0;;11829:12;;;;11901:26:::1;::::0;;8487:25:13;;;8543:2;8528:18;;8521:34;;;11901:26:12::1;::::0;8460:18:13;11901:26:12::1;;;;;;;11611:323;11549:385:::0;;:::o;3836:253::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;3959:32:12;:12;3981:9;3959:21;:32::i;:::-;3938:108;;;;-1:-1:-1;;;3938:108:12;;10456:2:13;3938:108:12;;;10438:21:13;10495:2;10475:18;;;10468:30;10534:31;10514:18;;;10507:59;10583:18;;3938:108:12;10254:353:13;3938:108:12;-1:-1:-1;4063:19:12;;;;:8;:19;;;;;;;;;4056:26;;;;;;;;;;;;;;;-1:-1:-1;;;;;4056:26:12;;;;;;;;;;;;;;;;;;;3836:253::o;3310:102::-;3358:7;3384:21;:12;:19;:21::i;:::-;3377:28;;3310:102;:::o;10624:245::-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;10752:30:12::1;::::0;-1:-1:-1;;;10752:30:12;;10734:15:::1;::::0;-1:-1:-1;;;;;10752:15:12;::::1;::::0;::::1;::::0;:30:::1;::::0;10776:4:::1;::::0;10752:30:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10734:48;;10810:1;10800:7;:11;10792:33;;;::::0;-1:-1:-1;;;10792:33:12;;11003:2:13;10792:33:12::1;::::0;::::1;10985:21:13::0;11042:1;11022:18;;;11015:29;-1:-1:-1;;;11060:18:13;;;11053:39;11109:18;;10792:33:12::1;10801:332:13::0;10792:33:12::1;10835:27;::::0;-1:-1:-1;;;10835:27:12;;-1:-1:-1;;;;;11330:32:13;;;10835:27:12::1;::::0;::::1;11312:51:13::0;11379:18;;;11372:34;;;10835:14:12;::::1;::::0;::::1;::::0;11285:18:13;;10835:27:12::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10724:145;10624:245:::0;;;:::o;3021:145:0:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:0;;;;;;;;;;;;;;;3021:145::o;9162:757:12:-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;2261:21:2::1;:19;:21::i;:::-;9289:32:12::2;:12;9311:9:::0;9289:21:::2;:32::i;:::-;9281:70;;;;-1:-1:-1::0;;;9281:70:12::2;;;;;;;:::i;:::-;9362:26;9391:19:::0;;;:8:::2;:19;::::0;;;;;;;;9362:48;;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;-1:-1:-1;;;;;9362:48:12::2;::::0;;::::2;::::0;;;::::2;::::0;;::::2;::::0;;;;;;;;9420:60:::2;;;::::0;-1:-1:-1;;;9420:60:12;;11619:2:13;9420:60:12::2;::::0;::::2;11601:21:13::0;11658:2;11638:18;;;11631:30;-1:-1:-1;;;11677:18:13;;;11670:47;11734:18;;9420:60:12::2;11417:341:13::0;9420:60:12::2;9508:18;::::0;;::::2;::::0;9551:16:::2;::::0;;::::2;::::0;9491:14:::2;9648:19:::0;;;:8:::2;:19:::0;;;;;;9641:26;;;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;;9641:26:12::2;::::0;;::::2;;::::0;9508:18;9677:30:::2;:12;9657:9:::0;9677:19:::2;:30::i;:::-;-1:-1:-1::0;9723:46:12::2;::::0;;8487:25:13;;;9767:1:12::2;8543:2:13::0;8528:18;;8521:34;-1:-1:-1;;;;;9723:46:12;::::2;::::0;9742:9;;9723:46:::2;::::0;8460:18:13;9723:46:12::2;;;;;;;9784:25;::::0;9799:9;;-1:-1:-1;;;;;;;;;;;9784:25:12;;;::::2;9821:12;9839:4;-1:-1:-1::0;;;;;9839:9:12::2;9856:6;9839:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9820:47;;;9885:7;9877:35;;;;-1:-1:-1::0;;;9877:35:12::2;;;;;;;:::i;:::-;9271:648;;;;2303:20:2::1;1716:1:::0;2809:22;;2629:209;10074:366:12;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;2261:21:2::1;:19;:21::i;:::-;10191:32:12::2;:12;10213:9:::0;10191:21:::2;:32::i;:::-;10183:70;;;;-1:-1:-1::0;;;10183:70:12::2;;;;;;;:::i;:::-;10334:19;::::0;;;:8:::2;:19;::::0;;;;10327:26;;;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;;10327:26:12::2;::::0;;::::2;;::::0;10363:30:::2;:12;10343:9:::0;10363:19:::2;:30::i;:::-;-1:-1:-1::0;10408:25:12::2;::::0;10423:9;;-1:-1:-1;;;;;;;;;;;10408:25:12;;;::::2;2303:20:2::1;1716:1:::0;2809:22;;2629:209;4251:1048:12;2261:21:2;:19;:21::i;:::-;2527:6:12::1;::::0;::::1;;2526:7;2518:38;;;;-1:-1:-1::0;;;2518:38:12::1;;;;;;;:::i;:::-;4375:1:::2;4363:9;:13;4355:66;;;::::0;-1:-1:-1;;;4355:66:12;;12226:2:13;4355:66:12::2;::::0;::::2;12208:21:13::0;12265:2;12245:18;;;12238:30;12304:34;12284:18;;;12277:62;-1:-1:-1;;;12355:18:13;;;12348:38;12403:19;;4355:66:12::2;12024:404:13::0;4355:66:12::2;4439:9:::0;4431:55:::2;;;::::0;-1:-1:-1;;;4431:55:12;;12635:2:13;4431:55:12::2;::::0;::::2;12617:21:13::0;12674:2;12654:18;;;12647:30;-1:-1:-1;;;12693:18:13;;;12686:49;12752:18;;4431:55:12::2;12433:343:13::0;4431:55:12::2;4551:32;:12;4573:9:::0;4551:21:::2;:32::i;:::-;4550:33;4542:71;;;::::0;-1:-1:-1;;;4542:71:12;;12983:2:13;4542:71:12::2;::::0;::::2;12965:21:13::0;13022:2;13002:18;;;12995:30;-1:-1:-1;;;13041:18:13;;;13034:55;13106:18;;4542:71:12::2;12781:349:13::0;4542:71:12::2;4649:17;4689:5;4682:3;;4670:9;:15;;;;:::i;:::-;4669:25;;;;:::i;:::-;4649:45:::0;-1:-1:-1;4704:17:12::2;4724:21;4649:45:::0;4724:9:::2;:21;:::i;:::-;4848:41;::::0;;::::2;::::0;::::2;::::0;;;;;4867:10:::2;4848:41;::::0;;::::2;::::0;;;;;;;;;-1:-1:-1;4826:19:12;;;:8:::2;:19:::0;;;;;;:63;;;;;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;;4826:63:12::2;-1:-1:-1::0;;;;;4826:63:12;;::::2;::::0;;;::::2;::::0;;;;::::2;::::0;;::::2;::::0;4848:41;-1:-1:-1;4899:27:12::2;:12;4848:41:::0;4899:16:::2;:27::i;:::-;-1:-1:-1::0;5024:48:12::2;::::0;1197:25:13;;;5050:10:12::2;::::0;5039:9;;5024:48:::2;::::0;1185:2:13;1170:18;5024:48:12::2;;;;;;;5170:12;::::0;5162:70:::2;::::0;5133:23:::2;::::0;-1:-1:-1;;;;;5170:12:12::2;::::0;5209:9;;5133:23;5162:70;5133:23;5162:70;5209:9;5170:12;5162:70:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5132:100;;;5250:18;5242:50;;;::::0;-1:-1:-1;;;5242:50:12;;13732:2:13;5242:50:12::2;::::0;::::2;13714:21:13::0;13771:2;13751:18;;;13744:30;-1:-1:-1;;;13790:18:13;;;13783:49;13849:18;;5242:50:12::2;13530:343:13::0;5242:50:12::2;4345:954;;;2303:20:2::0;1716:1;2809:22;;2629:209;2303:20;4251:1048:12;:::o;3531:188::-;3593:7;3628:21;:12;:19;:21::i;:::-;3620:5;:29;3612:61;;;;-1:-1:-1;;;3612:61:12;;14080:2:13;3612:61:12;;;14062:21:13;14119:2;14099:18;;;14092:30;-1:-1:-1;;;14138:18:13;;;14131:49;14197:18;;3612:61:12;13878:343:13;3612:61:12;3690:22;:12;3706:5;3690:15;:22::i;6097:1150::-;6302:4;6326:32;:12;6348:9;6326:21;:32::i;:::-;6318:70;;;;-1:-1:-1;;;6318:70:12;;;;;;;:::i;:::-;6398:27;6428:19;;;:8;:19;;;;;;;;6531:48;;-1:-1:-1;;;;;;14456:2:13;14427:15;;;14423:45;6531:48:12;;;14411:58:13;;;;14485:12;;;14478:28;;;14522:12;;;14515:28;;;6428:19:12;6398:27;14559:12:13;;6531:48:12;;;;;;;;;;;;6508:81;;;;;;6493:96;;6620:60;6639:11;;6620:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6652:21:12;;;-1:-1:-1;6675:4:12;;-1:-1:-1;6620:18:12;:60::i;:::-;6599:127;;;;-1:-1:-1;;;6599:127:12;;14784:2:13;6599:127:12;;;14766:21:13;14823:2;14803:18;;;14796:30;-1:-1:-1;;;14842:18:13;;;14835:50;14902:18;;6599:127:12;14582:344:13;6599:127:12;6797:23;;;;:12;:23;;;;;;;;-1:-1:-1;;;;;6797:34:12;;;;;;;;;:47;;;;;;;;;;;6796:48;6775:112;;;;-1:-1:-1;;;6775:112:12;;15133:2:13;6775:112:12;;;15115:21:13;15172:2;15152:18;;;15145:30;-1:-1:-1;;;15191:18:13;;;15184:47;15248:18;;6775:112:12;14931:341:13;6775:112:12;6984:15;6969:11;:30;;6948:101;;;;-1:-1:-1;;;6948:101:12;;15479:2:13;6948:101:12;;;15461:21:13;15518:2;15498:18;;;15491:30;-1:-1:-1;;;15537:18:13;;;15530:54;15601:18;;6948:101:12;15277:348:13;6948:101:12;7151:6;7129:11;:18;;;:28;;7108:102;;;;-1:-1:-1;;;7108:102:12;;15832:2:13;7108:102:12;;;15814:21:13;15871:2;15851:18;;;15844:30;-1:-1:-1;;;15890:18:13;;;15883:57;15957:18;;7108:102:12;15630:351:13;7108:102:12;-1:-1:-1;7236:4:12;;6097:1150;-1:-1:-1;;;;;;;;6097:1150:12:o;5354:147:0:-;5438:18;5451:4;5438:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;11053:359:12:-:0;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;11181:21:12::1;11220:11:::0;11212:30:::1;;;::::0;-1:-1:-1;;;11212:30:12;;16188:2:13;11212:30:12::1;::::0;::::1;16170:21:13::0;16227:1;16207:18;;;16200:29;-1:-1:-1;;;16245:18:13;;;16238:36;16291:18;;11212:30:12::1;15986:329:13::0;11212:30:12::1;11270:7;11260:6;:17;;11252:52;;;::::0;-1:-1:-1;;;11252:52:12;;16522:2:13;11252:52:12::1;::::0;::::1;16504:21:13::0;16561:2;16541:18;;;16534:30;-1:-1:-1;;;16580:18:13;;;16573:52;16642:18;;11252:52:12::1;16320:346:13::0;11252:52:12::1;11315:12;11333:2;-1:-1:-1::0;;;;;11333:7:12::1;11348;11333:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11314:46;;;11378:7;11370:35;;;;-1:-1:-1::0;;;11370:35:12::1;;;;;;;:::i;12070:441::-:0;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;-1:-1:-1;;;;;12182:29:12;::::1;12174:63;;;::::0;-1:-1:-1;;;12174:63:12;;16873:2:13;12174:63:12::1;::::0;::::1;16855:21:13::0;16912:2;16892:18;;;16885:30;-1:-1:-1;;;16931:18:13;;;16924:51;16992:18;;12174:63:12::1;16671:345:13::0;12174:63:12::1;12328:12;::::0;;-1:-1:-1;;;;;12350:30:12;;::::1;-1:-1:-1::0;;;;;;12350:30:12;::::1;::::0;::::1;::::0;;;12451:53:::1;::::0;12328:12;::::1;::::0;12350:30;12328:12;;12451:53:::1;::::0;12302:23:::1;::::0;12451:53:::1;12164:347;12070:441:::0;;:::o;3460:103:0:-;3526:30;3537:4;734:10:4;3526::0;:30::i;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:0;;;;;;;;;:36;;-1:-1:-1;;7708:36:0;7740:4;7708:36;;;7790:12;734:10:4;;655:96;7790:12:0;-1:-1:-1;;;;;7763:40:0;7781:7;-1:-1:-1;;;;;7763:40:0;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:2;;17223:2:13;2460:63:2;;;17205:21:13;17262:2;17242:18;;;17235:30;17301:33;17281:18;;;17274:61;17352:18;;2460:63:2;17021:355:13;2460:63:2;1759:1;2598:7;:18;2336:287::o;6420:138:11:-;6500:4;6523:28;6533:3;6545:5;6523:9;:28::i;:::-;6516:35;6420:138;-1:-1:-1;;;6420:138:11:o;6210:129::-;6283:4;6306:26;6314:3;6326:5;6306:7;:26::i;7991:234:0:-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:0;;;;;;;;;;:37;;-1:-1:-1;;8112:37:0;;;8168:40;734:10:4;;8112:12:0;;8168:40;;8144:5;8168:40;7991:234;;:::o;6639:115:11:-;6702:7;6728:19;6736:3;4545:18;;4463:107;5919:123;5989:4;6012:23;6017:3;6029:5;6012:4;:23::i;7096:129::-;7170:7;7196:22;7200:3;7212:5;7196:3;:22::i;1156:154:6:-;1247:4;1299;1270:25;1283:5;1290:4;1270:12;:25::i;:::-;:33;;1156:154;-1:-1:-1;;;;1156:154:6:o;3844:479:0:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:0;;;;;;;;;;-1:-1:-1;;;3970:336:0;;;;;;;:::i;4255:127:11:-;4328:4;4351:19;;;:12;;;;;:19;;;;;;:24;;;4255:127::o;2786:1388::-;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:11;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;2214:404;2277:4;2298:21;2308:3;2313:5;2298:9;:21::i;:::-;2293:319;;-1:-1:-1;2335:23:11;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:11;2589:12;;4912:118;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;;;:::i;:::-;;;;;;;;;4998:25;;4912:118;;;;:::o;1934:290:6:-;2017:7;2059:4;2017:7;2073:116;2097:5;:12;2093:1;:16;2073:116;;;2145:33;2155:12;2169:5;2175:1;2169:8;;;;;;;;:::i;:::-;;;;;;;2145:9;:33::i;:::-;2130:48;-1:-1:-1;2111:3:6;;;;:::i;:::-;;;;2073:116;;;-1:-1:-1;2205:12:6;1934:290;-1:-1:-1;;;1934:290:6:o;2407:149:5:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:5;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;-1:-1:-1;;;;;1940:25:5;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:5;;1918:47;;-1:-1:-1;;;1975:6:5;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:5;;;;;;;;;-1:-1:-1;;;2000:6:5;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:5;;;;;;;;-1:-1:-1;2030:9:5;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:5;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:5;;;;;;;;-1:-1:-1;2141:1:5;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:5;;2162:55;;;;-1:-1:-1;;;2162:55:5;;19863:2:13;2162:55:5;;;19845:21:13;;;19882:18;;;19875:30;19941:34;19921:18;;;19914:62;19993:18;;2162:55:5;19661:356:13;9205:147:6;9268:7;9298:1;9294;:5;:51;;9426:13;9517:15;;;9552:4;9545:15;;;9598:4;9582:21;;9294:51;;;9426:13;9517:15;;;9552:4;9545:15;;;9598:4;9582:21;;9302:20;9358:261;14:286:13;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:13;;209:43;;199:71;;266:1;263;256:12;497:118;583:5;576:13;569:21;562:5;559:32;549:60;;605:1;602;595:12;620:241;676:6;729:2;717:9;708:7;704:23;700:32;697:52;;;745:1;742;735:12;697:52;784:9;771:23;803:28;825:5;803:28;:::i;866:180::-;925:6;978:2;966:9;957:7;953:23;949:32;946:52;;;994:1;991;984:12;946:52;-1:-1:-1;1017:23:13;;866:180;-1:-1:-1;866:180:13:o;1233:131::-;-1:-1:-1;;;;;1308:31:13;;1298:42;;1288:70;;1354:1;1351;1344:12;1369:315;1437:6;1445;1498:2;1486:9;1477:7;1473:23;1469:32;1466:52;;;1514:1;1511;1504:12;1466:52;1550:9;1537:23;1527:33;;1610:2;1599:9;1595:18;1582:32;1623:31;1648:5;1623:31;:::i;:::-;1673:5;1663:15;;;1369:315;;;;;:::o;1689:367::-;1752:8;1762:6;1816:3;1809:4;1801:6;1797:17;1793:27;1783:55;;1834:1;1831;1824:12;1783:55;-1:-1:-1;1857:20:13;;-1:-1:-1;;;;;1889:30:13;;1886:50;;;1932:1;1929;1922:12;1886:50;1969:4;1961:6;1957:17;1945:29;;2029:3;2022:4;2012:6;2009:1;2005:14;1997:6;1993:27;1989:38;1986:47;1983:67;;;2046:1;2043;2036:12;1983:67;1689:367;;;;;:::o;2061:786::-;2191:6;2199;2207;2215;2223;2231;2284:3;2272:9;2263:7;2259:23;2255:33;2252:53;;;2301:1;2298;2291:12;2252:53;2337:9;2324:23;2314:33;;2397:2;2386:9;2382:18;2369:32;2410:31;2435:5;2410:31;:::i;:::-;2460:5;-1:-1:-1;2512:2:13;2497:18;;2484:32;;-1:-1:-1;2563:2:13;2548:18;;2535:32;;-1:-1:-1;2618:3:13;2603:19;;2590:33;-1:-1:-1;;;;;2635:30:13;;2632:50;;;2678:1;2675;2668:12;2632:50;2717:70;2779:7;2770:6;2759:9;2755:22;2717:70;:::i;:::-;2061:786;;;;-1:-1:-1;2061:786:13;;-1:-1:-1;2061:786:13;;2806:8;;2061:786;-1:-1:-1;;;2061:786:13:o;2852:383::-;2929:6;2937;2945;2998:2;2986:9;2977:7;2973:23;2969:32;2966:52;;;3014:1;3011;3004:12;2966:52;3050:9;3037:23;3027:33;;3110:2;3099:9;3095:18;3082:32;3123:31;3148:5;3123:31;:::i;:::-;2852:383;;3173:5;;-1:-1:-1;;;3225:2:13;3210:18;;;;3197:32;;2852:383::o;3240:203::-;-1:-1:-1;;;;;3404:32:13;;;;3386:51;;3374:2;3359:18;;3240:203::o;4206:402::-;4288:6;4296;4349:2;4337:9;4328:7;4324:23;4320:32;4317:52;;;4365:1;4362;4355:12;4317:52;4404:9;4391:23;4423:31;4448:5;4423:31;:::i;:::-;4473:5;-1:-1:-1;4530:2:13;4515:18;;4502:32;4543:33;4502:32;4543:33;:::i;5396:315::-;5464:6;5472;5525:2;5513:9;5504:7;5500:23;5496:32;5493:52;;;5541:1;5538;5531:12;5493:52;5580:9;5567:23;5599:31;5624:5;5599:31;:::i;:::-;5649:5;5701:2;5686:18;;;;5673:32;;-1:-1:-1;;;5396:315:13:o;5716:247::-;5775:6;5828:2;5816:9;5807:7;5803:23;5799:32;5796:52;;;5844:1;5841;5834:12;5796:52;5883:9;5870:23;5902:31;5927:5;5902:31;:::i;5968:342::-;6170:2;6152:21;;;6209:2;6189:18;;;6182:30;-1:-1:-1;;;6243:2:13;6228:18;;6221:48;6301:2;6286:18;;5968:342::o;6315:349::-;6517:2;6499:21;;;6556:2;6536:18;;;6529:30;-1:-1:-1;;;6590:2:13;6575:18;;6568:55;6655:2;6640:18;;6315:349::o;6669:766::-;6960:25;;;-1:-1:-1;;;;;7021:32:13;;7016:2;7001:18;;6994:60;7085:2;7070:18;;7063:34;;;7128:2;7113:18;;7106:34;;;7041:3;7171;7156:19;;7149:32;;;7197:19;;7190:35;;;-1:-1:-1;;;;;;7237:31:13;;7234:51;;;7281:1;7278;7271:12;7234:51;7315:6;7312:1;7308:14;7373:6;7365;7359:3;7348:9;7344:19;7331:49;7401:22;;;;7425:3;7397:32;;6669:766;-1:-1:-1;;;;;;;6669:766:13:o;7440:245::-;7507:6;7560:2;7548:9;7539:7;7535:23;7531:32;7528:52;;;7576:1;7573;7566:12;7528:52;7608:9;7602:16;7627:28;7649:5;7627:28;:::i;8048:127::-;8109:10;8104:3;8100:20;8097:1;8090:31;8140:4;8137:1;8130:15;8164:4;8161:1;8154:15;8180:128;8247:9;;;8268:11;;;8265:37;;;8282:18;;:::i;8776:339::-;8978:2;8960:21;;;9017:2;8997:18;;;8990:30;-1:-1:-1;;;9051:2:13;9036:18;;9029:45;9106:2;9091:18;;8776:339::o;10612:184::-;10682:6;10735:2;10723:9;10714:7;10710:23;10706:32;10703:52;;;10751:1;10748;10741:12;10703:52;-1:-1:-1;10774:16:13;;10612:184;-1:-1:-1;10612:184:13:o;13135:168::-;13208:9;;;13239;;13256:15;;;13250:22;;13236:37;13226:71;;13277:18;;:::i;13308:217::-;13348:1;13374;13364:132;;13418:10;13413:3;13409:20;13406:1;13399:31;13453:4;13450:1;13443:15;13481:4;13478:1;13471:15;13364:132;-1:-1:-1;13510:9:13;;13308:217::o;17381:250::-;17466:1;17476:113;17490:6;17487:1;17484:13;17476:113;;;17566:11;;;17560:18;17547:11;;;17540:39;17512:2;17505:10;17476:113;;;-1:-1:-1;;17623:1:13;17605:16;;17598:27;17381:250::o;17636:812::-;-1:-1:-1;;;18042:3:13;18035:38;18017:3;18102:6;18096:13;18118:75;18186:6;18181:2;18176:3;18172:12;18165:4;18157:6;18153:17;18118:75;:::i;:::-;-1:-1:-1;;;18252:2:13;18212:16;;;18244:11;;;18237:40;18302:13;;18324:76;18302:13;18386:2;18378:11;;18371:4;18359:17;;18324:76;:::i;:::-;18420:17;18439:2;18416:26;;17636:812;-1:-1:-1;;;;17636:812:13:o;18453:396::-;18602:2;18591:9;18584:21;18565:4;18634:6;18628:13;18677:6;18672:2;18661:9;18657:18;18650:34;18693:79;18765:6;18760:2;18749:9;18745:18;18740:2;18732:6;18728:15;18693:79;:::i;:::-;18833:2;18812:15;-1:-1:-1;;18808:29:13;18793:45;;;;18840:2;18789:54;;18453:396;-1:-1:-1;;18453:396:13:o;18854:127::-;18915:10;18910:3;18906:20;18903:1;18896:31;18946:4;18943:1;18936:15;18970:4;18967:1;18960:15;18986:127;19047:10;19042:3;19038:20;19035:1;19028:31;19078:4;19075:1;19068:15;19102:4;19099:1;19092:15;19118:135;19157:3;19178:17;;;19175:43;;19198:18;;:::i;:::-;-1:-1:-1;19245:1:13;19234:13;;19118:135::o;19258:125::-;19323:9;;;19344:10;;;19341:36;;;19357:18;;:::i;19388:127::-;19449:10;19444:3;19440:20;19437:1;19430:31;19480:4;19477:1;19470:15;19504:4;19501:1;19494:15;19520:136;19559:3;19587:5;19577:39;;19596:18;;:::i;:::-;-1:-1:-1;;;19632:18:13;;19520:136::o"},"methodIdentifiers":{"ADMIN_ROLE()":"75b238fc","DEFAULT_ADMIN_ROLE()":"a217fddf","MAX_FEE()":"bc063e1a","OWNER_ROLE()":"e58378bb","deleteDeposit(bytes32)":"a54191e2","deposit(bytes32)":"b214faa5","emergencyWithdrawToUser(bytes32)":"a46d1b13","fee()":"ddca3f43","feeRecipient()":"46904840","getDeposit(bytes32)":"7a86983f","getDepositIdAt(uint256)":"b75f5e60","getFee()":"ced72f87","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","hasUserWithdrawn(bytes32,address,uint256)":"3cbf725c","paused()":"5c975abb","recoverERC20(address,address)":"886f039a","recoverEth(address,uint256)":"e72c5717","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setFee(uint256)":"69fe0e2d","setFeeRecipient(address)":"e74b981b","setPaused(bool)":"16c38b3c","shouldTransferEther(bytes32,address,uint256,uint256,bytes32[])":"bf301d84","supportsInterface(bytes4)":"01ffc9a7","totalDeposits()":"7d882097","transferEther(bytes32,address,uint256,uint256,bytes32[])":"34bafb60"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"depositId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"depositId\",\"type\":\"bytes32\"}],\"name\":\"DepositDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"EmergencyPause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"depositId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"EtherTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldRecipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"FeeRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"FeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"depositId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"oldRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newRoot\",\"type\":\"bytes32\"}],\"name\":\"MerkleRootUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"depositId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"WithdrawalExecuted\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OWNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"depositId\",\"type\":\"bytes32\"}],\"name\":\"deleteDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"depositId\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"depositId\",\"type\":\"bytes32\"}],\"name\":\"emergencyWithdrawToUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"depositId\",\"type\":\"bytes32\"}],\"name\":\"getDeposit\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"depositId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct MixerMerkleRoot.Deposit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDepositIdAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"depositId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"hasUserWithdrawn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFeeRecipient\",\"type\":\"address\"}],\"name\":\"setFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"depositId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"shouldTransferEther\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"depositId\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"transferEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"A contract that allows users to deposit ETH and uses per-deposit Merkle proofs to verify withdrawals Uses role-based access control for different permission levels\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor that sets up initial roles\",\"params\":{\"admin\":\"Address to be granted ADMIN_ROLE\"}},\"deleteDeposit(bytes32)\":{\"details\":\"Allows the owner to withdraw a deposit in emergency situations\",\"params\":{\"depositId\":\"The ID of the deposit to withdraw\"}},\"deposit(bytes32)\":{\"details\":\"Allows a user to deposit ETH with a Merkle root\",\"params\":{\"depositId\":\"The Merkle root containing user/amount/releaseTime data\"}},\"emergencyWithdrawToUser(bytes32)\":{\"details\":\"Allows the owner to withdraw a deposit in emergency situations\",\"params\":{\"depositId\":\"The ID of the deposit to withdraw\"}},\"getDeposit(bytes32)\":{\"details\":\"Gets deposit details by deposit ID\",\"params\":{\"depositId\":\"The deposit ID to query\"}},\"getDepositIdAt(uint256)\":{\"details\":\"Returns the deposit ID at the specified index\",\"params\":{\"index\":\"The index to query\"}},\"getFee()\":{\"details\":\"Returns the current fee in basis points\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"hasUserWithdrawn(bytes32,address,uint256)\":{\"details\":\"Checks if a withdrawal has already been made\",\"params\":{\"depositId\":\"The deposit to check\",\"releaseTime\":\"The release time that identifies this withdrawal opportunity\",\"user\":\"The user address to check\"}},\"recoverERC20(address,address)\":{\"details\":\"Allows the owner to set the fee recipient\",\"params\":{\"to\":\"The address to send the recovered tokens to\",\"token\":\"The ERC20 token to recover\"}},\"recoverEth(address,uint256)\":{\"details\":\"Allows the owner to set the fee recipient\",\"params\":{\"amount\":\"The amount of ETH to recover\",\"to\":\"The address to send the recovered eth to\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setFee(uint256)\":{\"details\":\"Allows the owner to set the fee percentage\",\"params\":{\"newFee\":\"The new fee in basis points (100 = 1%)\"}},\"setFeeRecipient(address)\":{\"details\":\"Allows the owner to set the fee recipient\",\"params\":{\"newFeeRecipient\":\"The new fee recipient address\"}},\"setPaused(bool)\":{\"details\":\"Toggles the paused state of the contract\",\"params\":{\"_paused\":\"The new paused state\"}},\"shouldTransferEther(bytes32,address,uint256,uint256,bytes32[])\":{\"details\":\"Checks if a withdrawal can be made\",\"params\":{\"amount\":\"The amount to withdraw\",\"depositId\":\"The deposit ID to check\",\"merkleProof\":\"The Merkle proof to verify the withdrawal\",\"recipient\":\"The recipient address\",\"releaseTime\":\"The release time for the withdrawal\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalDeposits()\":{\"details\":\"Returns the total number of deposits\"},\"transferEther(bytes32,address,uint256,uint256,bytes32[])\":{\"details\":\"Allows an admin to transfer ETH from the contract\",\"params\":{\"amount\":\"The amount of ETH to send\",\"depositId\":\"The ID of the deposit to transfer from\",\"merkleProof\":\"The Merkle proof to verify the withdrawal\",\"recipient\":\"The address to send ETH to\",\"releaseTime\":\"The release time for the withdrawal\"}}},\"title\":\"MixerMerkleRoot\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MixerMerkleRoot.sol\":\"MixerMerkleRoot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"contracts/MixerMerkleRoot.sol\":{\"keccak256\":\"0x4e31b1475ab1a6f62a0bf6897ea63436f96881cb3ac645082b4954a8b126de19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aae2b781ee8cae41709fba04bd87b3833d713d6eed3de9ad28dc016ad63c26f\",\"dweb:/ipfs/Qmd9XZ27ysKdDF2KuGGnCJTmWeKJF5eGHVVq7vAR9fFBqK\"]}},\"version\":1}"}}}}}